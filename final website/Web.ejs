<%
var today = new Date();
var dd = String(today.getDate()).padStart(2, '0');
var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
var yyyy = today.getFullYear();

today = mm + '/' + dd + '/' + yyyy;
let romScale = [
                      {name:"knee",range:150},
                      {name:"shoulder",range:360},
                      {name:"ankle",range:80},
                      {name:"wrist",range:160},
                      {name:"elbow",range:305},
                      {name:"hip",range:240},
                      {name:"forearm",range:100},
                      {name:"spine",range:100}
                    ]

let emg_normative = {
                "wrist_flex":106,
                "wrist_ext":369,
                "elbow_flex":350,
                "elbow_ext":237,
                "shoulder_flex":862,
                "shoulder_ext":213,
                "shoulder_abduction":1088, 
                "shoulder_adduction":284,
                "forearm_pronation":139, 
                "forearm_supination":69,
                'hip_flex':9,
                "hip_ext":9,
                "hip_adduction":116,
                "hip_abduction":9,
                'knee_flex':147,
                'knee_ext':101,
                'ankle_plantarflex':92,
                'ankle_dorsiflex':349,
                'ankle_inversion':157,
                'ankle_eversion':202,
                'thoracic_flex':121,
                'thoracic_lateralflex':75,
                'thoracic_ext':100,
                'thoracic_rot':176,
                'lumbar_flex':314,
                'lumbar_lateralflex':88,
                'lumbar_ext':66,
                'lumbar_rot':93,
                'abdomen_flex':180,
                'abdomen_rot':112,
                'abdomen_lateralflex':111,
}
var romScale1 = {"kneeflexion":140,"kneeextension":140,"shoulderextension":45,"shoulderflexion":180,"shoulderabduction":180,"shoulderadduction":180,"shoulderlateral rotation":90,"shouldermedial rotation":70,"shoulderelevation":40,"shoulderdepression":10,"ankleinversion":40,"ankleeversion":20,"ankleplantarflexion":45,"ankledorsiflexion":20,"wristflexion":80,"wristextension":70,"wristulnar deviation":45,"wristradial deviation":20,"elbowflexion":145,"elbowextension":145,"hipflexion":125,"hipextension":10,"hipabduction":45,"hipadduction":10,"hiplateral rotation":45,"hipmedial rotation":45,"forearmpronation":90,"forearmsupination":90,"spineflexion":75,"spineextension":30,"spinelateral flexion":35,"spinerotation":30,"abdomenflexion":75,"abdomenextension":30,"abdomenlateral flexion":35,"abdomenrotation":30,"lumbarflexion":75,"lumbarextension":30,"lumbarlateral flexion":35,"lumbarrotation":30,"thoracicflexion":75,"thoracicextension":30,"thoraciclateral flexion":35,"thoracicrotation":30,"elbowlateral rotation":90,"elbowmedial rotation":70};

    var left=0
    var right=0;

      function getSessionStatus(bodyPart , trueValue)
      {
        if( trueValue < bodyPart.range*0.333)
        {
          return "Bad" // red
        }if( trueValue > bodyPart.range*0.666) return "Good" // greenb

        return "Average"
        // blue
      }

      function getTrueRange(maxangle,minangle)
      {
        return parseInt(maxangle)-parseInt(minangle);
      }

      function getSessionStatusInt(value)
      {
        if(value==0){
          return "Good" // green
        }
        else if(value==1){
          return "Average"
          // blue
        }
        else{
          return "Bad" // red
        }
      }
  
  function get_name(name)
  {
    result = name.substr(0,1).toUpperCase() + name.substr(1,name.length);
    
    while(result.substr(result.length-1,result.length) == " ")
    {
      result = result.substr(0,result.length-1);
    }
    
    return result;
  }
  
  function getTotalSessionTime()
  {
        let temp = 0;
        report[0].sessiondetails.map((e,i)=>{
           let min = parseInt(e.sessiontime.substring(0,2));
           let sec = parseInt(e.sessiontime.substring(5,7));
           let totalseconds  = (min*60)+sec;
           temp+=totalseconds;
        });

        var h = Math.floor(temp / 3600);
        var m = Math.floor(temp % 3600 / 60);
        var s = Math.floor(temp % 3600 % 60);
        var hDisplay = h > 0 ? h + (h == 1 ? "h" : " h:") : "";
        var mDisplay = m > 0 ? m + (m == 1 ? "m:" : "m:") : "00m: ";
        var sDisplay = s > 0 ? s + (s == 1 ? "s" : "s") :"00s";
        return hDisplay + mDisplay + sDisplay; 
      }

      function get_date()
      {
        let temp = 0;
    var first_part;
    var second_part;

     let Overall_session = JSON.parse(JSON.stringify(overallreport[0].sessiondetails));
     
     var sesssion_list=[];
      var session_list_key={};

    Overall_session.forEach((element)=>{
          if(typeof(element.heldon)!='undefined')
          {
            if(!(element.heldon.substr(0,10) in session_list_key))
            {
              session_list_key[element.heldon.substr(0,10)] = 0;
              sesssion_list.push(element.heldon.substr(0,10));
            }
          }
         });

    if(typeof(sesssion_list[sesssion_list.length-2])!='undefined')
    {
     first_part = new Date(sesssion_list[sesssion_list.length-2]).toDateString().split(' ').slice(1).join(' ');
    second_part = new Date(sesssion_list[sesssion_list.length-2]).toDateString().substring(0,3);
    }else
    {
    return "-";
    }
    
        return first_part; 
      }
  

  function get_session_recording(bodypart,exercisename,orientation,musclename,heldon)
  {
     let Overall_session = JSON.parse(JSON.stringify(overallreport[0].sessiondetails));
     let counter = 0;
     let final=0;
     Overall_session.forEach((element)=>{
         if(element.bodypart.toLowerCase()==bodypart.toLowerCase() && element.exercisename.toLowerCase()==exercisename.toLowerCase() && element.orientation.toLowerCase()==orientation.toLowerCase() && element.musclename.toLowerCase()==musclename.toLowerCase()){
          counter= counter+1
      if(element.heldon == heldon)
      {
        final = counter;
        return final;
        
      }
          }
         });
    return final;
       
  }
  
  function get_hold_time(holdtime)
  {
  
    var secounds = holdtime.split(":");
    var int_min = parseInt(secounds[0].replace('m',''));
    var int_secounds = parseInt(secounds[1].replace('s',''));

    if(int_min > 0){ 
      return int_min + 'm'+ ':' + int_secounds + 's'
    }else
    {
      return int_secounds + 's'
    }
  
  }

      function increasedRom(min,max,lastmin,lastmax)
      {
        var a = parseInt(max)-parseInt(min);
        var b = parseInt(lastmax)-parseInt(lastmin);
        var c =a-b
        return c;
      }

      function Gained_Rom(max,min,i)
      {
        var a = parseInt(max)-parseInt(min);
        var b = parseInt(lastsessions[i].maxangle)-parseInt(lastsessions[i].minangle);

        result = a;

        if(result>360)
          {
            result= 360;
          }

        if(result<0)
        {
          return 0
        }else if(isNaN(result))
        {
          return 0
        }
        else{

          return result;
        }
       
      }
      

      function increasedEmg(max, lastmax)
      {
        return parseInt(max)-parseInt(lastmax);
      }


      function get_avgMaxEmg(heldon)
      {
        let vartemp="";
        for(let i =0; i < python_variables.length;i++)
        {

          if(python_variables[i].download_time_stamp == heldon)
          {
            return Math.round(python_variables[i].avgmaxemg) 
          }
          // vartemp = python_variables[i].download_time_stamp
        }
        return "-"
        
      }
      
      // For getting max ROM
      function get_MaxROM(heldon)
      {
        let vartemp="";
        for(let i =0; i < python_variables.length;i++)
        {

          if(python_variables[i].download_time_stamp == heldon)
          {
            return Math.round(python_variables[i].rom_max)+"째"
          }
          // vartemp = python_variables[i].download_time_stamp
        }
        return "-"
        
      }

      function get_avgMaxROM(heldon)
      {
        let vartemp="";
        for(let i =0; i < python_variables.length;i++)
        {

          if(python_variables[i].download_time_stamp == heldon)
          {
            return Math.round(python_variables[i].rom_avg_max)+"째"
          }
          // vartemp = python_variables[i].download_time_stamp
        }
        return "-"
        
      }
      
      // For getting min ROM
      function get_MinROM(heldon)
      {
        let vartemp="";
        for(let i =0; i < python_variables.length;i++)
        {

          if(python_variables[i].download_time_stamp == heldon)
          {
            return Math.round(python_variables[i].rom_min)+"째"
          }
          // vartemp = python_variables[i].download_time_stamp
        }
        return "-"
        
      }


      function get_avgMinROM(heldon)
      {
        let vartemp="";
        for(let i =0; i < python_variables.length;i++)
        {

          if(python_variables[i].download_time_stamp == heldon)
          {
            return Math.round(python_variables[i].rom_avg_min)+"째"
          }
          // vartemp = python_variables[i].download_time_stamp
        }
        return "-"
        
      }

     function get_Speed(heldon,activetime,reps)
     {
        let vartemp="";
        var active_time_list = activetime.split(':');
        var active_min = parseInt(active_time_list[0].replace('m',''));
        var active_sec = parseInt(active_time_list[1].replace('s',''));

        var active_time_total = active_min*60 + active_sec;
        var result = parseInt(reps)/active_time_total;
        result =Math.round(result * 100) / 100

        if(isNaN(result))
        {
          return 0 + 'reps/s'
        }else if(result=='Infinity'){
          return '-' + 'reps/s';
        }else {
          return result + 'reps/s';
        }
        for(let i =0; i < python_variables.length;i++)
        {

          if(python_variables[i].download_time_stamp == heldon)
          {
            return python_variables[i].velocity + 'reps/s'
          }
          // vartemp = python_variables[i].download_time_stamp
        }
        return "-"
        
      }

      function overallRom(max, min)
      {
        // Max and Min is negative
        // if(parseInt(min)<0 && parseInt(max)<0)
        // {
        //   return 0;
        // }

        // if(parseInt(min)<0 && parseInt(max)>0)
        // {
        //   return parseInt(max);
        // }


        var result = parseInt(max)-parseInt(min);

        if(result>360)
        {
          result = 360;
        }

        if(result>0){
          return result;
        }
        else return 0;
      }

      function overallRompie(max, min)
      {
        // Max and Min is negative
        

      


        var result = parseInt(max)-parseInt(min);

        if(result>360)
        {
          result = 360;
        }

        if(result>0){
          return result;
        }
        else return result;
      }

      
  
  function overallRom_goalreached(max, min,ideal,heldon)
  {
        // Max and Min is negative

         for(let i =0; i < python_variables.length;i++)
        {

          if(python_variables[i].download_time_stamp == heldon)
          {
            max= python_variables[i].rom_max;
            min= python_variables[i].rom_min;
          }
          // vartemp = python_variables[i].download_time_stamp
        }

        // if(parseInt(min)<0 && parseInt(max)<=0)
        // {
        //   return 0;
        // }

        // if(parseInt(min)>=parseInt(ideal))
        // {
        //     return 0;
        // }

        // if(parseInt(min)<0 && parseInt(max)>0)
        // {
        //   return parseInt(max);
        // }
    
    


        var result = parseInt(max)-parseInt(min);

        if(result>360)
        {
          result = 360;
        }

        if(result>0){
          return result;
        }
        else return 0;
      }

function get_holdangle(holdangle)
{

        if (parseInt(holdangle)>0){
        return holdangle+'째';
        }
        else return "-";
      }


      function joint_range(body,exercisename)
      {

        if (romScale1.hasOwnProperty(body.concat(exercisename))) {
        return romScale1[body.concat(exercisename)];
        }
        else return 0;
      }

      function pie_range(user_angle,range)
      {
        var result = parseInt(360)-parseInt(user_angle);

        if(result < 0)
        {
          return 0;
        }
        else return result;
      }

        function getOverall_goalreached()
        {
       
        let total_goal=0;
        let counter=0;

        over_goal_reached=[];




        report[0].sessiondetails.map((e,i)=>{

           report[0].sessiondetails.map((h,j)=>{

           if(python_variables[j].download_time_stamp==e.heldon)
            {
              let range = joint_range(e.bodypart.toLowerCase(),e.exercisename.toLowerCase())

              
              let user_range = overallRom(python_variables[j].rom_max,python_variables[j].rom_min);
              if(user_range>range)
              {
                user_range = range;
                
              }
              if(range!=0)
              {
                goal_percentage = (user_range/range)*100;
                
              }else goal_percentage=100;
            over_goal_reached.push(goal_percentage);

            total_goal = total_goal + goal_percentage;
            counter = counter+1;

            }
          });       
         
        });



        if(counter>0)
        {
        return Math.round(total_goal/counter); 
      }else return 0;
    }

       function goalreached(ideal,user)
       {
        if(user<ideal)
        {
       return Math.round((user/ideal)*100);
       }
       else
        return 100;
       
      }



function calcTime() 
{


  // Offset for Bombay City
   var offset = +0;
  // create Date object for current location
  var d = new Date(report[0].sessiondetails[0].heldon);


  // convert to msec
  // subtract local time zone offset
  // get UTC time in msec
  var utc = d.getTime() + (d.getTimezoneOffset() * 60000);

  // create new Date object for different city
  // using supplied offset
  var nd = new Date(utc + (3600000*offset));
  var nd_array = nd.toLocaleString().split(',');
  var time = nd_array[1];
  var am_pm = time.split(" ");
  var am_pm_string = am_pm[2];
  var time_array  = time.split(":")
  var result = time_array[0] + ":" + time_array[1]+ " "  +am_pm_string;

  // return time as a string
  return result;
}
function comparision_Rom(min,max,last_min,last_max)
{
      var a= max-min;
      var b= last_max-last_min;
      var c= a-b;
      if(c>0)
      {
        return "There is an increment in the ROM compared to your previous session by " + c + "째 .";
      }  
      else if(c<0)
      {
        c= b-a;
        return "There is a decrement in the ROM compared to your previous session by " + c + "째 .";
      }
      else
      {
        return "The ROM is been constant compared to your previous session."
      }
}
function coordination(coordination,exercisename,side,bodypart)
{
  if(coordination>0)    
  return "Your " + side+" "+ bodypart + " " + exercisename + " movement is " + coordination + "% " + "coordinated."
 else
 return "The coordination is very poor."
}

function control_(control,exercisename,side,bodypart)
{
  if(control>0)    
  return "Your " + side+" "+ bodypart + " " + exercisename + " movement is " + coordination + "% " + "controlled."
 else
 return "The control is very poor."
}

function consistency(consist,exercisename,side,bodypart)
{
  if(consist>0)    
  return "Your " + side+" "+ bodypart + " " + exercisename + " movement has a consistency of "+ consist + "% . " 
 else
 return "The consistency is very poor."
}

function comparision_Emg(max,last_max)
{
      var a= max-last_max;
     
      if(a>0)
      {
        return "There is an increment in the EMG compared to your previous session by " + a + " uV.";
      }  
      else if(a<0)
      {
        a=last_max-max;
        return "There is a decrement in the EMG compared to your previous session by " + a + " uV.";
      }
      else
      {
        return "The EMG is been constant compared to your previous session."
      }
}
function getline(time) 
{
  var secounds = time.split(":");
   var int_min = parseInt(secounds[0].replace('m',''));
   var int_secounds = parseInt(secounds[1].replace('s',''));
  if(int_secounds>30 || int_min>1)
  {
    return "*Displayed graph is recorded for first 30 seconds only.";
  }
  return ' ';
 

    
}
function get_recordedtime(time)
{
  var secounds = time.split(":");
   var int_min = parseInt(secounds[0].replace('m',''));
   var int_secounds = parseInt(secounds[1].replace('s',''));
  if (int_min<10)
  {
    int_min="0"+int_min;
  }
  if(int_secounds<10 && int_min>=1)
  {
    int_secounds="0"+int_secounds;
  }
   if(int_min > 0){
    return int_min + 'm'+ ':' + int_secounds + 's';
   }else if(int_min <= 0 && int_secounds > 30)
   {
    return int_secounds + 's';
  }else
  {
    return int_secounds + 's'
  }

  
}




//function for pheezee score starts here

function pheezee_score(x,arr){

//const len = arr.length;
  //var statements =' ';
  //var avg_arr = [];

 let consist = Number(x.consistency);
 let smooth = Number(x.smoothness);
 let contrl = Number(x.controlled);
 if(contrl>5){
  contrl=5;
 }
 let coord = Number(x.coordination);
 let avg_value = 0;

 if (x.type_of=='ni'){

avg_value = (consist+smooth+contrl+coord)/4;
 avg_value = Math.round((avg_value/5) * 100) //avg_arr.push(avg_value);
}

 else{

  avg_value= (consist+smooth+contrl)/3;
  avg_value = Math.round((avg_value/5) * 100)
 //avg_arr.push(avg_value);
}

return avg_value;
}

//function for removing duplicate starts here

 function RemoveDupli(arr){
     arr.map(function (x,i){

    arr.map(function (y,j){
        if (arr[j].bodypart==arr[i].bodypart && arr[j].orientation==arr[i].orientation && arr[j].exercisename==arr[i].exercisename && arr[j].musclename==arr[i].musclename && arr[i].sessiontype == 'Active'){
            
            if (arr[j].maxemg>arr[i].maxemg){
                arr.splice(i,1);
            }
                else if(arr[j].maxemg<arr[i].maxemg) {
                    arr.splice(j,1);
                }
            }
        }
)
}
)
return arr;
 }

 //function for removin duplicate ends here


// function for new statements hypermobility, muscle activity, repeat session starts here


function lastsessionemg(lastsession,maxemg){
  let session_data = lastsession;
  let current_session_max_rom = session_data.map(function(x) { return x.maxemg; });
  current_session_max_rom.push(maxemg);
  console.log("lastsession_kranthi",current_session_max_rom);
  return current_session_max_rom;
}


function lastsessionrom(lastsession,maxangle,minangle){
  let session_data = lastsession;
  let current_range_gained;
  let last_range_gained;
  let arrROM=[];

  session_data.map(function(x,i){

  if((x.maxangle>0 && x.minangle>0)|| (x.maxangle<0 && x.minangle<0 )){ 
    last_range_gained=Math.abs(Math.abs(x.maxangle)-Math.abs(x.minangle));
}

else{
  last_range_gained=Math.abs(x.maxangle);
}
arrROM.push(Number(last_range_gained));
})


if((maxangle>0 && minangle>0)|| (maxangle<0 && minangle<0 )){ 
  current_range_gained=Math.abs(Math.abs(maxangle)-Math.abs(minangle));
}
else{
  current_range_gained=Math.abs(maxangle);
}

arrROM.push(Number(current_range_gained));
console.log("current_range_gained",arrROM)
  return arrROM;
}



function hypermobility(arr,arr1)
{
 
  try {
  if (arr1!=0){
    
    let Statments="";
    var date1 = new  Date(arr1[0].heldon);
    var date2 = new  Date(arr[0].heldon);
    var Difference_In_Time = date2.getTime() - date1.getTime();
    var Difference_In_Days = Math.ceil(Difference_In_Time / (1000 * 3600 * 24));
    
    
   arr = getnewtable(arr);
    //arr = RemoveDupli(arr);
    arr1 = getnewtable(arr1);
    //arr1 = RemoveDupli(arr1);

arr.map(function (x,i){
    arr1.map(function (y,j){
        

        if (arr1[j].bodypart==arr[i].bodypart &&  arr1[j].exercisename==arr[i].exercisename && arr1[j].musclename==arr[i].musclename && arr[i].exercisename!='Isometric'){

            
          if(arr1[j].orientation==arr[i].orientation ){
        
            var current_normal_rom=arr[i].maxangleselected-arr[i].minangleselected;


            //algorithm for getting good ROM  for current session

            if((arr[i].maxangle>0 && arr[i].minangle>0)|| (arr[i].maxangle<0 && arr[i].minangle<0)){
                
              var current_range_gained=Math.abs(arr[i].maxangle)-Math.abs(arr[i].minangle);
          }
          
          else{
              var current_range_gained=Math.abs(arr[i].maxangle);
          }
          
          
         // algorithm for getting good ROM  for last session
          if((arr1[j].maxangle>0 && arr1[j].minangle>0)|| (arr1[j].maxangle<0 && arr1[j].minangle<0 )){
              
              var last_range_gained=Math.abs(arr1[j].maxangle)-Math.abs(arr1[j].minangle);
          }
          
          else{
              var last_range_gained=Math.abs(arr1[j].maxangle);
          }
            
            
            
            var current_ROMValue =  (Number(current_range_gained)/Number(current_normal_rom) * 100);
            
            var  last_ROMValue = (Number(last_range_gained)/Number(current_normal_rom) * 100);
            var range_gained_change = Math.floor(current_ROMValue)-Math.floor(last_ROMValue);
            
            var joint_exercise_muscle = "\n  For "+ arr[i].bodypart + " joint " + arr[i].exercisename + " movement,\n";
    
            
            
            
          
             var current_EMG=arr[i].maxemg;
             
             var last_EMG=arr1[j].maxemg;
             
             var EMG_value_change = Math.floor(current_EMG)-Math.floor(last_EMG);
            
            

            Statments=Statments+joint_exercise_muscle;
    
            if ( range_gained_change<0){
                let ROMStat = "\n The joint mobility of "+arr[i].orientation+" side decreased from " + Math.floor(last_ROMValue) + "% to " + Math.floor(current_ROMValue) +"% of healthy ROM in " + Difference_In_Days + " days. " 
            Statments=Statments+ROMStat;
               
                    
            }
            
            else if (range_gained_change>0){
                
              let ROMStat = "\n The joint mobility of "+arr[i].orientation+" side increased from " + Math.floor(last_ROMValue) + "% to " + Math.floor(current_ROMValue) +"% of healthy ROM in " + Difference_In_Days + " days."
            
              Statments=Statments+ROMStat;
            }

            else{
              let ROMStat = "\n The joint mobility of "+arr[i].orientation+" side did not change";
            
              Statments=Statments+ROMStat;
            }
          
          if ( EMG_value_change<0){
          
          EMGStat = "\n The EMG of "+arr[i].orientation+" side decreased from "+ Number(last_EMG) + "uV to " + Number(current_EMG) + "uV in " + Difference_In_Days + " days.";
          Statments=Statments+EMGStat;
          
          }
          else if (EMG_value_change>0){
          EMGStat = "\n The EMG of "+arr[i].orientation+" side increased from "+ Number(last_EMG) + "uV to " + Number(current_EMG) + "uV in " + Difference_In_Days + " days.";
          Statments=Statments+EMGStat;
          }
          else{
            EMGStat = "\n The EMG of "+arr[i].orientation+" side did not change";
            Statments=Statments+EMGStat;
          }




        }
        
        //end of same side loop

        //start of opposite side loop
        
         if ( arr[i].orientation=='Left' && arr1[j].orientation=="Right" ){
        
           
          var last_ref_EMG=arr1[j].maxemg;
          var current_EMG=arr[i].maxemg;
          var current_ref_EMG_change =  (Number(current_EMG)/Number(last_ref_EMG) * 100);


          
          //var EMGStat = "\n The current max EMG of "+arr[i].orientation+" side is "  + Math.floor(current_ref_EMG_change)+"% of its reference side. "
          //Statments=Statments+EMGStat;

          if (current_ref_EMG_change<100){

          
            var EMGStat = "\n The current EMG of "+arr[i].orientation+" side is weaker than its reference side.";
          }
  
          else{
  
            var  EMGStat = "\n The EMG of "+arr[j].orientation+" side is weaker than its reference side.";
  
          }





          if((arr[i].maxangle>0 && arr[i].minangle>0)|| (arr[i].maxangle<0 && arr[i].minangle<0)){
                
            var current_ROM=Math.abs(arr[i].maxangle)-Math.abs(arr[i].minangle);
        }
        
        else{
            var current_ROM=Math.abs(arr[i].maxangle);
        }
        
        
        
        if((arr1[j].maxangle>0 && arr1[j].minangle>0)|| (arr1[j].maxangle<0 && arr1[j].minangle<0)){
            
            var last_ref_ROM=Math.abs(arr1[j].maxangle)-Math.abs(arr1[j].minangle);
        }
        
        else{
            var last_ref_ROM=Math.abs(arr1[j].maxangle);
        }

        
          var current_ref_ROM_change =  (Number(current_ROM)/Number(last_ref_ROM) * 100);
        
          if (current_ref_ROM_change<100){

          
          var ROMStat = "\n The current ROM of "+arr[i].orientation+" side is weaker than its reference side.";
        }

        else{

          var ROMStat = "\n The current ROM of "+arr[i].orientation+" side is stronger than its reference side.";

        }
          
          Statments=Statments+EMGStat+ROMStat;
            
          
      }
        }
}
  )
}
)
  return Statments;
}


}
catch(err) {
  let Statments2 = err;
  return Statments2;
}
}

function healthysideDir(orientation)
{
    if(orientation == 'Right')return 'Left';
    else return 'Right';
}

function firstWeekFunction(orientation,bodypart,exercisename,musclename,heldon,arr,arr1){
  var week_date1 =new  Date(heldon);
  var week_date2 =0;
  var diff_In_Weeks;
  for(let j=0; j<arr1.length; j++){
    if(arr1[j].orientation==orientation && arr1[j].bodypart==bodypart &&  arr1[j].exercisename==exercisename && arr1[j].musclename==musclename && exercisename!='Isometric'){   
       week_date2 =new  Date(arr1[j].heldon);
    }
    break;
  }
  if(week_date2==0 )
  { diff_In_Weeks = 0; } else{
  var diff_In_Time =  week_date1.getTime() - week_date2.getTime();
  var diff_In_Days = Math.ceil (diff_In_Time / (1000 * 3600 * 24));
 diff_In_Weeks =  Math.floor(diff_In_Days/ 7);
  //diff_In_Weeks=week_date2;
  }
return {
  firstweek: diff_In_Weeks,
  };
}

function kranhti(arrr){
  let phani =arrr;
  console.log(phani,"Kranthi123");
  return phani; 
}



function firstImageFunction(orientation,bodypart,exercisename,musclename,arr,arr1,affected,arr2) {
  var img_id="";
  var img_name="";
  var data_label="";

        if(affected == orientation ) { 
          img_id="sny";
          for(let j=0; j<arr1.length; j++){
          if(arr1[j].bodypart==bodypart &&  arr1[j].exercisename==exercisename && arr1[j].musclename==musclename ){

            if(arr1[j].orientation != orientation ){
              img_id="syy";
            }
            for(let i=0; i<arr.length; i++){
              if(arr[i].orientation != orientation && arr[i].bodypart==bodypart &&  arr[i].exercisename==exercisename && arr[i].musclename==musclename ){
                img_id="syy";
              }
            }
        
           }
          }

          if(arr2==0 ) { 
          for(let i=0; i<arr.length; i++){
            if(arr[i].orientation != orientation && arr[i].bodypart==bodypart &&  arr[i].exercisename==exercisename && arr[i].musclename==musclename ){
              img_id="syy";
            }
          }
        }
        } 

        if(affected != orientation && affected!="Bi-Lateral"){
          img_id="oy";
        }

        if(affected=="Bi-Lateral"){
          img_id="bny";

          for(let j=0; j<arr1.length; j++){
            if(arr1[j].bodypart==bodypart &&  arr1[j].exercisename==exercisename && arr1[j].musclename==musclename ){
  
              if(arr1[j].orientation != orientation ){
                img_id="byy";
              }
              for(let i=0; i<arr.length; i++){
                if(arr[i].orientation != orientation && arr[i].bodypart==bodypart &&  arr[i].exercisename==exercisename && arr[i].musclename==musclename ){
                  img_id="byy";
                }
              }
          
             }
            }
  
            if(arr2==0 ) { 
            for(let i=0; i<arr.length; i++){
              if(arr[i].orientation != orientation && arr[i].bodypart==bodypart &&  arr[i].exercisename==exercisename && arr[i].musclename==musclename ){
                img_id="byy";
              }
            }
          }
        }
       

   
   if(img_id=="syy"){
    if(orientation=="Left"){
      img_name=bodypart+"_GREEN"+"-RED";
    } else if(orientation=="Right"){
        img_name=bodypart+"_RED"+"-GREEN";
    }
} else if(img_id=="sny"){
    if(orientation=="Left"){
      img_name=bodypart+"_GREY"+"-RED";
        data_label="*good side data not available";
    } else if(orientation=="Right"){      
        img_name=bodypart+"_RED"+"-GREY";
        data_label="*good side data not available";
    }        
} else if(img_id=="oy"){
    if(orientation=="Left"){
      img_name=bodypart+"_NO"+"-GREEN";
    } else if(orientation=="Right"){
      img_name=bodypart+"_GREEN"+"-NO";
    }        
} else if(img_id=="byy"){
  img_name=bodypart+"_RED"+"-RED";
} else if(img_id=="bny"){
  if(orientation=="Left"){
    img_name=bodypart+"_GREY"+"-RED";
      data_label="*good side data not available";
  } else if(orientation=="Right"){      
      img_name=bodypart+"_RED"+"-GREY";
      data_label="*good side data not available";
  }   
} 

if(!affected){
  data_label="*Please update the affected side in the edit patient";
  img_name="Full_default";
}

return {
firstimage: img_name,
firstdatalabel:data_label,
};
}


function zeroEMGtable(orientation,bodypart,exercisename,musclename,maxemg,arr,affected){
  var zero_goodside_emg=0;
  var zero_goodside=0;
  var zero_goodside_emguv="-";
  if(affected == orientation || affected=="Bi-Lateral") { 
  for(let i=0; i<arr.length; i++){
    if(arr[i].orientation != orientation && arr[i].bodypart==bodypart &&  arr[i].exercisename==exercisename && arr[i].musclename==musclename ){
      zero_goodside_emg=Number(arr[i].maxemg);
      zero_goodside = Math.floor((Number(maxemg)/zero_goodside_emg)*100);
      if(zero_goodside < 25){zero_goodside="Needs Attention"} 
      else if(zero_goodside <= 50){zero_goodside="Fair"} 
      else if(zero_goodside <= 75){zero_goodside="Good"} 
      else{zero_goodside="Excellent"}

    }
  }
}
if(zero_goodside_emg > 0 ){zero_goodside_emguv=zero_goodside_emg+" uV"}
if(zero_goodside_emg == 0 ){zero_goodside_emg="-"}
if(zero_goodside == 0 ){zero_goodside="-"}

return{
  zerogood:zero_goodside_emg,
  zeropercent:zero_goodside,
  zerouv:zero_goodside_emguv
}

}

<!-- Healthy Rom  Start-->
function zeroROMtable(orientation,bodypart,exercisename,musclename,maxrom,arr,affected){
  var zero_goodside_rom=0;
  var zero_goodside=0;
  var zero_goodside_romdeg="-";
  if(affected == orientation || affected=="Bi-Lateral") { 
  for(let i=0; i<arr.length; i++){
    if(arr[i].orientation != orientation && arr[i].bodypart==bodypart &&  arr[i].exercisename==exercisename && arr[i].musclename==musclename ){
      zero_goodside_rom=Number(arr[i].maxrom);
      zero_goodside = Math.floor((Number(maxrom)/zero_goodside_rom)*100);
      if(zero_goodside < 25){zero_goodside="Needs Attention"} 
      else if(zero_goodside <= 50){zero_goodside="Fair"} 
      else if(zero_goodside <= 75){zero_goodside="Good"} 
      else{zero_goodside="Excellent"}
    }
  }
}
if(zero_goodside_rom > 0 ){zero_goodside_romdeg=zero_goodside_rom+" %"}
if(zero_goodside_rom == 0 ){zero_goodside_rom="-"}
if(zero_goodside == 0 ){zero_goodside="-"}

return{
  zerogood:zero_goodside_rom,
  zeropercent:zero_goodside,
  zerouv:zero_goodside_romdeg
}

}

<!-- healthy Rom End -->


function eeshan_firstEMGtable(orientation,bodypart,exercisename,musclename,maxemg,arr,arr1,af) {
  var current_side=orientation;
  var affected_side=af;

  var goodside = 0;
  var cur_goodside_emg=0;
  var goodside_emg=0;
  var baseline_emg=0;
  var baseline_goodside=0;
  var arrow_id="";
  var arrow_color="";
  var new_emg_level;
  var new_emg_uv="-";

    for(let i=0; i<arr.length; i++){
  if(arr[i].orientation != orientation && arr[i].bodypart==bodypart &&  arr[i].exercisename==exercisename && arr[i].musclename==musclename ){
    cur_goodside_emg=Number(arr[i].maxemg);
  }
}

  if(arr1!=0 )
  {

if(affected_side == current_side ) { 
  for(let j=0; j<arr1.length; j++){
  if(arr1[j].bodypart==bodypart &&  arr1[j].exercisename==exercisename && arr1[j].musclename==musclename ){
    if(arr1[j].orientation==orientation ){
         baseline_emg=Number(arr1[j].maxemg); 
    }

    if(arr1[j].orientation != orientation ){
      goodside_emg=Number(arr1[j].maxemg);
    }
   }
  }
    if(cur_goodside_emg > goodside_emg){
     goodside_emg=cur_goodside_emg;
    }

    if(goodside_emg !=0){
       goodside = Math.floor((Number(maxemg)/goodside_emg)*100);
         baseline_goodside=Math.floor((baseline_emg/goodside_emg)*100);
    }
   if(goodside >100){goodside="Healthy"}
   if(baseline_goodside > 100){baseline_goodside="Healthy"}    

} 

else if(affected_side != current_side && affected_side!="Bi-Lateral") {
  for(let j=0; j<arr1.length; j++){
    if(arr1[j].orientation==orientation && arr1[j].bodypart==bodypart &&  arr1[j].exercisename==exercisename && arr1[j].musclename==musclename ){
         baseline_emg=Number(arr1[j].maxemg);
    }
  }
}

else if(affected_side=="Bi-Lateral") {
  for(let j=0; j<arr1.length; j++){
    if(arr1[j].bodypart==bodypart &&  arr1[j].exercisename==exercisename && arr1[j].musclename==musclename ){
      if(arr1[j].orientation==orientation ){
           baseline_emg=Number(arr1[j].maxemg); 
      }
  
      if(arr1[j].orientation != orientation ){
        goodside_emg=Number(arr1[j].maxemg);
      }
     }
    }
      if(cur_goodside_emg > goodside_emg){
       goodside_emg=cur_goodside_emg;
      }
  
      if(goodside_emg !=0){
         goodside = Math.floor((Number(maxemg)/goodside_emg)*100);
           baseline_goodside=Math.floor((baseline_emg/goodside_emg)*100);
      }
     if(goodside >100){goodside="Healthy"}
     if(baseline_goodside > 100){baseline_goodside="Healthy"} 

}
  


}
if(goodside_emg > 0){new_emg_uv=goodside_emg+" uV"}
if(Number(baseline_emg)>Number(maxemg)){arrow_id="Red-Downward"; arrow_color="#D22424";}else{arrow_id="Green-Upward"; arrow_color="#00B286";}
if(baseline_emg == 0){baseline_emg="-"};
if(goodside_emg == 0){goodside_emg="-"}
if(goodside == 0){goodside="-"}
if(baseline_goodside == 0){baseline_goodside="-"}

  return {
innerfirst: goodside,
innersecond: goodside_emg,
innerthird: baseline_emg,
innerbasegood: baseline_goodside,
innerarrow: arrow_id,
innerarrowcol: arrow_color,
innernew_emg_uv:new_emg_uv,
  };
} 




function mmtFunction(mmt_grade){
 var mmtLevel="";
if(mmt_grade=="0" || mmt_grade==""){
    mmtLevel='No Movement'
} else if(mmt_grade=="1" || mmt_grade=="1+"){
    mmtLevel='Slight Movement'
} else if(mmt_grade=="2" || mmt_grade=="2+"){
    mmtLevel='Movement without Resistance'
} else if(mmt_grade=="3" || mmt_grade=="3+"){
    mmtLevel='Movement against Gravity'
} else if(mmt_grade=="4" || mmt_grade=="4+"){
    mmtLevel='Movement with Resistance'
} else if(mmt_grade=="5"){
    mmtLevel='Normal Strength'
} 
return mmtLevel;
}


function firstROMtable(orientation,bodypart,exercisename,musclename,arr,arr1,maxangle,minangle,maxselected){
  var baseline_goodside_rom=0;
  var goodside_rom=0;
  var baseline_rom=0;
  var cur_rom=0;
  var rom_arrow_id="";
  var rom_arrow_color=""; 

 
  if(( maxangle>0 && minangle>0 )|| (maxangle<0 && minangle<0 ) ){    
    cur_rom=Math.abs(maxangle)-Math.abs(minangle);
    cur_rom = Math.abs(cur_rom);
  } else{
    cur_rom=Math.abs(maxangle)+Math.abs(minangle);
  }

  goodside_rom=Math.floor((Number(cur_rom)/Number(maxselected))*100);
  if( goodside_rom>100 ){ goodside_rom="Healthy"}

  if(arr1!=0 ){
    arr1.map(function (y,j){

  if(arr1[j].orientation==orientation && arr1[j].bodypart==bodypart &&  arr1[j].exercisename==exercisename && arr1[j].musclename==musclename && exercisename!='Isometric'){
    if((arr1[j].maxangle>0 && arr1[j].minangle>0)|| (arr1[j].maxangle<0 && arr1[j].minangle<0 ) ){             
      baseline_rom=Math.abs(arr1[j].maxangle)-Math.abs(arr1[j].minangle);
    } else{
      baseline_rom=Math.abs(arr1[j].maxangle)+Math.abs(arr1[j].minangle);
    }
   baseline_goodside_rom=Math.floor((baseline_rom/Number(maxselected))*100)
  if( baseline_goodside_rom>100 ){baseline_goodside_rom="Healthy"}
  } 
})

  }

  if(cur_rom < baseline_rom){rom_arrow_id="Red-Downward"; rom_arrow_color="#D22424";}else{rom_arrow_id="Green-Upward"; rom_arrow_color="#00B286";}
return{
  innerbaserom:baseline_rom,
  innergoodrom:goodside_rom,
  innerbasegoodrom: baseline_goodside_rom,
  innercurrom: cur_rom,
  innerromarrow: rom_arrow_id,
  innerromarrowcol: rom_arrow_color,
};
}






function patientage(dob){
  let dateofbirth = dob;


  if(dateofbirth.length > 3){
  var from = dateofbirth.split("/");
var birthdateTimeStamp = new Date(from[2], from[1] - 1, from[0]);
var cur = new Date();
var diff = cur - birthdateTimeStamp;
// This is the difference in milliseconds
var currentAge = Math.floor(diff/31557600000);
  return Number(currentAge);
  }
  else {
    return dateofbirth;
  }
}

function getnewtable(data){
  function removeDuplicates(inputArray) {
    let outputArray = [];
  
    inputArray.forEach((item) => {
      const duplicateItem = outputArray.find(
        (i) =>  i.bodypart === item.bodypart && i.exercisename === item.exercisename && i.orientation === item.orientation && i.musclename === item.musclename
      );
  
      if (duplicateItem) {
        if (item.maxemg > duplicateItem.maxemg) {
          outputArray = outputArray.map((i) =>
            i === duplicateItem ? item : i
          );
        }
      } else {
        outputArray.push(item);
      }
    });
  
    return outputArray;
  }
  let return_value = removeDuplicates(data)
  return return_value;
}

function heldon_date_array(helod_date){
  const currentYear = new Date().getFullYear();
  let heldon_date_values = helod_date;
  let heldon_date_values_sessionA =  heldon_date_values.map(function(x){return x.heldon})
  let heldon_date_values_arrA=[...new Set(heldon_date_values_sessionA)];
  let heldon_date_values_session =  heldon_date_values.map(function(x){return x.heldon.split(" ") [0]})
  let heldon_date_values_arr=[...new Set(heldon_date_values_session)];

  return heldon_date_values_arrA;
}

function report_new_page(get_session_recording){

  let kranthi_session = get_session_recording;

  var filter_data_json = [];

for (var i = 0; i < kranthi_session.length; i++) {
  var obj = kranthi_session[i];
  var arrElement = [
    obj.bodypart,
    obj.musclename,
    obj.orientation,
    obj.exercisename,
    obj.maxangle,
    obj.maxemg
  ];
  filter_data_json.push(arrElement);
}

console.log("55555555555555555555555555555555555555555",filter_data_json);
return filter_data_json;

}


function hypermobility_no(current_session,arr2){
  let result = current_session.map(function(x) { return x.sessiondetails; });
  let arr = result.flat();
  const lastsession_array = arr2;
  const isAllZero = lastsession_array.every(item => item === 0);

  let Statments = "";
  let Statments_arr=[];

if(isAllZero == true){

  <!-- arr =getnewtable(arr); -->
  //arr = RemoveDupli(arr);
  
  <!-- if(isAllZero == "true"){} -->
  arr.map(function (x,i){
    
    <!-- Statments=""; -->
    if(x.exercisename == 'Isometric'){
      Statments = Statments +' ' ;
    }
  
    //Flexion Starts here 

    if(x.exercisename == 'Flexion'){

    

    if (x.musclename=='Deltoid'){
      normEMG = 680;
      EMG = Number(x.maxemg);
    
     let EMGval= Math.floor((EMG/normEMG) * 100) ;
     if (EMGval!=0){
     if (EMGval<100){
     Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
     }
     else {
      Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
     }
    }
  }

  if (x.musclename=='Flexor Carpi Radialis' ){
    normEMG = 108;
    EMG = Number(x.maxemg);


   let EMGval= Math.floor((EMG/normEMG) * 100);
   if (EMGval!=0 ){
   if (EMGval<100 ){
    Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
    }
    else {
     Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
    }
  }
  }

if (x.musclename=='Biceps'){
  normEMG = 236;
  EMG = Number(x.maxemg);

 let EMGval= Math.floor((EMG/normEMG)*100);
 if (EMGval!=0 ){
 if (EMGval<100){
  Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
  }
  else {
   Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
  }
}
}

if (x.musclename=='Tensor Fasciae Latae'){
  normEMG = 266;
  EMG = Number(x.maxemg);

 let EMGval= Math.floor((EMG/normEMG) * 100);
 if (EMGval!=0){
 if (EMGval<100){
  Statments = Statments +' The peak EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its ideal value.' ;  }
  else {
   Statments = Statments +' The peak EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
  }
}
}

if (x.musclename=='Spinalis Thoracis'){
  normEMG = 76;
  EMG = Number(x.maxemg);
 let EMGval= Math.floor((EMG/normEMG)*100);
 if (EMGval!=0 ){
 if (EMGval<100 ){
  Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
  }
  else {
   Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
  }
}
}

if (x.musclename=='Rectus Abdominis'  && x.bodypart=='Lumbar'){
  normEMG = 127;
  EMG = Number(x.maxemg);
  
 let EMGval= Math.floor((EMG/normEMG) * 100);
 if (EMGval!=0 ){
 if (EMGval<100 ){
  Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
  }
  else {
   Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
  }
}
}

if (x.musclename=='Rectus Abdominis' && x.bodypart=='Abdomen'){
  normEMG = 84;
  EMG = Number(x.maxemg);
  
 let EMGval= Math.floor((EMG/normEMG)*100);
 if (EMGval!=0 ){
 if (EMGval<100 ){
  Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
  }
  else {
   Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
  }
}
}


}


    // Flexion Ends here 

    // Extension Starts here 

    if(x.exercisename=='Extension')
    {

    if (x.musclename=='Latissimus Dorsi'){
      normEMG = 140;
      EMG = Number(x.maxemg);
    let EMGval= Math.floor((EMG/normEMG) * 100);
    if (EMGval!=0 ){
    if (EMGval<100){
      Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
      }
      else {
       Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
      }
    }
    }

    if (x.musclename=='Extensor Digitrum' ){
      normEMG = 303;
      EMG = Number(x.maxemg);
     let EMGval= Math.floor((EMG/normEMG) * 100);
     if (EMGval!=0){
     if (EMGval<100){
      Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
      }
      else {
       Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
      }
    }
    }

    if (x.musclename=='Triceps'){
      normEMG = 148;
      EMG = Number(x.maxemg);
     let EMGval= Math.floor((EMG/normEMG) * 100);
     if (EMGval!=0){
     if (EMGval<100){
      Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
      }
      else {
       Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
      }
    }
    }
    
    if (x.musclename=='Gluteus Maximus' ){
      normEMG = 134;
      EMG = Number(x.maxemg);
     let EMGval= Math.floor((EMG/normEMG) * 100);
     if (EMGval!=0){
     if (EMGval<100){
      Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
      }
      else {
       Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
      }
    }
    }
    
    if (x.musclename=='Rectus Femoris' ){
      normEMG = 100;
      EMG = Number(x.maxemg);
     let EMGval= Math.floor((EMG/normEMG) * 100);
     if (EMGval!=0){
     if (EMGval<100){
      Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
      }
      else {
       Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
      }
    }
    }
    
    if (x.musclename=='Spinalis Thoracis'){
      normEMG = 61;
      EMG = Number(x.maxemg);
     let EMGval= Math.floor((EMG/normEMG) * 100);
     if (EMGval!=0){
     if (EMGval<100){
      Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
      }
      else {
       Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
      }
    }
    }
    
    if (x.musclename=='Quadratus Lumborum'){
      normEMG = 63;
      EMG = Number(x.maxemg);
     let EMGval= Math.floor((EMG/normEMG) * 100);
     if (EMGval!=0){
     if (EMGval<100){
      Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
      }
      else {
       Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
      }
    }
    }

  }


    // Extension Ends here 
    

 

  if (x.musclename=='Deltoid' && x.exercisename=='Abduction'){
    normEMG = 708;
    EMG = Number(x.maxemg);
  let EMGval= Math.floor((EMG/normEMG) * 100);
  if (EMGval!=0){
  if (EMGval<100){
    Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
    }
    else {
     Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
    }
  }

  }

  if (x.musclename=='Pectoralis Major' && x.exercisename=='Adduction'){
    normEMG = 195;
    EMG = Number(x.maxemg);
  let EMGval= Math.floor((EMG/normEMG) * 100);
  if (EMGval!=0){
  if (EMGval<100){
    Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
    }
    else {
     Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
    }
  }

  }




if (x.musclename=='Supinator (Deep)' && x.exercisename=='Supination'){
  normEMG = 60;
  EMG = Number(x.maxemg);
 let EMGval= Math.floor((EMG/normEMG) * 100);
 if (EMGval!=0){
 if (EMGval<100){
  Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is '+  EMGval +' % of its normative value.' ;
  }
  else {
   Statments = Statments +' The EMG for ' + x.orientation +'  ' + x.musclename + '  '+ x.exercisename+ ' movement is healthy.' ;
  }
}
}


  var current_normal_rom=x.maxangleselected-x.minangleselected;

  if(x.exercisename!='Isometric'){

  

  if(((x.maxangle>0 && x.minangle>0)|| (x.maxangle<0 && x.minangle<0)) && (Math.abs(x.maxangle)>Math.abs(x.minangle)) ){
              
    var current_range_gained=Math.abs(x.maxangle)-Math.abs(x.minangle);

}

else{
    var current_range_gained=Math.abs(x.maxangle);
 
}

var current_ROMValue =  Math.floor((Number(current_range_gained)/Number(current_normal_rom) * 100));

if(current_ROMValue!=0){
  if (current_ROMValue>100){
    Statments = Statments + 'The joint mobility for '+ x.musclename + ' '+ x.exercisename+ ' movement is  healthy.';
  }
  else{
Statments = Statments + 'The joint mobility for '+ x.musclename + ' '+ x.exercisename+ ' movement is '+ current_ROMValue+" % of its healthy value. ";
  }
  }
}

Statments_arr.push(Statments);
Statments="";

}
)


return Statments_arr; 

 
}else {
  return Statments_arr;
}

}
  %>



<% if (typeof details === 'string' ) { %>
<h2><%=details %></h2>
<%} else if ( report[0].sessiondetails.length < 1 ){%>
<h2>no records for today</h2>
<%} else {%> <%const getPainScale = scale => {for (let i = 1; i <= 5; i++) {%>
<% if(scale == i) { %>
<img
  src="/icons/<%= i %>.png"
  style="background-color: yellow; border-radius: 100%"
/>
<% } else { %>
<img
  src="/icons/<%= i %>.png"
  style="background-color: white; border-radius: 50%"
/>
<% } %> <%}};%> <%const getMMTGrading = grade => {for(var i=1; i <= 9; i++) {
var x = i;
var y = parseInt(grade.substring(0,1));
var length = grade.length;
if(y==1 && length==1){
  y=1;
}
else if(y==1 && length>1){
  y=2;
}
else if(length>1){
  y=y*2;
}
else{
  y=y+(y-1);
}
if(x!=1){
  if(x%2==0){x=x/2;}
  else{x=Math.round((x/2));}
}
%> <% if((grade.toString().substring(0,1).toLowerCase() === x.toString().toLowerCase()) && i==y) { %>
<span
  style="border: 1px #aaa solid; border-radius: 60%; padding: 0px; background-color: yellow;"
  >&nbsp;<% if((i%2==0 && i>1) || i==2){%><%=x+"+"%><%} else if(i>1){%><%=x%><%}else{ %><%=x%><%}%>&nbsp;</span
>
<% } else { %>
<span
  style="border: 1px #aaa solid; border-radius: 60%; padding: 0px;  background-color: white;"
  >&nbsp;<% if((i%2==0 && i>1) || i==2){%><%=x+"+"%><%} else if(i>1){%><%=x%><%}else{ %><%=x%><%}%>&nbsp;</span
>
<% } %> <% } }%>
<html>
  <head>
    <link rel="stylesheet" href="/stylesheets/style_new.css" />
    <link rel="stylesheet" href="/stylesheets/main.css" />
    <link href='https://fonts.googleapis.com/css?family=Roboto' rel='stylesheet'>
    <link href="https://fonts.googleapis.com/css?family=Ebrima" rel="stylesheet">
    <script src="https://www.amcharts.com/lib/4/core.js"></script>
    <script src="https://www.amcharts.com/lib/4/charts.js"></script>
    <script src="https://www.amcharts.com/lib/4/themes/animated.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.6.0/Chart.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/gh/emn178/chartjs-plugin-labels/src/chartjs-plugin-labels.js"></script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script src="https://www.gstatic.com/charts/loader.js"></script>


<script type="text/javascript" src="/loading-bar.js"></script>
<link rel="stylesheet" type="text/css" href="/loading-bar.css"/>
<!--Rating Library-->

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">



  </head>
  <style>
      .checked {
        color: #44C02F !important;
    }
    
    .unchecked {
        color: rgb(176, 198, 217) !important;
    }  

   canvas{

width:100pt !important;
height:100pt !important;

}

</style>
  <body>

    <div class="page">
      <div class="header"></div>

      <div class = "report_title" style="background-color:white !important;width: 100%;height: 158px;margin-top:30px;">

        <!-- Logo borders -->
        <div id ="borders" style="width: 105.19pt;height: 105.19pt;position: absolute;top:22.53pt;left: 22.98pt;border: 2px solid #062545 !important;border-radius: 40px;"></div>

        <div id ="borders" style="width: 105.19pt;height: 105.19pt;position: absolute; top:22.53pt;right:22.98pt;border: 2px solid #062545 !important;border-radius: 40px;"></div>

  
        <!-- Logos -->
         <% if ( details[0].cliniclogo!= null ) { %>
        <img src="<%= details[0].cliniclogo%>" style="position: absolute; width:81pt; height:77pt;top:35pt;left:36pt">
         <%} else {%>
         <img src="/icons/SVG/Defaultlogo.svg" style="position: absolute; width:81pt; height:77pt;top:35pt;left:36pt">
         <%} %> 
        <img src="/icons/Pheezee_logo1.png" style="position: absolute; width:50.69pt; height:67.4pt ;top:35pt;right:50pt">
        <img src="/icons/Pheezee_logo2.png" style="position: absolute; width:60.89pt; height:9.46pt ;top:107pt;right:46pt;">


        <!--Heading WORK on Phone number -->
        <div id="heading-title-box" style="height:90%;width:58.6%;position:relative;left:21%;top:-5%;">
          <% if (  typeof(details[0].clinicname) === "undefined" ) { %>
        <p style="color:#062545 !important;position:relative;text-align: center;font-size:16pt; font-family: 'Avenir';top:4pt;">*Update clinic name*</p>
         <%} else {%>
         <p style="color:#062545 !important;position:relative;text-align: center;font-size:16pt; font-family: 'Avenir';top:4pt;"><%= details[0].clinicname %></p>
         <%} %> 
          
          <p style="color:#062545 !important;position:relative;text-align: center;font-size:11pt; font-family: 'Avenir';padding-right:5pt;padding-left:0pt;top:18pt;"><%=details[0].address %></p>
          <p style="color:#062545 !important;position:relative;text-align: center;font-size:10pt; font-family: 'Avenir';padding-right:20pt;padding-left:20pt;top:30pt;">Dr. <%=details[0].phizioname%>, <%=details[0].degree%></p>
          <p style="color:#062545 !important;position:relative;text-align: center;font-size:10pt; font-family: 'Avenir';padding-right:20pt;padding-left:20pt;top:30pt;">Ph : <%=details[0].phiziophone%></p>
  
        </div>
        <!-- Heading end -->

        <!-- <div id ="borders" style="width:100%;height: 5pt;position: absolute; top:138.01pt;background-color: #D4D4D4 !important;"></div> -->

      </div>
      <output id="myElementwo" style = "visibility: hidden;"><%= details[0].phiziopatients[0].patientinjured %></output>
      <output id="myElementone" style = "visibility: hidden;"><%= details[0].phiziopatients[0].patientgender.toLowerCase() %></output>
      <output id="myElement" style = "visibility: hidden;"><%= report_new_page(report[0].sessiondetails) %></output>
     <div style = "position: relative;top:10px;left:10px;">
      <div class="book" style="margin-bottom: 20px;">
        <div class="page" style = "position: relative;">
            <div class="subpage">
                <div style = "float: left"class = "topleft">
                    <div style = "margin-top: 10px;margin-left: 10px;">
                        <img style="padding-right: 10px;" class = "icontop" src="/icons/icons/ROM Icon.png" alt="">
                        ROM
                    </div>
                    <div style = "margin-left: 10px;">
                        <img style="padding-right: 10px;" class = "icontop" src="/icons/icons/EMG ICon.png" alt="">
                        EMG
                    </div>
                    <div style = "margin-left: 10px;">
                        <img style="padding-right: 10px;" class = "icontop" src="/icons/icons/Poor Endurance Icon.png" alt="">
                        Poor Endurance
                    </div>
                </div>

                <div style = "float: right"class = "topright">
                    <div style = "margin-top: 10px;margin-left: 10px;">
                        <img style="padding-right: 10px;" class = "icontop" src="/icons/icons/Excellent.png" alt="">
                        Excellent
                    </div>
                    <div style = "margin-left: 10px;">
                        <img style="padding-right: 10px;" class = "icontop" src="/icons/icons/Good.png" alt="">
                        Good
                    </div>
                    <div style = "margin-left: 10px;">
                        <img style="padding-right: 10px;" class = "icontop" src="/icons/icons/Fair.png" alt="">
                        Fair
                    </div>
                    <div style = "margin-left: 10px;">
                        <img style="padding-right: 10px;" class = "icontop" src="/icons/icons/Needs Attention.png" alt="">
                        Need Attention
                    </div>
                </div>
                <!-- //dot code -->
                <div class="con dot dot1"><div class = "d1 abc"></div></div>
                <div class="con dot dot2"><div class = "d2 abc"></div> </div>
                <div class="con dot dot3"><div class = "d3 abc"></div></div>
                <div class="con dot dot4"><div class = "d4 abc"></div></div>
                <div class="con dot dot5"><div class = "d5 abc"></div></div>
                <div class="con dot dot6"><div class = "d6 abc"></div></div> 
                <div class="con dot dot7"><div class = "d7 abc"></div></div>
                <div class="con dot dot8"><div class = "d8 abc"></div></div>
                <div class="con dot dot9"><div class = "d9 abc"></div></div>
                <div class="con dot dot10"><div class = "d10 abc"></div></div>
                <div class="con dot dot11"><div class = "d11 abc"></div></div>
                <div class="con dot dot12"><div class = "d12 abc"></div></div> 
                <div class="con dot dot13"><div class = "d13 abc"></div></div>
                <div class="con dot dot14"><div class = "d14 abc"></div></div>
                <!-- line code  -->

                
                <div class = "line line1a"> </div>
                <div class = "line line1b"> </div>
                <div class = "line line2a"> </div>
                <div class = "line line2b"> </div>
                <div class = "line line3a"> </div>
                <div class = "line line3b"> </div>
                <div class = "line line4a"> </div>
                <div class = "line line4b"> </div>
                <div class = "line line5a"> </div>
                <div class = "line line5b"> </div>
                <div class = "line line6a"> </div>
                <div class = "line line6b"> </div>
                <div class = "line line7a"> </div>
                <div class = "line line7b"> </div>
                <div class = "line line8a"> </div>
                <div class = "line line8b"> </div>
                <div class = "line line9a"> </div>
                <div class = "line line9b"> </div>
                <div class = "line line10a"> </div>
                <div class = "line line10b"> </div>
                <div class = "line line11a"> </div>
                <div class = "line line11b"> </div>
                <div class = "line line12a"> </div>
                <div class = "line line12b"> </div>
                <div class = "line line13a"> </div>
                <div class = "line line13b"> </div>
                <div class = "line line14a"> </div>
                <div class = "line line14b"> </div>
                
                <img class = "fit" src="/icons/images/Male Bilateral body part.png" />

                <div class="box box-postion1">
                    
                    <div class = "box1a innerbox1">
                        <div style = "float:left" class = "box1ai">
                            
                        </div>
                       
                    </div>
                    <div class = "box1b innerbox2">
                    </div>
                </div>

                <div class="box box-postion2">
                    <div class = " box2a innerbox1">
                        <div style = "float: right" class = "box2ai">
                            
                        </div>
                    </div>
                    <div class = "box2b innerbox2"> 
                        
                    </div>
                </div>

                <div class="box box-postion3">
                    <div class = "box3a innerbox1">
                        <div style = "float:left" class = "box3ai">
                            
                        </div>
                    </div>
                    <div class = " box3b innerbox2">
                        
                    </div>
                    
                </div>

                <div class="box box-postion4">
                    <div class = "box4a innerbox1">
                        <div style = "float:right" class = "box4ai">
                        </div>
                    </div>
                    <div class = "box4b innerbox2">

                    </div>
                </div>
                <div class="box box-postion5">
                    <div class = "box5a innerbox1">
                        <div style = "float:left" class = "box5ai">
                            
                        </div>
                    </div>
                    <div class = "box5b innerbox2">
                       
                    </div>
                </div>

                <div class="box box-postion6">
                    <div class = "box6a innerbox1">
                        <div style = "float:right" class = "box6ai">
                            
                        </div>
                    </div>
                        <div class = "box6b innerbox2">

                        </div>
                </div>
                <div class="box box-postion7">
                    <div class = "box7a innerbox1">
                        <div style = "float:left" class = "box7ai">
                            
                        </div>
                    </div>
                    <div class = "box7b innerbox2">
                    </div>
                </div>

                <div class="box box-postion8">
                    <div class = "box8a innerbox1">
                        <div style = "float:right" class = "box8ai">
                            
                        </div>
                     </div>
                    <div class = "box8b innerbox2">
                    </div>
                </div>
                <div class="box box-postion9">
                    <div class = "box9a innerbox1">
                        <div style = "float:left" class = "box9ai">
                            
                        </div>
                    </div>
                    <div class = "box9b innerbox2">
                       
                    </div>
                </div>

                <div class="box box-postion10">
                    <div class = "box10a innerbox1">
                        <div style = "float:right" class = "box10ai">
                            
                        </div>
                    </div>
                    <div class = "box10b innerbox2">
                        
                    </div>
                </div>
                <div class="box box-postion11">
                    <div class = "box11a innerbox1">
                        <div style = "float:left" class = "box11ai">
                            
                        </div>
                    </div>
                    <div class = "box11b innerbox2">
                       
                    </div>
                </div>

                <div class="box box-postion12">
                    <div class = "box12a innerbox1">
                        <div style = "float:right" class = "box12ai">
                            
                        </div>
                    </div>
                    <div class = "box12b innerbox2">
                       
                    </div>
                </div>
                <div class="box box-postion13">
                    <div class = "box13a innerbox1">
                        <div style = "float:left" class = "box13ai">
                            
                        </div>
                    </div>
                    <div class = "box13b innerbox2">
                       
                    </div>
                </div>

                <div class="box box-postion14">
                    <div class = "box14a innerbox1">
                        <div style = "float:right" class = "box14ai">
                            
                        </div>
                    </div>
                    <div class = "box14b innerbox2">
                       
                    </div>
                </div>

                <!-- outer Box -->
                <div id = 'box1'class="boxr">

                    <div class="muscles">
                        <h4 style="text-align: center;font-size: 14.184px;"><b>Muscles</b>&ensp;(Right Side)</h4>
                        <text class = "assited"><I>(Assited)</I></text>
                    </div>
                    <div class = "b1">
                        
                    </div>
                </div>
                
                <div id = 'box2'class="boxl">

                    <div class="muscles">
                        <h4 style="text-align: center;font-size: 14.184px;"><b>Muscles</b>&ensp;(Left Side)</h4>
                        <text class = "assited"><I>(Assited)</I></text>
                        <!-- <p style="text-align: end;">(Assited)</p> -->
                    </div>
                    <div class = "b2">
                        
                    </div>
                </div>
               
            </div>
            
        </div>
    
      </div>
      <div class = "secondPage"></div>
  </div>
     </div>
    
    <style>
/* Image positioning */
.fit {
  width: 127.319px;
  height:326.870px;
  position: absolute;
  /* align-items: center; */
  bottom:97.2px;
  left: 325px;
  z-index: -0;
  /* top:500px; */
}

.p2fit {
  width: 172.476px;
  height: 442.8px;
  position: absolute;
  /* align-items: center; */
  /* bottom:100px; */
  left: 442.8px;
  z-index: -0;
  top:500px;
}

/* A4 Size page forming */
body {
    margin: 0;
    padding: 0;
    background-color: #FAFAFA;
    font: 12pt "Tahoma";
}
* {
    box-sizing: border-box;
    -moz-box-sizing: border-box;
}
.page {
  /* min-height: 1468.8px;
  width: 1072.8;
    padding: 2cm;
    margin: 1cm auto;
    /* border: 1px #D3D3D3 solid; */
   /* border-radius: 5px;
    background: white;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.1); */
    /* align-items: center;  */
}
.subpage {
  align-items: center;
  position: relative;
    padding: 1cm;
    /* border: 5px red solid; */
    height: 1100px;
    width: 750px;
    /* top:30px; */
    /* right:30px; */
    /* outline: 2cm #FFEAEA solid; */
}

@page {
    size: A4;
    margin: 0;
}
@media print {
    .page {
        margin: 0;
        border: initial;
        border-radius: initial;
        width: initial;
        min-height: initial;
        box-shadow: initial;
        background: initial;
        page-break-after: always;
    }
}

/* Dot forming */
/* .con {
  max-width: 600px;
  position: relative;
} */

.abc
  {
    background: #cc2016;
    border-radius: 100%;
    height: 13.464px;
    width: 13.464px;
    position: relative;
    left: 4.5px;
    top:4.32px;
    /* visibility: hidden; */
    /* left: 50%;
    top:50%; */
    /* bottom: 50%;
    right: 50%; */
    z-index: 1;
    
  }

.dot {
  background: #F7B9B5;
  border-radius: 100%;
  height: 22.464px;
  width: 22.464px;
  position: absolute;
  visibility: hidden;
}

.dot1 {
  top: 0px;
  left: 398px;
  z-index: 1;
  visibility: hidden;
  
}

.dot2 {
  top: 207px;
  left: 112px;
  z-index: 1;
}

.dot3 {
  top: 265px;
  left: 187px;
  z-index: 1;
}
.dot4 {
  top: 250px;
  left: 322px;
  z-index: 1;
}
.dot5 {
  top: 265px;
  left: 187px;
  z-index: 1;
  /* visibility: visible; */
}
.dot6 {
  top: 250px;
  left: 322px;
  z-index: 1;
  /* visibility: visible; */
}
.dot7 {
  top: 228px;
  left: 230px;
  z-index: 1;
}
.dot8 {
  top: 213px;
  left: 280px;
  z-index: 1;
}
.dot9 {
  top: 260px;
  left: 223px;
  z-index: 1;
}
.dot10 {
  top: 246px;
  left: 287px;
  z-index: 1;
}
.dot11 {
  top: 335px;
  left: 235px;
  z-index: 1;
}
.dot12 {
  top: 320px ;
  left: 275px;
  z-index: 1;
}
.dot13 {
  top: 410px;
  left: 239px;
  z-index: 1;
}
.dot14 {
  top: 395px;
  left: 269px;
  z-index: 1;
}

/* box implementation  */

.box {
  display:inline-block;
  flex-direction: column;
  justify-content:flex;
  /* border-style: solid;
  border-color: green; */
  visibility: hidden;
  background-color:transparent;
  z-index: 1;
}

.innerbox1
{
  display:inline-block;
  flex-direction: column;
  border-style: hidden;
  border-color: red;
  background-color: #FFEAEA;
  font-size: 11.3472px;
  padding: 0px 0px 0px 9px;
  position: relative;
  right: 0px;
  border-radius: 2px;
  border-width: 1px;
}

.innerbox2
{
  justify-content: flex;
  display:flex;
  flex-direction: row;
  font-size: 11.3472px;
  position: relative;
  left: 0px;
  /* border-style: solid;
  border-color: red; */
  /* margin: 10px 10px 10px 10px; */
  padding-top: 9px;
}

.icon1
{
  max-width: 11.3472px;
  max-height: 10.9358px;
  position: relative;
  /* top:5px; */
  right: -18px;
  margin-right: 0px;
}

.icon1b
{
  max-width: 11.3472px;
  max-height: 10.9358px;
  position: relative;
  top:-1.8px;
  right: -18px;
  margin-right: 0px;
}

.icon2
{
  max-width: 54%;
  max-height: 18px;
}
/* arr3  */
.box-postion1
{

  position: absolute;
  right: 400px;
  top: 550px;
  z-index: 1;
  /* visibility: visible; */
}

.box-postion2
{
  /* display: inline-flex; */
  position: absolute;
  left: 400px;
  top: 550px;
  z-index: 1;
  /* visibility: visible; */
}
.box-postion3
{
  position: absolute;
  right: 400px;
  top: 650px;
  /* visibility: visible; */
}

.box-postion4
{position: absolute;
  left: 450px;
  top: 650px;
  /* visibility: visible; */
}
.box-postion5
{
  position: absolute;
  right: 350px;
  top: 840px;
  /* visibility: visible; */
}

.box-postion6
{
  position: absolute;
  left: 420px;
  top: 840px;
  /* visibility: visible; */
}
.box-postion7
{
  position: absolute;
  right: 400px;
  top: 780px;
  /* visibility: visible; */
}

.box-postion8
{
  position: absolute;
  left: 430px;
  top: 780px;
  /* visibility: visible; */
}
.box-postion9
{
  position: absolute;
  right: 350px;
  top: 900px;
  /* visibility: visible; */
}

.box-postion10
{
  position: absolute;
  left: 400px;
  top: 900px;
  /* visibility: visible; */
}
.box-postion11
{
  position: absolute;
  right: 360px;
  top: 980px;
  /* visibility: visible; */
}

.box-postion12
{
  position: absolute;
  left: 400px;
  top: 960px;
  /* visibility: visible; */
}
.box-postion13
{
  position: absolute;
  right: 3500px;
  top: 1040px;
  /* visibility: visible; */
}

.box-postion14
{
  position: absolute;
  left: 400px;
  top: 1020px;
  /* visibility: visible; */
}

/* second page inner boxing*/
.p2box-position1
{
  position: absolute;
  right: 400px;
  top: 400px;
  z-index: 1;
  visibility: visible;
}

.p2box-position2
{
  /* display: inline-flex; */
  position: absolute;
  left: 600px;
  top: 400px;
  z-index: 1;
  visibility: visible;
}
.p2box-position3
{
  position: absolute;
  right: 600px;
  top: 550px;
  visibility: visible;
}

.p2box-position4
{
  position: absolute;
  left: 600px;
  top: 550px;
  visibility: visible;
}
.p2box-position5
{
  position: absolute;
  right: 600px;
  top: 850px;
  visibility: visible;
}

.p2box-position6
{
  position: absolute;
  left: 600px;
  top: 850px;
  visibility: visible;
}
.p2box-position7
{
  position: absolute;
  right: 650px;
  top: 700px;
  visibility: visible;
}
.p2box-position8
{
  position: absolute;
  left: 650px;
  top: 700px;
  visibility: visible;
}
.p2box-position9
{
  position: absolute;
  right: 600px;
  top: 1000px;
  visibility: visible;
}

.p2box-position10
{
  position: absolute;
  left: 600px;
  top: 1000px;
  visibility: visible;
}
.p2box-position11
{
  position: absolute;
  right: 600px;
  top: 1150px;
  visibility: visible;
}

.p2box-position12
{
  position: absolute;
  left: 600px;
  top: 1150px;
  visibility: visible;
}
.p2box-position13
{
  position: absolute;
  right: 600px;
  top: 1300px;
  visibility: visible;
}

.p2box-position14
{
  position: absolute;
  left: 600px;
  top: 1300px;
  visibility: visible;
}


/* Arrow part */

.line
{
  visibility: visible;
  position: absolute;
  visibility: hidden;
  border-bottom: solid;
  border-color: rgb(134, 130, 130);
  z-index: 1;
}

.line1a
{
  /* position: relative; */
  top: 875px;
  left: 415px;
  width: 50px;
  /* height: 100px; */
  /* visibility: visible; */
  /* transform: rotate(40deg); */
}

.line1b
{
  /* position: relative; */
  top: 958px;
  left: 394px;
  width: 170px;
  /* visibility: visible; */
  transform: rotate(80deg);
}

.line2a
{
  /* position: relative; */
  top: 163px;
  left: 30px;
  width: 120px;
  /* visibility: visible; */
}

.line2b
{
  /* position: relative; */
  top: 163px;
  left: 30px;
  width: 120px;
  /* visibility: visible; */
}

.line3a
{
  /* position: relative; */
  top: 284px;
  left: 143px;
  width: 57px;
  /* visibility: visible; */
}

.line3b
{
  /* position: absolute; */
  top: 284px;
  left: 143px;
  width: 57px;
  transform: rotate(40deg);
  /* visibility: visible; */
}


.line4a
{
  top: 263px;
  left: 68px;
  width: 83px;
  /* z-index: 1; */
  /* transform: rotate(-20deg); */
}

.line4b
{
  top: 263px;
  left: 68px;
  width: 83px;
  /* z-index: 1; */
  /* transform: rotate(-20deg); */
}

.line5a
{
  top: 184px;
  left: 143px;
  width: 57px;
  
}

.line5b
{
  top: 284px;
  left: 143px;
  width: 57px;
  /* visibility: hidden; */
}

.line6a
{
  top: 163px;
  left: 30px;
  width: 120px;
}

.line6b
{
  top: 163px;
  left: 30px;
  width: 120px;
}

.line7a
{
  top: 284px;
  left: 143px;
  width: 57px;
}

.line7b
{
  top: 284px;
  left: 143px;
  width: 57px;
}


.line8a
{
  top: 263px;
  left: 68px;
  width: 83px;
}

.line8b
{
  top: 263px;
  left: 68px;
  width: 83px;
}

.line9a
{
  top: 184px;
  left: 143px;
  width: 57px;
}

.line9b
{
  top: 184px;
  left: 143px;
  width: 57px;
}

.line10a
{
  top: 163px;
  left: 30px;
  width: 120px;
}

.line10b
{
  top: 163px;
  left: 30px;
  width: 120px;
}

.line11a
{
  top: 284px;
  left: 143px;
  width: 57px;
}

.line11b
{
  top: 284px;
  left: 143px;
  width: 57px;
}


.line12a
{
  top: 263px;
  left: 68px;
  width: 83px;
}

.line12b
{
  top: 263px;
  left: 68px;
  width: 83px;
}

.line13a
{
  top: 184px;
  left: 143px;
  width: 57px;
}

.line13b
{
  top: 184px;
  left: 143px;
  width: 57px;
}

.line14a
{
  top: 163px;
  left: 30px;
  width: 120px;
}

.line14b
{
  top: 163px;
  left: 30px;
  width: 120px;
}

/* Outer box */
.boxr {
  display: inline-block;
  background-color:  #F2F2F2;
  position: absolute;
  bottom: 40.4px;
  left:0px;
  border-radius: 9px;
  animation: increaseWidth 3s infinite linear;
  padding: 4px;
  margin-left: 14.4px;
  
}

.boxl {
  display: inline-block;
  background-color:  #F2F2F2;
  position: absolute;
  bottom: 40.4px;
  right:-30px;
  border-radius: 9px;
  margin-right: 14.4px;
  animation: increaseWidth 3s infinite linear;
  padding: 4px;
}
.b1
{
  /* float:left; */
  position: relative;
  visibility: visible;
  border-radius: 20%;
  align-items: center;
  right: 10px;
}

.b2
{
  position: relative;
  visibility: visible;
  /* float:left; */
}
.b3
{
  position: relative;
  visibility: visible;
}

/* boxer */
.muscles
{
  
  margin-top: 7.2px;
  margin-left: 21.6px;
  margin-right: 19.8px;
  position: relative;
}
.assited
{
  position: relative;
  top: 20px;
  left: 100px;
  font-size: 9.9288px;
}
.hip
{
  margin-left: 21.6px;
  /* margin-bottom: 5px; */
  position: relative;
  bottom: 28px;
}
.info
{
  position: relative;
  margin:0px 7.2px 0px 21.6px;
  border-radius: 5px;
  /* height: 50px; */
  width: 154.6056px;
  bottom: 5px;
  background: white;
}

.gluteus
{
  /* margin-left: 20px; */
  /* text-align: center; */
  /* margin-top: 5px; */
  /* margin-right: 5px; */
  padding-left: 14.4px;
  color: green;
  
}
.good
{
  position: relative;
  /* max-width: 20px;
  max-height: 20px; */
  /* align-items: center; */
  /* top: 5px;
  left: 10px;
  margin-left: 10px; */
}

.uv
{
  position: relative;
  bottom:10px;
  left: 47px;
  /* margin-top: 5px; */
  font-size: 9.9288px;
}

/* second page */
/* Side Box */

.p2boxr
{
  display: inline-block;
  background-color:  #F2F2F2;
  position: absolute;
  top: 50.4px;
  left:0px;
  border-radius: 9px;
  animation: increaseWidth 3s infinite linear;
  padding: 4px;
  margin-left: 14.4px;
}

.p2boxl
{
  display: inline-block;
  background-color:  #F2F2F2;
  position: absolute;
  top: 50.4px;
  right:0px;
  border-radius: 9px;
  margin-right: 14.4px;
  animation: increaseWidth 3s infinite linear;
  padding: 4px;
}

/* dir */

.left
{
  float: left;
}

.right
{
  float: right;
}

/* top */
.topleft
{
  position: absolute;
  font-size: 11.3472px;
  top:650px;
  left:10px;
  border: solid #B9DBF3;
  Width:137.112px;
  Height:78.012px;
  background-color: #E9F4FB;
}

.topright
{
  position: absolute;
  font-size: 11.3472px;
  right: -30px;
  top:650px;
  border: solid #B9DBF3;
  Width:137.5848px;
  Height:87.9408px;
  background-color: #E9F4FB;
}

.icontop
{
  max-width: 23.64px;
}
    </style>

    <script>

    // Get the HTML element with the class name "img_name"
    var imageElement = document.querySelector('.fit');
    // for dot
    const dot = ['1', '1', '1','1', '1', '1','1', '1', '1','1', '1', '1','1', '1', '1'];
    const d = ['1', '1', '1','1', '1', '1','1', '1', '1','1', '1', '1','1', '1', '1'];
    dot[1] = document.querySelector('.dot1');
    dot[2] = document.querySelector('.dot2');
    dot[3] = document.querySelector('.dot3');
    dot[4] = document.querySelector('.dot4');
    dot[5] = document.querySelector('.dot5');
    dot[6] = document.querySelector('.dot6');
    dot[7] = document.querySelector('.dot7');
    dot[8] = document.querySelector('.dot8');
    dot[9] = document.querySelector('.dot9');
    dot[10] = document.querySelector('.dot10');
    dot[11] = document.querySelector('.dot11');
    dot[12] = document.querySelector('.dot12');
    dot[13] = document.querySelector('.dot13');
    dot[14] = document.querySelector('.dot14');
    
    d[1] = document.querySelector('.d1');
    d[2] = document.querySelector('.d2');
    d[3] = document.querySelector('.d3');
    d[4] = document.querySelector('.d4');
    d[5] = document.querySelector('.d5');
    d[6] = document.querySelector('.d6');
    d[7] = document.querySelector('.d7');
    d[8] = document.querySelector('.d8');
    d[9] = document.querySelector('.d9');
    d[10] = document.querySelector('.d10');
    d[11] = document.querySelector('.d11');
    d[12] = document.querySelector('.d12');
    d[13] = document.querySelector('.d13');
    d[14] = document.querySelector('.d14');
    // for box
    const box = ['1', '1', '1','1', '1', '1','1', '1', '1','1', '1', '1','1', '1', '1', '1', '1', '1','1', '1', '1'];
    box[1] = document.querySelector('.box-postion1');
    box[2] = document.querySelector('.box-postion2');
    box[3] = document.querySelector('.box-postion3');
    box[4] = document.querySelector('.box-postion4');
    box[5] = document.querySelector('.box-postion5');
    box[6] = document.querySelector('.box-postion6');
    box[7] = document.querySelector('.box-postion7');
    box[8] = document.querySelector('.box-postion8');
    box[9] = document.querySelector('.box-postion9');
    box[10] = document.querySelector('.box-postion10');
    box[11] = document.querySelector('.box-postion11');
    box[12] = document.querySelector('.box-postion12');
    box[13] = document.querySelector('.box-postion13');
    box[14] = document.querySelector('.box-postion14');
    box[15] = document.querySelector('.box-postion15');
    box[16] = document.querySelector('.box-postion16');
    box[17] = document.querySelector('.box-postion17');
    box[18] = document.querySelector('.box-postion18');
    box[19] = document.querySelector('.box-postion19');
    box[20] = document.querySelector('.box-postion20');
    
    // for the lines
    const line = ['1', '1', '1','1', '1', '1','1', '1', '1','1', '1', '1','1', '1', '1', '1', '1', '1','1', '1', '1','1', '1', '1','1', '1', '1','1', '1', '1','1', '1', '1','1', '1', '1', '1', '1', '1','1', '1', '1', '1', '1'] ;
    line[1] = document.querySelector('.line1a');
    line[21] = document.querySelector('.line1b');
    line[2] = document.querySelector('.line2a');
    line[22] = document.querySelector('.line2b');
    line[3] = document.querySelector('.line3a');
    line[23] = document.querySelector('.line3b');
    line[4] = document.querySelector('.line4a');
    line[24] = document.querySelector('.line4b');
    line[5] = document.querySelector('.line5a');
    line[25] = document.querySelector('.line5b');
    line[6] = document.querySelector('.line6a');
    line[26] = document.querySelector('.line6b');
    line[7] = document.querySelector('.line7a');
    line[27] = document.querySelector('.line7b');
    line[8] = document.querySelector('.line8a');
    line[28] = document.querySelector('.line8b');
    line[9] = document.querySelector('.line9a');
    line[29] = document.querySelector('.line9b');
    line[10] = document.querySelector('.line10a');
    line[30] = document.querySelector('.line10b');
    line[11] = document.querySelector('.line11a');
    line[31] = document.querySelector('.line11b');
    line[12] = document.querySelector('.line12a');
    line[32] = document.querySelector('.line12b');
    line[13] = document.querySelector('.line13a');
    line[33] = document.querySelector('.line13b');
    line[14] = document.querySelector('.line14a');
    line[34] = document.querySelector('.line14b');
    line[15] = document.querySelector('.line15a');
    line[35] = document.querySelector('.line15b');
    line[16] = document.querySelector('.line16a');
    line[36] = document.querySelector('.line16b');
    line[17] = document.querySelector('.line17a');
    line[37] = document.querySelector('.line17b');
    line[18] = document.querySelector('.line18a');
    line[38] = document.querySelector('.line18b');
    line[19] = document.querySelector('.line19a');
    line[39] = document.querySelector('.line19b');
    line[20] = document.querySelector('.line20a');
    line[40] = document.querySelector('.line20b');
    
    const patient_data = new Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1);
    const box_to_dot_map = new Array(1, 2, 3, 4, 3, 4, 5, 6, 7, 8, 7, 8, 7, 8, 9, 10, 11, 12, 13, 14);
    
    function dot_implement(injured)
    {
        if(injured == 'Empty')
        {
            for(let i =1; i<=14;i++)
            {
                dot[i].style.background ='#DBF5D6';
                d[i].style.background ='#92E184'
                // var d1 = document.querySelector('.p2d'+i);
                // d1.style.background ='#DBF5D6';
                // var d2 = document.querySelector('.d'+i);
                // d2.style.background ='#92E184';
            }
        }
        else if(injured == 'Bilateral')
        {
            for(let i =1; i<=14;i++)
            {
                // var d1 = document.querySelector('.p2d'+i);
                // d1.style.background ='#F7B9B5';
                dot[i].style.background ='#F7B9B5';
                d[i].style.background ='#CC2016';
            }
        }
        else if(injured == 'Right')
        {
            for(let i =1; i<=14;i+=2)
            {
                dot[i].style.background ='#F7B9B5';
                d[i].style.background ='#CC2016';
                dot[i+1].style.background ='#DBF5D6';
                d[i+1].style.background ='#92E184';
    
                // var d1 = document.querySelector('.p2d'+i);
                // d1.style.background ='#F7B9B5';
            }
        }
        else if(injured = 'Left'){
            for(let i =1; i<=14;i+=2)
            {
                dot[i+1].style.background ='#F7B9B5';
                d[i+1].style.background ='#CC2016';
                dot[i].style.background ='#DBF5D6';
                d[i].style.background ='#92E184';
            }
        }
    }
    var secondPageImage;
    function changeImage(gender, patient_data, injured)
    {
        dot_implement(injured);
    
        for(var i =0; i<20;i++)
        {
            if(patient_data[i]!=-1)
            {
                // dot[box_to_dot_map[i]].style.visibility = 'visible';
                // box[i+1].style.visibility ='visible';
            }
        }
    
        if(gender == 'female')
        {
            if(injured == 'Bilateral')
            {
                imageElement.src = '/icons/images/Female Bilateral body part.png';
                secondPageImage = '/icons/images/Female Bilateral body part.png';
            }
            else if(injured == 'Left')
            {
                imageElement.src = '/icons/images/Female Left Side affected body part.png';
                secondPageImage ='/icons/images/Female Left Side affected body part.png';
            }
            else if(injured == 'Right')
            {
                imageElement.src = '/icons/images/Female Right Side affected body part.png';
                secondPageImage ='/icons/images/Female Right Side affected body part.png';
            }
            else
            {
                imageElement.src = '/icons/images/Female Empty body part.png';
                secondPageImage ='/icons/images/Female Empty body part.png';
            }
           
            dot[1].style.top= '726px';
            dot[1].style.left= '355px';
            dot[2].style.top= '726px';
            dot[2].style.left= '400px';
            dot[3].style.top= '775px';
            dot[3].style.left= '340px';
            dot[4].style.top= '775px';
            dot[4].style.left= '413px';
            dot[5].style.top= '810px';
            dot[5].style.left= '334px';
            dot[6].style.top= '810px';
            dot[6].style.left= '422px';
            dot[7].style.top= '780px';
            dot[7].style.left= '367px';
            dot[8].style.top= '780px';
            dot[8].style.left= '391px';
            dot[9].style.top= '820px';
            dot[9].style.left= '360px';
            dot[10].style.top= '820px';
            dot[10].style.left= '395px';
            dot[11].style.top= '890px';
            dot[11].style.left= '365px';
            dot[12].style.top= '890px';
            dot[12].style.left= '390px';
            dot[13].style.top= '960px';
            dot[13].style.left= '365px';
            dot[14].style.top= '960px';
            dot[14].style.left= '388px';
            // imageElement.style.bottom = '210px'
            // box[1].style.right = '260px';
            // box[1].style.bottom = '540px';
            // line[1].style.visibility = 'visible';
            // line[21].style.visibility='visible';
            // line[1].style.top = '100px';
            // line[1].style.left = '100px';
            // line[21].style.top = '-125px';
            // line[21].style.left = '104px';
            // line[21].style.width = '170px';
            // line[21].style.transform = 'rotate(67deg)';
    
            // line[2].style.visibility = 'visible';
            // line[22].style.visibility='visible';
            // line[2].style.top = '100px';
            // line[2].style.left = '380px';
            // line[2].style.width = '70px';
            // line[22].style.top = '-134px';
            // line[22].style.left = '256px';
            // line[22].style.width = '180px';
            // line[22].style.transform = 'rotate(-67deg)';
    
            // line[3].style.visibility = 'visible';
            // line[23].style.visibility='visible';
            // line[3].style.top = '-70px';
            // line[3].style.left = '95px';
            // line[3].style.width = '30px';
            // line[23].style.top = '-9px';
            // line[23].style.left = '84px';
            // line[23].style.width = '140px';
            // line[23].style.transform = 'rotate(65deg)';
            
            // line[4].style.visibility = 'visible';
            // line[24].style.visibility='visible';
            // line[4].style.top = '-80px';
            // line[4].style.left = '380px';
            // line[4].style.width = '70px';
            // line[24].style.top = '-22px';
            // line[24].style.left = '292px';
            // line[24].style.width = '130px';
            // line[24].style.transform = 'rotate(-70deg)';
    
            // line[5].style.visibility = 'visible';
            // line[25].style.visibility='visible';
            // line[5].style.top = '-10px';
            // line[5].style.left = '100px';
            // line[5].style.width = '50px';
            // line[25].style.top = '18px';
            // line[25].style.left = '132px';
            // line[25].style.width = '70px';
            // line[25].style.transform = 'rotate(60deg)';
    
            // line[6].style.visibility = 'visible';
            // line[26].style.visibility='visible';
            // line[6].style.top = '-16px';
            // line[6].style.left = '380px';
            // line[6].style.width = '70px';
            // line[26].style.top = '8px';
            // line[26].style.left = '323px';
            // line[26].style.width = '70px';
            // line[26].style.transform = 'rotate(-50deg)';
    
            // line[7].style.visibility = 'visible';
            // line[27].style.visibility='visible';
            // line[7].style.top = '50px';
            // line[7].style.left = '100px';
            // line[7].style.width = '60px';
            // line[27].style.top = '70px';
            // line[27].style.left = '142px';
            // line[27].style.width = '50px';
            // line[27].style.transform = 'rotate(70deg)';
    
            // line[8].style.visibility = 'visible';
            // line[28].style.visibility='visible';
            // line[8].style.top = '45px';
            // line[8].style.left = '375px';
            // line[8].style.width = '80px';
            // line[28].style.top = '64px';
            // line[28].style.left = '336px';
            // line[28].style.width = '50px';
            // line[28].style.transform = 'rotate(-55deg)';
    
            // line[9].style.visibility = 'visible';
            // line[29].style.visibility='visible';
            // line[9].style.top = '135px';
            // line[9].style.left = '100px';
            // line[9].style.width = '105px';
            // line[29].style.top = '105px';
            // line[29].style.left = '188px';
            // line[29].style.width = '61px';
            // line[29].style.transform = 'rotate(-65deg)';
    
            // line[10].style.visibility = 'visible';
            // line[30].style.visibility='visible';
            // line[10].style.top = '130px';
            // line[10].style.left = '315px';
            // line[10].style.width = '140px';
            // line[30].style.top = '100px';
            // line[30].style.left = '272px';
            // line[30].style.width = '61px';
            // line[30].style.transform = 'rotate(65deg)';
    
            // line[11].style.visibility = 'visible';
            // line[31].style.visibility='visible';
            // line[11].style.top = '-135px';
            // line[11].style.left = '100px';
            // line[11].style.width = '105px';
            // line[31].style.top = '105px';
            // line[31].style.left = '188px';
            // line[31].style.width = '61px';
            // line[31].style.transform = 'rotate(-65deg)';
    
    
        }
        else 
        {
            if(injured == 'bilateral')
            {
                imageElement.src = '/icons/images/Male Bilateral body part.png';
                secondPageImage ='/icons/images/Male Bilateral body part.png';
            }
            else if(injured == 'left')
            {
                imageElement.src = '/icons/images/Male Left Side affected.png';
                secondPageImage ='/icons/images/Male Left Side affected.png';
            }
            else if(injured == 'right')
            {
                imageElement.src = '/icons/images/Male Right Side affected.png';
                secondPageImage =   '/icons/images/Male Right Side affected.png';
            }
            else
            {
                imageElement.src = '/icons/images/Male Empty Body part.png';
                secondPageImage ='/icons/images/Male Empty Body part.png';
            }
            dot[1].style.top= '726px';
            dot[1].style.left= '355px';
            dot[2].style.top= '726px';
            dot[2].style.left= '400px';
            dot[3].style.top= '775px';
            dot[3].style.left= '340px';
            dot[4].style.top= '775px';
            dot[4].style.left= '413px';
            dot[5].style.top= '810px';
            dot[5].style.left= '334px';
            dot[6].style.top= '810px';
            dot[6].style.left= '422px';
            dot[7].style.top= '780px';
            dot[7].style.left= '367px';
            dot[8].style.top= '780px';
            dot[8].style.left= '391px';
            dot[9].style.top= '820px';
            dot[9].style.left= '360px';
            dot[10].style.top= '820px';
            dot[10].style.left= '395px';
            dot[11].style.top= '890px';
            dot[11].style.left= '365px';
            dot[12].style.top= '890px';
            dot[12].style.left= '390px';
            dot[13].style.top= '960px';
            dot[13].style.left= '365px';
            dot[14].style.top= '960px';
            dot[14].style.left= '388px';
        }
    }
    
    
    
    
    
    // inner box function1
    var map1 = {};
    var map2 = {};
    var map3 = {};
    for(var i = 1;i<=14;i++)
    {
        var ID = ".box"+i+"a";
        map1[ID]=0;
        map2[ID]=0;
        map3[ID]=0; 
        ID = ".p2box" + i +"a";
        map1[ID]=0;
        map2[ID]=0;
        map3[ID]=0; 
    }
    
    function addtext(ID, data, testing, dir) {
        map1[ID]++;
        // Create element
        const el = document.createElement('text');
      
        // Add classes to element
        el.classList.add(dir);
      
        // Set ID attribute on the element
        // el.setAttribute('id', 'my-id');
        // var z=0
        // var z1=18;;
    
        // var  s=z+"째-"+z1 +"째";
        var Id1 = ID+'i';
        const box2 = document.querySelector(Id1); // Use querySelector instead of getElementByClass
    
        if(map1[ID]>1)
        {
            var el1 = document.createElement('br');
            box2.appendChild(el1);
        }
        el.innerHTML ="<b>" +data +"</b>" +" "+ testing;
        
        s = '10px';
        el.style.padding = '0px 10px 0px 0px';
        box2.appendChild(el);

    
        // box.style.border = "solid blue";
        const box1 = document.querySelector(ID);
        box1.style.visibility = 'visible';
        box1.style.border = "solid red";
      }
      
    
      
    // function to add image
    
    
    // inner box function2
    function addImage (ID, path, dir)
    {
        const el = document.createElement('img');
        
        el.src = path;
        el.classList.add('icon1');
        const box = document.querySelector(ID); // Use querySelector instead of getElementByClass
        // el.style.padding = '0px 10px 0px 10px';
        if(dir == 'right')el.style.margin = '0px 30px 0px 0px';
        else el.style.margin = '0px 35px 0px -15px';
        
        box.appendChild(el);
        
        if(map1[ID] == 1)
        {
            el.style.bottom = '1.5px';
        }
        if(map1[ID] == 2)
        {
            el.style.top= '10px';
        }
        else if(map1[ID] == 3)
        {
            el.style.top= '23px';
        }
        else if(map1[ID] == 4)
        {
            el.style.top= '35px';
        }
    
    
    }
    
    
    //   addtext('.box1a', )
      
    
    // inner box 2 implementation
    
    // // inner box function3
    function addlower(ID, dir,  firstImg, firsttext, secondImg, secondtext)
    {
        const box1 = document.querySelector(ID); // Use querySelector instead of getElementByClass
        box1.style.visibility='visible';
        if(dir == 'right')
        {
            if(firstImg != '-1')
            {
                const el = document.createElement('img');
                el.src = firstImg;
                el.classList.add('icon2');
                const box = document.querySelector(ID); // Use querySelector instead of getElementByClass
                box.appendChild(el);
                
            }
    
            if(firsttext != '-1')
            {
                const el = document.createElement('text');
                el.innerHTML = firsttext;
                // el.classList.add('icon2');
                const box = document.querySelector(ID); // Use querySelector instead of getElementByClass
                el.style.padding = '0px 10px 0px 10px';
                box.appendChild(el);
                if(firstImg == '-1')box.style.left = '-12px';
                else box.style.left = '-20px'
                
            }
    
            if(secondImg != '-1')
            {
                const el = document.createElement('img');
                el.src = secondImg;
                el.classList.add('icon2');
                const box = document.querySelector(ID); // Use querySelector instead of getElementByClass
                box.appendChild(el);
            }
    
            if(secondtext != '-1')
            {
                const el = document.createElement('text');
                el.innerHTML = secondtext;
                // el.classList.add('icon2');
                const box = document.querySelector(ID); // Use querySelector instead of getElementByClass
                el.style.padding = '0px 10px 0px 10px';
                box.appendChild(el);
            }
        }
        else
        {
            if(secondtext != '-1')
            {
                const el = document.createElement('text');
                el.innerHTML = secondtext;
                // el.classList.add('icon2');
                const box = document.querySelector(ID); // Use querySelector instead of getElementByClass
                el.style.padding = '0px 10px 0px 0px';
                box.appendChild(el);
            }
    
            if(secondImg != '-1')
            {
                const el = document.createElement('img');
                el.src = secondImg;
                el.classList.add('icon2');
                const box = document.querySelector(ID); // Use querySelector instead of getElementByClass
                box.appendChild(el);
            }
    
            if(firsttext != '-1')
            {
                const el = document.createElement('text');
                el.innerHTML = firsttext;
                // el.classList.add('icon2');
                const box = document.querySelector(ID); // Use querySelector instead of getElementByClass
                el.style.padding = '0px 10px 0px 10px';
                box.appendChild(el);
            }
    
            if(firstImg != '-1')
            {
                const el = document.createElement('img');
                el.src = firstImg;
                el.classList.add('icon2');
                const box = document.querySelector(ID); // Use querySelector instead of getElementByClass
                box.appendChild(el);
                // box.style.left = '-20px'
            }
        }

        
    }
    // var ID = '.box1b';
    // var dir = 'right';
    // var firstImg ="icons/Poor Endurance Icon Red.png";
    // firstImg='-1'
    // firstImg = '-1';
    // var secondImg = "icons/EMG ICon.png";
    // var firsttext = "Excellent";
    // var secondtext = "Shoulder <br>& Neck" ;
    
    // var ID1 = '.box2b' 
    // var dir1 = 'l'
    // firstImg ='-1'
    
    // addtext('.box2a', "0째-18째", "Flexion");
    // addtext('.box2a', "0째-18째", "Extension");
    // addtext('.box2a', "0째-18째", "Abduction");
    // //   addtext('.box2a', "0째-18째", "Adduction");
    // addImage('.box2a', "icons/ROM Red.png");
    // addlower('.box2b ', dir, firstImg, firsttext, secondImg, secondtext);
    // addlower(ID1, dir1, firstImg, firsttext, secondImg, secondtext);
    
    //  addlower('.box2b', 'l', '-1', 'Excellent', "icons/EMG ICon.png", 'Shoulder');
    
    
    // Outer Box:-
    function addOuterLine_Head(ID, data)
    {
        const el = document.createElement('div');
        el.innerHTML ="<br>" + "<b style = 'font-size: 11.3472px;'>" +data +"</b>";
        el.classList.add('hip');
        const box = document.querySelector(ID); // Use querySelector instead of getElementByClass
        box.appendChild(el);
    }
    
    // addOuterLine_Head('.b1', 'Shoulder');
    
    // s1 = "shailab";
    var shift = ['0px','10px', '20px', '30px', '40px', '50px', '60px', '70px', '80px', '90px', '100px']
    var count =1;
    function addOuterLine(ID, icon, Information, UV)
    {
        count++;
        var colr = '#44C02F' 
        if(icon == 'icons/Fair.png')
        {
            colr = '#E6A000'
        }
        else if(icon == 'icons/Needs Attention.png')
        {
            colr = '#CC2016'
        }
        var s1 = "<div style='display:inline-flex'; margin-left:7.2px>"
    +"<img style = 'height:16.2px;width:17.136px;margin-left:14.4px; margin-top:16.2px;' class = 'good'src ='"+ icon+"'/>"+
    "<p class = 'gluteus' style = 'color :"+ colr +";font-size: 11.3472px;margin-top:8.1px'>"+Information+"</p>"
    + "</div>"
    +"<p class='uv'>("+UV+" uv)</p>";
        const el = document.createElement('div');
        el.innerHTML =s1;
        el.classList.add('info');
        const box = document.querySelector(ID); 
        box.appendChild(el);
    
        // const box1 = document.querySelector('#box1'); 
        // box1.style.bottom = shift[count];
        // const box2 = document.querySelector('#box2'); 
        // box2.style.bottom = shift[count];
        
        // const box2 = document.querySelector('.fit');
        // var s = 750 - count*10;
        // box2.style.top = s+'px';
    }
    
    icon = '/icons/icons/Fair.png';
    Information = 'Gluteus Maximus';
    ID = '.b1';
    UV = 209;
    
    // addOuterLine(ID, icon, Information, UV);
    // addOuterLine(ID, 'icons/Good.png', Information, UV);
    // // addOuterLine(ID, icon, Information, UV);
    
    // addOuterLine(ID, 'icons/Needs Attention.png', Information, UV);
    
    // addOuterLine(ID, icon, Information, UV);
    // addOuterLine_Head('.b1', 'Hip');
    // addOuterLine('.b1', icon, Information, UV);
    // addOuterLine('.b1', icon, Information, UV);
    
    // addOuterLine_Head('.b2', 'Hip');
    // addOuterLine('.b2', icon, Information, UV);
    // addOuterLine('.b2', icon, Information, UV);
    
    // addOuterLine_Head('.b2', 'Hip');
    // addOuterLine('.b2', icon, Information, UV);
    // addOuterLine('.b2', 'icons/Needs Attention.png', Information, UV);
    // addOuterLine(ID, icon, Information, UV);
    // addOuterLine(ID, icon, Information, UV);
    // addOuterLine(ID, icon, Information, UV);
    
    // page Spliting
    
    function secondPage()
    {
        var pagem = document.querySelector(".secondPage");
        pagem.classList.add('page');
        var page = document.createElement("div");
            page.classList.add("subpage");
    
            var image = document.createElement("img");
            image.src = secondPageImage;
            image.classList.add('p2fit');
            page.appendChild(image);
            page.setAttribute('id', 'page2');
            pagem.appendChild(page);
            // document.body.appendChild(pagem);
    
            var dotposition= [
                ['0px', '0px'], ['490px', '582px'], ['545px', '582px'], ['470px', '650px'], ['568px', '650px'], ['460px', '700px'],['580px', '700px'], ['504px', '660px'], ['532px', '660px'], ['495px', '710px'], ['545px', '710px'], ['501px', '805px'], ['536px', '805px'], ['506px', '900px'], ['530px', '900px']
            ]
            for(var i =1;i<=14;i++)
            {
                var s1 = 'p2d'+i;
                var d1 = document.createElement("div");
                d1.classList.add('dot');
                d1.classList.add(s1);
                // d1.setAttribute('id', s1);
                var d1i = document.createElement("div");
                d1i.classList.add('abc');
                d1.appendChild(d1i);
                page.appendChild(d1);
                s1 = '.p2d' + i;
                var id = document.querySelector(s1);
                id.style.left = dotposition[i][0];
                id.style.top = dotposition[i][1];
                id.style.visibility = 'hidden';
            }
    
            // line for page two
            for(var i = 1;i <=20;i++)
            {
                var s1 = 'p2line'+i+ 'a';
                var d1 = document.createElement("div");
                d1.classList.add('line');
                // d1.classList.add(s1);
                d1.setAttribute('id', s1);
                page.appendChild(d1);
                var s2 = 'p2line'+i+ 'b';
                var d2 = document.createElement("div");
                d2.classList.add('line');
                // d1.classList.add(s1);
                d2.setAttribute('id', s2);
                page.appendChild(d2);
            }
            
            // creating inner boxes on page 2
    
            for(var i = 1; i<=14; i++)
            {
                var s1 = 'p2box'+i;
                var d1 = document.createElement("div");
                var s11 = 'p2box-position'+i;
                d1.classList.add(s11);
                d1.setAttribute('id', s1);
                d1.classList.add('box');
                var d1i = document.createElement("div");
                d1i.classList.add('innerbox1');
                s11 = 'p2box'+i+'a';
                d1i.classList.add(s11);
                var s1i = s11 +'i';
                var d1i1 = document.createElement("div");
                d1i1.classList.add(s1i);
                if(i%2==1)d1i1.classList.add('left');
                else d1i1.classList.add('right');
                
                d1i.appendChild(d1i1);
                d1.appendChild(d1i);
                var d2i = document.createElement("div");
                d2i.classList.add('innerbox2');
                var sb = 'p2box'+i+'b';
                d2i.classList.add(sb);
                d2i.style.visibility = "visible";
                d1.appendChild(d2i);
                page.appendChild(d1);
                s1 = '#'+s1;
                // var db1 = document.querySelector(s1);
                
            }
            
            // const el1 = document.createElement('text');
            //     el1.innerHTML ="<br>" + "<b>" +"0째-18째" +"</b>" +" "+ "Adduction";
    
            //     const box1 = document.querySelector('.p2box1a'); // Use querySelector instead of getElementByClass
            //     box1.appendChild(el1);
    
        // implementing side Bar for second page
                var s1 = 'p2obox1';
                var d1 = document.createElement("div");
                d1.classList.add('p2boxr');
                // d1.setAttribute('id', s1);
                var hm1 = "<div class='muscles'>"+
                "<h4 style='text-align: center;font-size: 14.184px;'><b>Muscles</b>&ensp;(Right Side)</h4>"+
                "<text class = 'assited'><I>(Assited)</I></text>"+
            "</div>"+
            "<div class = 'p2b1'>" + "</div>";
            d1.innerHTML = hm1;
            // d1.style.position = relative;
            // d1.style.left = '100px'
            page.appendChild(d1);
            
    
            var s2 = 'p2obox2';
                var d2 = document.createElement("div");
                d2.classList.add('p2boxl');
                // d2.setAttribute('id', s2);
                // d2.style.float = "right";
                var hm2 = "<div class='muscles'>"+
                "<h4 style='text-align: center;font-size: 14.184px;'><b>Muscles</b>&ensp;(Left Side)</h4>"+
                "<text class = 'assited'><I>(Assited)</I></text>"+
            "</div>"+
            "<div class = 'p2b2'>" + "</div>";
            d2.innerHTML = hm2;
            page.appendChild(d2);
    
    }
    
    // secondPage();
    
    //         addtext('.p2box1a', "0째-18째", "Abduction");
    //         addtext('.p2box1a', "0째-18째", "Adduction");
    //         addImage('.p2box1a', 'icons/ROM Icon.png');
    //         addlower('.p2box1b', dir, firstImg, firsttext, secondImg, secondtext); 
    // icon
    function icon1(data, iconNumber)
    {
        if(iconNumber ==1)
        {
            if(data < 33)return '/icons/icons/Needs Attention.png';
            else if(data <66)return '/icons/icons/Fair.png';
            else return '/icons/icons/Good.png';
        }
        else if(iconNumber == 2)
        {
            if(data < 33)return '/icons/icons/ROM Red.png';
            else if(data <66)return '/icons/icons/ROM Yellow.png';
            else return '/icons/icons/ROM Green.png';
        }
        else if(iconNumber == 3)
        {
            if(data < 33)return '/icons/icons/EMG icon Red.png';
            else if(data <66)return '/icons/icons/EMG icon Yellow.png';
            else return '/icons/icons/EMG icon Green.png';
        }
    }
    
    function lowerinnerdata(data)
    {
        return 'Excellent'
    }
    
    function data1(d1, d2)
    {
        var s1 = d1 +'째-'+d2+'째';
        return s1;
    }
    
    function dot_Visible(id)
    {
        var d = document.querySelector(id);
        d.style.visibility = 'visible';
    }
    
    function line_Visible(id1, id2)
    {
        var d1 = document.querySelector(id1);
        // d1.style.visibility = 'visible';
        var d2 = document.querySelector(id2);
        // d2.style.visibility = 'visible';
    }
    
    function lower_data(data1, data2)
    {
        var d = ['', '', '', '']
    
        if(data1 < 33)
        {
            d[2] = "/icons/icons/EMG icon Red.png";
            d[1] = "Attention";
            d[0] = "/icons/icons/Poor Endurance Icon Red.png";
            d[3] = data2;
        }
        else if(data1 < 66)
        {
            d[2] = "/icons/icons/EMG icon Yellow.png";
            d[1] = "Good";
            d[0] = "-1";
            d[3] = data2;
        }
        else
        {
            d[2] = "/icons/icons/EMG icon Green.png";
            d[1] = "Excellent";
            d[0] = "-1";
            d[3] = data2;
        }
    }
    function joint(joint1)
    {
        if(joint1 == 'Shoulder'|| joint1 == 'Elbow' || joint1 == 'Wrist' || joint1 == 'Knee' || joint1 == 'Hip' || joint1 == 'Ankle')return joint1;
        else if(joint1 == 'Neck')return 'Shoulder';
        else if(joint1 == 'Forearm') return 'Elbow';
        else return 'Trunk';
    }

        
    function jointNum(joint1)
    {
        if(joint1 == 'Shoulder')return 1;
        else if(joint1 == 'Trunk')return 2;
        else if(joint1 == 'Elbow')return 3;
        else if(joint1 == 'Wrist')return 4;
        else if(joint1 == 'Hip')return 4;
        else if(joint1 == 'Knee')return 5;
        else return 7;
    }

    function firstImg(data)
    {
        if(data<=33)return '/icons/icons/Poor Endurance Icon Red.png';
        else if(data <= 66)return '/icons/icons/Poor Endurance Icon.png';
        else return '-1';
    }

    function firsttext(data)
    {
        if(data <=33)return '1 of 3 Needs <br>Attention';
        else if(data <= 66)return '1 of 3 Needs <br>Attention';
        else return 'Excellent';
    }

    // addtext('.box2a', "0째-18째", "Abduction");
    // //   addtext('.box2a', "0째-18째", "Adduction");
    // addImage('.box2a', "icons/ROM Red.png");
    // addlower('.box2b ', 'right', firstImg(18), firsttext(18), 'icons/Poor Endurance Icon.png', 'Shoulder');
    function movement(arr3)
    {
        var i =0, j =0;
        var arr = [];
       
        while(i<arr3.length)
        {
            var arr1 = [0,'', '',0, '',1000];
            arr1[4]= joint(arr3[i][0]);
            console.log(joint[arr3[i][0]]);
            arr1[0] = jointNum(joint(arr3[i][0]));
            arr1[1]=arr3[i][2];
            arr1[2]=arr3[i][3];
            arr1[3]=arr3[i][4];
            arr1[5] = arr3[i][4];
            while(j<arr3.length && arr1[4] == joint(arr3[i][0]) && arr1[1] == arr3[j][2] &&  arr1[2]==arr3[j][3])
            {
                if(arr1[3]<arr3[j][4])arr1[3]=arr3[j][4];
                if(arr1[5]>arr3[j][4])arr1[5]=arr3[j][4];
                j++;
            }
            if(i!=j)i=j;
            else i++;
            arr.push(arr1);
        }

        i=0,j=0;
        while(i<arr.length)
        {
            var num=arr[i][5];
            while(j<arr.length && arr[i][4] == arr[j][4] && arr[i][1] == arr[j][1])
            {
                if(arr[j][5]<num)num=arr[j][5];
                j++;
            }
            var k =i;
            while(k<j)
            {
                arr[k][5]=num;
                k++;
            }
            if(i !=j)i=j;
            else i++;
        }

      
        arr.sort();
        return arr;
    }

    // id mapping
    var mapid ={};
    mapid['Shoulder'] = ['.box1a', '.box1b', '.box2a','.box2b', '.p2box1a','.p2box1b' , '.p2box2a', '.p2box2b', '.dot1', '.dot2', '.p2d1', '.p2d2', '.line1a', '.line1b', '.line2a', '.line2b', '.p2line1a', '.p2line1b', '.p2line2a', '.p2line2b'] 
    mapid['Elbow'] = ['.box3a', '.box3b', '.box4a','.box4b', '.p2box3a','.p2box3b' , '.p2box4a', '.p2box4b', '.dot3', '.dot4', '.p2d3', '.p2d4','.line3a', '.line3b', '.line4a', '.line4b', '.p2line3a', '.p2line3b', '.p2line4a', '.p2line4b'] 
    mapid['Wrist'] = ['.box5a', '.box5b', '.box6a','.box6b', '.p2box5a','.p2box5b' , '.p2box6a', '.p2box6b', '.dot5', '.dot6', '.p2d5', '.p2d6', '.line5a', '.line5b', '.line6a', '.line6b', '.p2line5a', '.p2line5b', '.p2line6a', '.p2line6b'] 
    mapid['Trunk'] = ['.box7a', '.box7b', '.box8a','.box8b', '.p2box7a','.p2box7b' , '.p2box8a', '.p2box8b', '.dot7', '.dot8', '.p2d7', '.p2d8', '.line7a', '.line7b', '.line8a', '.line8b', '.p2line7a', '.p2line7b', '.p2line8a', '.p2line8b'] 
    mapid['Hip'] = ['.box9a', '.box9b', '.box10a','.box10b', '.p2box9a','.p2box9b' , '.p2box10a', '.p2box10b', '.dot9', '.dot10', '.p2d9', '.p2d10', '.line9a', '.line9b', '.line10a', '.line10b', '.p2line9a', '.p2line9b', '.p2line10a', '.p2line10b'] 
    mapid['Knee'] = ['.box11a', '.box11b', '.box12a','.box12b', '.p2box11a','.p2box11b' , '.p2box12a', '.p2box12b', '.dot11', '.dot12', '.p2d11', '.p2d12', '.line11a', '.line11b', '.line12a', '.line12b', '.p2line11a', '.p2line11b', '.p2line12a', '.p2line12b'] 
    mapid['Ankle'] = ['.box13a', '.box13b', '.box14a','.box14b', '.p2box13a','.p2box13b' , '.p2box14a', '.p2box14b', '.dot13', '.dot14', '.p2d13', '.p2d14', '.line13a', '.line13b', '.line14a', '.line14b', '.p2line13a', '.p2line13b', '.p2line14a', '.p2line14b']  
    
    // secondPage();
    
    // addtext('.box14a', "0째-18째", "Flexion");
    // addtext('.box14a', "0째-18째", "Extension");
    // addtext('.p2box2a', "0째-18째", "Abduction");
    //   addtext('.box2a', "0째-18째", "Adduction");
    // addImage('.box14a', "icons/ROM Red.png");
    // addlower('.box14b ', dir, firstImg, firsttext, secondImg, secondtext);
    
    // var arr = [['joint'], ['muscle'], ['side'], ['movement'], ['movement data'], ['muscle data'] ];
    function report_new_kranthi(arr, gender, effectedSide)
    {
      changeImage(gender, patient_data, effectedSide);
        var split = 0;
        var leftSize =0;
        var rightSize =0;

        var a = movement(arr);

        console.log(a);



       
        // addtext('.box1a', "0째-18째", "Flexion");
        var mapjoint = {};
        mapjoint['Shoulder'] = [0, 0, 0, 0];
        mapjoint['Neck'] = [0, 0, 0, 0];
        mapjoint['Forearm'] = [0, 0, 0, 0];
        mapjoint['Elbow'] = [0, 0, 0, 0];
        mapjoint['Wrist'] = [0, 0, 0, 0];
        mapjoint['Thoracic'] = [0, 0, 0, 0];
        mapjoint['Lumbar'] = [0, 0, 0, 0];
        mapjoint['Abdomen'] = [0, 0, 0, 0];
        mapjoint['Hip'] = [0, 0, 0, 0];
        mapjoint['Knee'] = [0, 0, 0, 0];
        mapjoint['Ankle'] = [0, 0, 0, 0];
        
        // ###########################Positioning ####################
    
        // var mapPosition = {};
        // mapPosition['Shoulder'] = ['0px', '0px', '0px', '0px'];
        // mapPosition['Elbow'] = ['0px', '0px', '0px', '0px'];
        // mapPosition['Wrist'] = ['0px', '0px', '0px', '0px'];
        // mapPosition['Truck'] = ['0px', '0px', '0px', '0px'];
        // mapPosition['Hip'] = ['0px', '0px', '0px', '0px'];
        // mapPosition['Knee'] = ['0px', '0px', '0px', '0px'];
        // mapPosition['Ankle'] = ['0px', '0px', '0px', '0px'];
    
        // function positioning(id )
        // {
            
        // }
        //trial start
        
var mapjoint1 = {};
mapjoint1['Shoulder'] = [0, 0, 0, 0];
mapjoint1['Elbow'] = [0, 0, 0, 0];
mapjoint1['Wrist'] = [0, 0, 0, 0];
mapjoint1['Trunk'] = [0, 0, 0, 0];
mapjoint1['Hip'] = [0, 0, 0, 0];
mapjoint1['Knee'] = [0, 0, 0, 0];
mapjoint1['Ankle'] = [0, 0, 0, 0];

console.log(a.length);
for(var i =0;i <a.length;i++)
{
  if(a[i][1] == 'Left')
  {
      if(mapjoint1[a[i][4]][0] == 0)
      {
          
          leftSize += 40;
          if(leftSize<=100)
          {
              dot_Visible(mapid[a[i][4]][9]);
              mapjoint1[a[i][4]][0]=1;
              addtext(mapid[a[i][4]][2], data1(0,a[i][3]), a[i][2], 'left');
              if(i == a.length -1)
              {
                  addImage(mapid[a[i][4]][2], icon1(a[i][5], 2), 'left');
                  addlower(mapid[a[i][4]][3], 'left', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][14], mapid[a[i][4]][15]);
              }
              else if(a[i][4]!=a[i+1][4] || a[i][1] != a[i+1][1])
              {
                  addImage(mapid[a[i][4]][2], icon1(a[i][5], 2), 'left');
                  addlower(mapid[a[i][4]][3], 'left', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][14], mapid[a[i][4]][15]);
              }
              else if(leftSize>80)
              {
                  addImage(mapid[a[i][4]][2], icon1(a[i][5], 2), 'left');
                  addlower(mapid[a[i][4]][3], 'left', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][14], mapid[a[i][4]][15]);
              }
          }
          else
          {
              if(split ==0)
              {
                  split =1;
                  secondPage();
              } 
              // dot_Visible(mapid[a[i][4]][11]);


              
              if(mapjoint1[a[i][4]][1] == 0)
              {
                  mapjoint1[a[i][4]][1] = 1;
              }
              addtext(mapid[a[i][4]][6], data1(0,a[i][3]), a[i][2], 'left')

              if(i == a.length -1)
              {
                  addImage(mapid[a[i][4]][6], icon1(a[i][5], 2), 'left');
                  addlower(mapid[a[i][4]][7], 'left', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][18], mapid[a[i][4]][19])
              }
              else if(a[i][4]!=a[i+1][4] || a[i][1] != a[i+1][1])
              {
                  addImage(mapid[a[i][4]][6], icon1(a[i][5], 2), 'left');
                  addlower(mapid[a[i][4]][7], 'left', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][18], mapid[a[i][4]][19]);
              }
          }
      }
      else
      {
          leftSize += 20;
          if(leftSize<=100)
          {
              dot_Visible(mapid[a[i][4]][9]);
              addtext(mapid[a[i][4]][2], data1(0,a[i][3]), a[i][2], 'left')

              if(i == a.length -1)
              {
                  addImage(mapid[a[i][4]][2], icon1(a[i][5], 2), 'left');
                  addlower(mapid[a[i][4]][3], 'left', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][14], mapid[a[i][4]][15]);
                  
              }
              else if(a[i][4]!=a[i+1][4] || a[i][1] != a[i+1][1])
              {
                  addImage(mapid[a[i][4]][2], icon1(a[i][5], 2), 'left');
                  addlower(mapid[a[i][4]][3], 'left', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][14], mapid[a[i][4]][15]);
              }
              else if(leftSize == 100)
              {
                  addImage(mapid[a[i][4]][2], icon1(a[i][5], 2), 'left');
                  addlower(mapid[a[i][4]][3], 'left', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][14], mapid[a[i][4]][15]);
              }
          }
          else
          {
              // dot_Visible(mapid[a[i][4]][11]);
              if(split ==0)
              {
                  split =1;
                  secondPage();
              }

              if(mapjoint1[a[i][4]][1] == 0)
              {
                  leftSize+=20;
                  mapjoint1[a[i][4]][1] = 1;
              }
              addtext(mapid[a[i][4]][6], data1(0,a[i][3]), a[i][2], 'left')

              if(i == a.length -1)
              {
                  addImage(mapid[a[i][4]][6], icon1(a[i][5], 2), 'left');
                  addlower(mapid[a[i][4]][7], 'left', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][18], mapid[a[i][4]][19]);
              }
              else if(a[i][4]!=a[i+1][4] || a[i][1] != a[i+1][1])
              {
                  addImage(mapid[a[i][4]][6], icon1(a[i][5], 2), 'left');
                  addlower(mapid[a[i][4]][7], 'left', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][18], mapid[a[i][4]][19]);
              }
          }
      }
  }
  else  if(a[i][1] == 'Right')
  {
      if(mapjoint1[a[i][4]][2] == 0)
      {
          
          rightSize += 40;
          if(rightSize<=100)
          {
              dot_Visible(mapid[a[i][4]][8]);
              mapjoint1[a[i][4]][2]=1;
              addtext(mapid[a[i][4]][0], data1(0,a[i][3]), a[i][2], 'right')


              if(i == a.length -1)
              {
                  addImage(mapid[a[i][4]][0], icon1(a[i][5], 2), 'right');
                  addlower(mapid[a[i][4]][1], 'right', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][12], mapid[a[i][4]][13]);
              }
              else if(a[i][4]!=a[i+1][4] || a[i][1] != a[i+1][1])
              {
                  addImage(mapid[a[i][4]][0], icon1(a[i][5], 2), 'right');
                  addlower(mapid[a[i][4]][1], 'right', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][12], mapid[a[i][4]][13]);
              }
              else if(rightSize>80)
              {
                  addImage(mapid[a[i][4]][0], icon1(a[i][5], 2), 'right');
                  addlower(mapid[a[i][4]][1], 'right', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][12], mapid[a[i][4]][13]);
              }
          }
          else
          {
              if(split ==0)
              {
                  split =1;
                  secondPage();
              }
              dot_Visible(mapid[a[i][4]][10]);
              if(mapjoint1[a[i][4]][3] == 0)
              {
                  mapjoint1[a[i][4]][3] = 1;
              }
              
              addtext(mapid[a[i][4]][4], data1(0,a[i][3]), a[i][2], 'right')

              if(i == a.length -1)
              {
                  addImage(mapid[a[i][4]][4], icon1(a[i][5], 2), 'right');
                  addlower(mapid[a[i][4]][5], 'right', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][16], mapid[a[i][4]][17]);
              }
              else if(a[i][4] !=a [i+1][0] || a[i][1] != a[i+1][1])
              {
                  addImage(mapid[a[i][4]][4], icon1(a[i][5], 2), 'right');
                  addlower(mapid[a[i][4]][5], 'right', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][16], mapid[a[i][4]][17]);
              }
          }
      }
      else
      {
          rightSize += 20;
          if(rightSize<=100)
          {
              dot_Visible(mapid[a[i][4]][8]);
              addtext(mapid[a[i][4]][0], data1(0,a[i][3]), a[i][2], 'right')

              if(i == a.length -1)
              {
                  addImage(mapid[a[i][4]][0], icon1(a[i][5], 2), 'right');
                  addlower(mapid[a[i][4]][1], 'right', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][12], mapid[a[i][4]][13])
              }
              else if(a[i][4]!=a[i+1][4] || a[i][1] != a[i+1][1])
              {
                  addImage(mapid[a[i][4]][0], icon1(a[i][5], 2), 'right');
                  addlower(mapid[a[i][4]][1], 'right', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][12], mapid[a[i][4]][13]);
              }
              else if(rightSize == 100)
              {
                  addImage(mapid[a[i][4]][0], icon1(a[i][5], 2), 'right');
                  addlower(mapid[a[i][4]][1], 'right', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][12], mapid[a[i][4]][13]);
              }
          }
          else
          {
              if(split ==0)
              {
                  split =1;
                  secondPage();
              }
              dot_Visible(mapid[a[i][4]][10]);
              if(mapjoint1[a[i][4]][3] == 0)
              {
                  rightSize+=20;
                  mapjoint1[a[i][4]][3] = 1;
              }
              addtext(mapid[a[i][4]][4], data1(0,a[i][3]), a[i][2], 'right')
              if(i == a.length -1)
              {
                  addImage(mapid[a[i][4]][4], icon1(a[i][5], 2), 'right');
                  addlower(mapid[a[i][4]][5], 'right', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][16], mapid[a[i][4]][17]);
              }
              else if(a[i][4]!=a[i+1][4] || a[i][1] != a[i+1][1])
              {
                  addImage(mapid[a[i][4]][4], icon1(a[i][5], 2), 'right');
                  addlower(mapid[a[i][4]][5], 'right', firstImg(a[i][5]), firsttext(a[i][5]), icon1(a[i][5], 3), a[i][4]);
                  line_Visible(mapid[a[i][4]][16], mapid[a[i][4]][17]);
                  
              }
          }
      }
  }
  console.log('Shailab1');
}
//Trial end.
      leftSize=0;
      rightSize=0;
      console.log('Shailab');
      for(var i =0;i <arr.length;i++)
      {
          if(arr[i][2] == 'Left')
          {
              if(mapjoint[arr[i][0]][0] == 0)
              {
                  
                  leftSize += 40;
                  if(leftSize<=120)
                  {
                      mapjoint[arr[i][0]][0]=1;
                      addOuterLine_Head('.b2', arr[i][0]);
                      addOuterLine('.b2',icon1(arr[i][5],1),arr[i][1], arr[i][5]);
                  }
                  else
                  {
                      if(split ==0)
                      {
                          split =1;
                          secondPage();
                      } 
                      if(mapjoint[arr[i][0]][1] == 0)
                      {
                          addOuterLine_Head('.p2b2', arr[i][0]);
                          mapjoint[arr[i][0]][1] = 1;
                      }
                      
                      addOuterLine('.p2b2',icon1(arr[i][5],1),arr[i][1], arr[i][5]);
                  }
              }
              else
              {
                  leftSize += 20;
                  if(leftSize<=120)
                  {
                      addOuterLine('.b2',icon1(arr[i][5],1),arr[i][1], arr[i][5]);
                  }
                  else
                  {
                      if(split ==0)
                      {
                          split =1;
                          secondPage();
                      }
  
                      if(mapjoint[arr[i][0]][1] == 0)
                      {
                          leftSize+=20;
                          addOuterLine_Head('.p2b2', arr[i][0]);
                          mapjoint[arr[i][0]][1] = 1;
                      }
  
                      addOuterLine('.p2b2',icon1(arr[i][5],1),arr[i][1], arr[i][5]);
                  }
              }
          }
          else  if(arr[i][2] == 'Right')
          {
              if(mapjoint[arr[i][0]][2] == 0)
              {
                  
                  rightSize += 40;
                  if(rightSize<=120)
                  {
                      mapjoint[arr[i][0]][2]=1;
                      addOuterLine_Head('.b1', arr[i][0]);
                      addOuterLine('.b1',icon1(arr[i][5],1),arr[i][1], arr[i][5]);
                  }
                  else
                  {
                      if(split ==0)
                      {
                          split =1;
                          secondPage();
                      }
                      if(mapjoint[arr[i][0]][3] == 0)
                      {
                          addOuterLine_Head('.p2b1', arr[i][0]);
                          mapjoint[arr[i][0]][3] = 1;
                      }
                      
                      addOuterLine('.p2b1',icon1(arr[i][5],1),arr[i][1], arr[i][5]);
                  }
              }
              else
              {
                  rightSize += 20;
                  if(rightSize<=120)
                  {
                      addOuterLine('.b1',icon1(arr[i][5],1),arr[i][1], arr[i][5]);
                  }
                  else
                  {
                      if(split ==0)
                      {
                          split =1;
                          secondPage();
                      }
                      if(mapjoint[arr[i][0]][3] == 0)
                      {
                          rightSize+=20;
                          addOuterLine_Head('.p2b1', arr[i][0]);
                          mapjoint[arr[i][0]][3] = 1;
                      }
  
                      addOuterLine('.p2b1',icon1(arr[i][5],1),arr[i][1], arr[i][5]);
                  }
              }
          }
  
      } 
      
}
    
    
    
    
    //   addtext('.box5a', "0째-19째", "Flexion");
    var arr = [['joint'], ['muscle'], ['side'], ['movement'], ['movement data'], ['muscle data'] ];
    
    var arr3 =
    [
        ['Lumbar', 'Gluteus Maximus', 'Right', 'flexion', 80, 40],
        ['Lumbar', 'Gluteus Maximus', 'Left', 'flexion', 70, 40],
         
        ['Shoulder', 'Gluteus Maximus', 'Right', 'flexion', 80, 40],
        ['Shoulder', 'Gluteus Maximus', 'Right', 'flexion', 70, 40],
        // ['Shoulder', 'Gluteus Maximus', 'Right', 'abduction', 70, 40],
        
        ['Shoulder', 'Gluteus Maximus', 'Left', 'flexion', 61, 40],
        ['Shoulder', 'Gluteus Maximus', 'Left', 'abduction', 61, 40],
        // ['Neck', 'Gluteus Maximus', 'Left', 'flexion', 61, 40],
        // ['Shoulder', 'Gluteus Maximus', 'Left', 'Lateral flexion', 60, 40],
        // ['Neck', 'Gluteus Maximus', 'Left', 'Lateral flexion', 70, 40],
        // ['Shoulder', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
        // ['Shoulder', 'Gluteus Maximus', 'left', 'Lateral flexion', 60, 40],
        // ['Elbow', 'Gluteus Maximus', 'Right', 'lateral flexion', 60, 40],
        ['Elbow', 'Gluteus Maximus', 'Right', 'lateral flexion', 60, 40],
        ['Elbow', 'Gluteus Maximus', 'Right', 'lateral flexion', 60, 40],
    
        ['Elbow', 'Gluteus Maximus', 'Left', 'flexion', 60, 40],
        ['Elbow', 'Gluteus Maximus', 'Left', 'flexion', 60, 40],
        ['Elbow', 'Gluteus Maximus', 'Left', 'flexion', 60, 40],
        // ['Elbow', 'Gluteus Maximus', 'Left', 'flexion', 60, 40],

    
        // ['Wrist', 'Gluteus Maximus', 'Right', 'flexion', 60, 40],
        // ['Wrist', 'Gluteus Maximus', 'Left', 'flexion', 60, 40],
        // ['Wrist', 'Gluteus Maximus', 'Right', 'flexion', 60, 40],
        ['Wrist', 'Maximus', 'Right', 'flexion', 60, 40],
        // ['Wrist', 'Maximus', 'Right', 'flexion', 60, 40],

        // ['Wrist', 'Gluteus Maximus', 'Right', 'flexion', 60, 40],
        // ['Wrist', 'Gluteus Maximus', 'right', 'flexion', 60, 40],
        // ['Wrist', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
        ['Wrist', 'Gluteus Maximus', 'Left', 'flexion', 60, 40],
        // ['Wrist', 'Gluteus Maximus', 'Left', 'flexion', 60, 40],
        // ['Wrist', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
        // ['Wrist', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
        // ['Wrist', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
        // ['Elbow', 'Gluteus Maximus', 'right', 'flexion', 60, 40],
        // ['Elbow', 'Gluteus Maximus', 'right', 'lateral flexion', 60, 40],
        // ['Elbow', 'Gluteus Maximus', 'right', 'lateral flexion', 60, 40],
        // ['Elbow', 'Gluteus Maximus', 'right', 'lateral flexion', 60, 40],
       
        // ['Elbow', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
        // ['Elbow', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
        // ['Elbow', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
        // ['Elbow', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
        // ['Elbow', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
    
        
        
        // ['Elbow', 'Gluteus Maximus', 'left', 'dorsal flexion', 60, 40],
        // ['Hip', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
        // ['Hip', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
        // ['Hip', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
        // ['Hip', 'Gluteus Maximus', 'Left', 'flexion', 60, 40],
        // ['Hip', 'Gluteus Maximus', 'Right', 'flexion', 60, 40],
        // ['Hip', 'Gluteus Maximus', 'right', 'flexion', 60, 40],
        ['Hip', 'Gluteus Maximus', 'Left', 'flexion', 60, 40],
        ['Hip', 'Gluteus Maximus', 'Right', 'flexion', 60, 40],
    
        // ['Knee', 'Gluteus Maximus', 'Left', 'flexion', 60, 40],
        // ['Knee', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
        // ['Knee', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
        // ['Knee', 'Gluteus Maximus', 'left', 'flexion', 60, 40],
        
        // ['Knee', 'Gluteus Maximus', 'right', 'flexion', 63, 40],
    
        // ['Knee', 'Gluteus Maximus', 'Right', 'flexion', 63, 40],
        // ['Knee', 'Gluteus Maximus', 'Right', 'flexion', 63, 40],
        // ['Knee', 'Gluteus Maximus', 'Left', 'flexion', 63, 40],
        //  ['Knee', 'Gluteus Maximus', 'Left', 'flexion', 63, 40],
        //  ['Ankle', 'Gluteus Maximus', 'right', 'flexion', 63, 40],
        //  ['Ankle', 'Gluteus Maximus', 'right', 'flexion', 63, 40],
        //  ['Ankle', 'Gluteus Maximus', 'right', 'flexion', 63, 40],
        //  ['Ankle', 'Gluteus Maximus', 'Right', 'flexion', 63, 40],
        //  ['Ankle', 'Gluteus Maximus', 'Left', 'flexion', 63, 40],
        //  ['Ankle', 'Gluteus Maximus', 'Left', 'flexion', 63, 40],
        //  ['Ankle', 'Gluteus Maximus', 'left', 'flexion', 63, 40],
        //  ['Ankle', 'Gluteus Maximus', 'left', 'flexion', 63, 40], 
        // ['Ankle', 'Gluteus Maximus', 'left', 'flexion', 63, 40],
    ]
   
    var s2 = "Knee,Rectus Femoris,Right,Flexion,121,266,Knee,Vastus Medialis,Right,Extension,122,610,Knee,Gastrocnemius,Left,Flexion,124,851,Knee,Vastus Medialis,Left,Extension,124,283,Knee,Biceps Femoris,Left,Extension,111,1587,Knee,Biceps Femoris,Right,Extension,104,286,Hip,Gluteus Maximus,Right,Extension,15,434,Hip,Adductor Longus,Right,Adduction,7,459,Hip,Adductor Longus,Left,Abduction,0,1595,Hip,Gluteus Maximus,Left,Extension,13,25"

    function stringTodata(data)
    {
       
       var i =0;
       var arr = []
       while(i<data.length)
       {
          var arr1 = ["", "", "","", 0,0]
          var s1 = ""
          var count = 0;
            while(count<6 && i<data.length)
            {
                if(data[i]==',')
                {
                  if(count< 4)
                  {
                    arr1[count] = s1;
                  }
                  else 
                  {
                    arr1[count] = parseInt(s1);
                  }
                  count++;
                  s1 = "";
                }
                else 
                {
                  s1 = s1+data[i];
                }

                i++;
            }
            arr.push(arr1);
       }
        return arr;
    }

    var element = document.getElementById("myElement");
    let outputValue = element.value;
    var elementone = document.getElementById("myElementone")
    let outputValueone = elementone.value;
    var elementtwo = document.getElementById("myElementwo")
    let outputValuetwo = elementtwo.value;
    console.log(outputValueone);
    console.log(outputValuetwo);
    console.log(stringTodata(outputValue));

    //  arr3 = stringTodata(outputValue);
   
// outputValueone
  report_new_kranthi(arr3, outputValueone, outputValuetwo);
    
    </script>  


      <!-- </div> -->

      <div style=" top: 195px;height: 23px;width: 100%;left: 0px;border-radius: 0px;background-color: rgba(32, 123, 190, 1);position: absolute;display: flex;justify-content: space-between;padding: 0 6px 0;box-sizing: border-box;">
      
        <p style=" font-family: 'Roboto';font-style: normal;font-weight: 400;font-size: 9.2px;color: #ffffff;line-height: 0;margin: auto 0;width: auto;">Session Date: <%= new Date(report[0].sessiondetails[0].heldon).toDateString().split(' ').slice(1).join(' ')%>, <%= new Date(report[0].sessiondetails[0].heldon).toDateString().substring(0,3)%>, <%=calcTime()%></p>
        <p style=" font-family: 'Roboto';font-style: normal;font-weight: 400;font-size: 9.2px;color: #ffffff;line-height: 0;margin: auto 0;width: auto;">Session no: <%= sessionNo %></p>
        <p style=" font-family: 'Roboto';font-style: normal;font-weight: 400;font-size: 9.2px;color: #ffffff;line-height: 0;margin: auto 0;width: auto;">Session Duration: <%= getTotalSessionTime()%></p>
        <p style=" font-family: 'Roboto';font-style: normal;font-weight: 400;font-size: 9.2px;color: #ffffff;line-height: 0;margin: auto 0;width: auto;">Start Session: <%=details[0].phiziopatients[0].dateofjoin
          %></p>
        <p style=" font-family: 'Roboto';font-style: normal;font-weight: 400;font-size: 9.2px;color: #ffffff;line-height: 0;margin: auto 0;width: auto;">Last Session: <%= get_date()%></p>
      </div>



      <div class="patient_summary"  style="  position: absolute; width:100%; height: auto; left: 0px; top: 210px; border-bottom: 1.5px solid #cdcdcd; padding: 13px 6px 0; box-sizing: border-box; display: grid; grid-template-rows: 15px 1fr 1fr 15px; grid-template-columns: 80px 1fr 200px 1fr 150px; column-gap: 12px; row-gap: 8px;">
        <div id="patient-image-container" style=" grid-row-start: 1; grid-column-start: 1; grid-row-end: 5; grid-column-end: 2;">
        <div id="patient-image" style="  box-sizing: border-box; position: absolute; width: 60px; height: 60px;  #000000; border-radius: 10.7143px;">
          <% if ( details[0].phiziopatients[0].patientprofilepicurl!= "empty" ) { %>
            <img src="<%= "https://s3.ap-south-1.amazonaws.com/pheezee/" + details[0].phiziopatients[0].patientprofilepicurl%>" style="border-radius: 64px; width:60px; height:60px; margin-left:0.5rem">
             <%} else {%>
             <img src="/icons/default-patient.png">
             <%} %>
            </div>
        </div>
        <div id="patient-name" style="  grid-row-start: 1;grid-column-start: 2;grid-row-end: 2;grid-column-end: 4;">
        <p class="patient-detail-name" style="font-family: 'Roboto';font-style: normal;font-weight: 500;font-size: 9.75px;color: #2C2B2B;margin: auto 0;"> <%if(details[0].phiziopatients[0].patientgender.toLowerCase() == 'male' || details[0].phiziopatients[0].patientgender.toLowerCase() == 'm'){%>Mr. <%}else {%> Ms. <%}%> <%= get_name(details[0].phiziopatients[0].patientname)%>, <%=patientage(get_name(details[0].phiziopatients[0].patientage)) %>/<%=details[0].phiziopatients[0].patientgender.slice(0,1) %></p>
        </div>
        <div id="patient-phone" style=" grid-row-start: 2;grid-column-start: 2;grid-row-end: 3;grid-column-end: 3;">
        <p class="patient-detail-up" style=" font-family: 'Roboto';font-style: normal;font-weight: 500;font-size: 9.2px;color: #AEACAC;margin: auto;">Phone no:<br>
          <span class="patient-detail-down" style="font-family: 'Roboto';font-style: normal;font-weight: 400;font-size: 9.2px;color: #2C2B2B;"><%=details[0].phiziopatients[0].patientphone %></span>
        </p>
        </div>
        <div id="patient-mail" style="  grid-row-start: 2;grid-column-start: 3;grid-row-end: 3;grid-column-end: 4;">
        <p class="patient-detail-up" style=" font-family: 'Roboto';font-style: normal;font-weight: 500;font-size: 9.2px;color: #AEACAC;margin: auto;">Mail ID:<br>
          <span class="patient-detail-down" style="font-family: 'Roboto';font-style: normal;font-weight: 400;font-size: 9.2px;color: #2C2B2B;"><%=details[0].phiziopatients[0].patientemail %></span>
        </p>
        </div>
        <div id="patient-condition" style="  grid-row-start: 2; grid-column-start: 4; grid-row-end: 3; grid-column-end: 5;">
        <p class="patient-detail-up" style=" font-family: 'Roboto';font-style: normal;font-weight: 500;font-size:9.2px;color: #AEACAC;margin: auto;">Condition:<br>
          <span class="patient-detail-down" style="font-family: 'Roboto';font-style: normal;font-weight: 400;font-size:9.2px;color: #2C2B2B;"><%=details[0].phiziopatients[0].patientcondition %></span>
        </p>
        </div>
        <div id="patient-speciality" style=" grid-row-start: 2; grid-column-start: 5; grid-row-end: 3; grid-column-end: 6;">
        <p class="patient-detail-up"style=" font-family: 'Roboto';font-style: normal;font-weight: 500;font-size:9.2px;color: #AEACAC;margin: auto;">Speciality:<br>
          <span class="patient-detail-down" style="font-family: 'Roboto';font-style: normal;font-weight: 400;font-size:9.2px;color: #2C2B2B;"><%=details[0].phiziopatients[0].patientcasedes %></span>
        </p>
        </div>
        <div id="patient-side" style="  grid-row-start: 3; grid-column-start: 2; grid-row-end: 4; grid-column-end: 3;">
        <p class="patient-detail-up" style=" font-family: 'Roboto';font-style: normal;font-weight: 500;font-size:9.2px;color: #AEACAC;margin: auto;">Affected side:<br>
          <span class="patient-detail-down" style="font-family: 'Roboto';font-style: normal;font-weight: 400;font-size:9.2px;color: #2C2B2B;"><%=details[0].phiziopatients[0].patientinjured %></span>
        </p>
        </div>
        <div id="patient-history" style=" grid-row-start: 3;grid-column-start: 3;grid-row-end: 4;grid-column-end: 4;">
        <p class="patient-detail-up" style=" font-family: 'Roboto';font-style: normal;font-weight: 500;font-size:9.2px;color: #AEACAC;margin: auto;">Medical History:<br>
          <span class="patient-detail-down" style="font-family: 'Roboto';font-style: normal;font-weight: 400;font-size:9.2px;color: #2C2B2B;"><%=details[0].phiziopatients[0].patienthistory %></span>
        </p>
        </div>
        <div id="patient-id" style="  grid-row-start: 4;grid-column-start: 5;grid-row-end: 5;grid-column-end: 6;display: flex;justify-content: flex-end;">
        <p class="patient-detail-id" style=" font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 7px; color: #2D2D2D; margin: auto 0;">Patient ID: <%= details[0].phiziopatients[0].patientid %></p>
        </div>

      </div>


   <!-- calendar -->

       <div id="adherentce-title"
       style="position: relative;display: flex; flex-direction: row; align-items: center; justify-content: space-between ;padding: 0px;  width: inherit; height: 19px; left: 0px; top: 140px;">
   
       <div class="add-col" style="width: 332px; height: 0px; border: 3px solid #CDCDCD;"></div>
       <div id="add-name"
           style=" font-family: 'Roboto'; font-style: normal; font-weight: 700; font-size: 13pt; line-height: 19px; color: #707070;">
           Adherence</div>
       <div class="add-col" style="width: 332px; height: 0px; border: 3px solid #CDCDCD;"></div>
   
   </div>
  <section style="position:relative;top:150px; display: flex; height:190px;width: inherit; justify-content: space-around">
    <div style="position:relative;height:inherit; display: flex; flex-direction: column;width: 150px;justify-content: space-around; align-items: center;">

      <div id="adherenceChart" ></div>
          <script type="text/javascript">
            google.charts.load('current', {'packages':['corechart']});
            google.charts.setOnLoadCallback(drawChart);
      
            function drawChart() {
      
              var data = google.visualization.arrayToDataTable([
                ['Task', 'Hours per Day'],
                ['Work',     60],
                ['Eat',      40],
              ]);
      
              var options = {
                  legend: 'none',
                  width: 130,
                  height:130,
                colors: ['#E6A000', '#FFEFCC' ],
                is3D: false,
                  pieSliceText: 'none',
                  pieSliceBorderColor: '#E6A000',
                  enableInteractivity: false,
                  chartArea: {
                      left: "3%",
                      top: "9%",
                      height: "94%",
                      width: "94%",
                      backgroundColor: 'transparent'
                  },
      
              };
      
              var chart = new google.visualization.PieChart(document.getElementById('adherenceChart'));
      
              chart.draw(data, options);
            }
            
          </script> 
          <p style="font-family: 'Roboto';
          font-style: normal;
          font-weight: 700;
          font-size: 18px;
          line-height: 19px;
          display: flex;
          align-items: center;
          text-align: center;
          
          color: #E6A000;">60%</p>  
          <p style="font-family: 'Roboto';
          font-style: normal;
          font-weight: 600;
          font-size: 13px;
          line-height: 12px;
          display: flex;
          align-items: center;
          text-align: center;
          
          color: #002647;">Adherence</p> 
    </div>
  </section>

<div style="position: relative;top:150px; display: none;"> <output id="elementDates"><%=heldon_date_array(session_array_values)%></output></div>


        
  
      <!-- Footer of Page1-->
      <!-- <div style="display:none;width: 100%;height: 29pt;background-color:#062444 !important;position: relative;top: 526pt; display: flex;align-items: center;justify-content: space-between; padding: 5pt;">
        <p style="color:#FFFFFF !important;font-size:11pt; font-family: 'Avenir';position: relative;">Report downloaded on <%= new Date(today).toDateString().split(' ').slice(1).join(' ')%> </p>
        <p style="color:#FFFFFF !important;font-size:11pt; font-family: 'Avenir';position: relative;left: -65pt;"><%if(details[0].phiziopatients[0].patientgender.toLowerCase() == 'male' || details[0].phiziopatients[0].patientgender.toLowerCase() == 'm'){%>Mr. <%}else {%> Ms. <%}%> <%= details[0].phiziopatients[0].patientname.substr(0,1).toUpperCase()%><%= details[0].phiziopatients[0].patientname.substr(1,details[0].phiziopatients[0].patientname.length)%> </p>
        <p style="color:#FFFFFF !important;font-size:11pt; font-family: 'Avenir';position: relative;"> Page 1/<%if(report[0].sessiondetails.length < 13) { %> <%=report[0].sessiondetails.length+2%> <% } %> <%if(report[0].sessiondetails.length >= 13) { %> <%=report[0].sessiondetails.length+3%> <% } %>  </p>
      </div> -->

      <!-- <div style="width: 100%;height: 29pt;background-color:#062444 !important;position: relative;top: 650pt;"></div>
      <p style="color:#FFFFFF !important;text-align: right;font-size:11pt; font-family: 'Avenir';top:625pt;right:5pt;position: relative;"> Page 1/<%if(report[0].sessiondetails.length < 13) { %> <%=report[0].sessiondetails.length+2%> <% } %> <%if(report[0].sessiondetails.length >= 13) { %> <%=report[0].sessiondetails.length+3%> <% } %>  </p>
      <p style="color:#FFFFFF !important;text-align: center;font-size:11pt; font-family: 'Avenir';top:610pt;position: relative;"><%if(details[0].phiziopatients[0].patientgender.toLowerCase() == 'male' || details[0].phiziopatients[0].patientgender.toLowerCase() == 'm'){%>Mr. <%}else {%> Ms. <%}%> <%= details[0].phiziopatients[0].patientname.substr(0,1).toUpperCase()%><%= details[0].phiziopatients[0].patientname.substr(1,details[0].phiziopatients[0].patientname.length)%> </p>
      <p style="color:#FFFFFF !important;text-align: left;font-size:11pt; font-family: 'Avenir';top:595pt;position: relative;left: 5pt;">Report downloaded on <%= new Date(today).toDateString().split(' ').slice(1).join(' ')%> </p> -->
      
    </div>

   


    <!-- PAGE 2 -->
    
    <div class="page" <% if(report[0].sessiondetails.length <= 4) { %> style="display: none" <% } %>>

      <div class="header"></div>
      <!-- <div id ="borders" style="width:100%;height: 10.01pt;position: absolute; top:190.01pt;left:-0.74pt;background-color: #062545 !important;"></div> -->


      <!-- Footer of Page2-->
      <div style="width: 100%;height: 29pt;background-color:#062444 !important;position: relative;top: 831.5pt;"></div>
      <p style="color:#FFFFFF !important;text-align: right;font-size:11pt; font-family: 'Avenir';top:811pt;right:5pt;position: relative;"> Page 2/<%if(report[0].sessiondetails.length <= 13) { %> <%=report[0].sessiondetails.length+2%> <% } %> <%if(report[0].sessiondetails.length > 13) { %> <%=report[0].sessiondetails.length+3%> <% } %> </p>
      <p style="color:#FFFFFF !important;text-align: center;font-size:11pt; font-family: 'Avenir';top:794.5pt;position: relative;"><%if(details[0].phiziopatients[0].patientgender.toLowerCase() == 'male' || details[0].phiziopatients[0].patientgender.toLowerCase() == 'm'){%>Mr. <%}else {%> Ms. <%}%> <%= details[0].phiziopatients[0].patientname.substr(0,1).toUpperCase()%><%= details[0].phiziopatients[0].patientname.substr(1,details[0].phiziopatients[0].patientname.length)%> </p>
      <p style="color:#FFFFFF !important;text-align: left;font-size:11pt; font-family: 'Avenir';top:779pt;position: relative;left: 5pt;">Report downloaded on <%= new Date(today).toDateString().split(' ').slice(1).join(' ')%> </p>
      
    </div>


    

      
      <!--PAGE 2/3 based on number of sessions-->

    <!-- ----------------- -->
    <!-- starts loop for patient details  -->
    <!-- --------------------------- -->
    <% report[0].sessiondetails.map((e,i)=>{ %>

      <div class="page" style="position:relative">

        <div class="header"></div>

                <!-- //exercise&patient-details -->
<nav id="overall-details"
style="position: relative; width: 100%; height: 94px; left: 0px; background: #207BBE; display: flex; align-items: center; justify-content: center; padding: 0 24px 0; box-sizing: border-box;">

<!-- //exercise-imgage -->
<div id="exercise-img"
    style="box-sizing: border-box; position: absolute; width: 72px; height: 72px; left: 24px; background: #FFFFFF; border: 0.701299px solid #BEBEBE; border-radius: 4.20779px;">
      <img src="/icons/SVG/<%=e.bodypart.toLowerCase()%><%=e.exercisename.toLowerCase()%><%=e.orientation.substr(0,5).toLowerCase()%>.svg" style="position: relative; width: 100%; height: 100%;border-radius: 4.20779px">

</div>

<!-- //exercise-details -->
<div id="exercise-details"
    style="position: absolute; width: auto; top: 15px; height: 64px; padding: 4px 0; box-sizing: border-box; ">
    <p
        style="font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 17.2px; line-height: 10px; margin-top: 0; text-align: center; color: #FFFFFF;">
        <%=e.bodypart%> | <%=e.musclename%> | <%=e.exercisename%></p>
    <p
        style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 13.3px; line-height: 10px; text-align: center; color: #FFFFFF; margin-top: 15px;">
        <%=e.orientation.substr(0,5)%>&nbsp(&nbsp<%=e.bodyorientation.substr(0,1).toUpperCase()%><%=e.bodyorientation.substr(1,6).toLowerCase()%>&nbsp)</p>
    <p
        style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 10.6px; line-height: 10px; text-align: center; color: #FFFFFF; margin-top: 10px;">
        Session recording no: <%=get_session_recording(e.bodypart,e.exercisename,e.orientation,e.musclename,e.heldon)%></p>
</div>

<!-- //patient-name&time -->
<div id="exercise-time"
    style="position: absolute; right: 24px; margin-top: 12px; width: 140px; height: 50px; display: flex; flex-direction: column; align-items: flex-end;">
    <p
        style="height: 30px; display:flex; align-items: center; justify-content: end; margin: 0;  font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11.1px; text-align: right; line-height: 13px; color: #FFFFFF;">
        Dr. <%=details[0].phizioname%>
        <span style="width: 16px; height: 16px; margin-left:12px; ">
            <img src="/icons/new-images/doctor.png" style=" height: 100%; width: 100%;">
        </span>
    </p>

    <p
        style="display:flex; align-items: center; justify-content: end; margin: 0;  font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11.1px; line-height: 10px; color: #FFFFFF;">
        <%=e.sessiontime %>
        <span style="width: 16px; height: 16px; margin-left:11px;">
            <img src="/icons/new-images/clock.png" style=" height: 100%; width: 100%;">
        </span>
    </p>

</div>
</nav>

    <!-- //container of left&right -->
    <section id="container" style=" position: relative; display: flex; height: auto;  width: 100%;">
      <!-- //left-container -->
      <section id="left-side" style="position: relative; height: auto; width: 66%; padding-left: 8px;">
        <div id="topgun<%=i%>"></div>
        <% if(lastsessions_array[i]!=0) { %> 
        <output id="elementId<%=i%>" style="display: none;"><%=lastsessionemg(lastsessions_array[i],e.maxemg)%></output>
        <output id="elementId2<%=i%>" style="display: none;"><%=lastsessionrom(lastsessions_array[i],e.maxangle,e.minangle)%></output>
        <output id="emgId<%=i%>" style="display: none;"><%=eeshan_firstEMGtable(e.orientation,e.bodypart,e.exercisename,e.musclename,e.maxemg,report[0].sessiondetails,lastsession_array_new,details[0].phiziopatients[0].patientinjured).innersecond%></output>
        <% } %>
        <!-- start//section-1 goodside-details -->
        <section id="sec-goodside"
            style=" position: relative;width: 496px; height: 250px; left: 30px; top: 24px; display: flex; padding: 0px; justify-content: space-between;">

            <!-- //body-image -->
            <div id="goodside-img"
                style="position: relative;width: 166px; height: inherit; display: flex; flex-direction: column; justify-content: space-between;">
                

                <div id="img-container" style="width: 166px; height: 236px;">
                <img src="/icons/Full_body/<%=firstImageFunction(e.orientation,e.bodypart,e.exercisename,e.musclename,report[0].sessiondetails,lastsession_array_new,details[0].phiziopatients[0].patientinjured,lastsessions_array[i]).firstimage%>.png" style="height: 100%; width: 100%;">
                </div>
                <div id="goodside-avail" style="width: 166px; height: 16px; ">
                    <p
                        style="font-family: 'Roboto'; font-style: italic; font-weight: 400; font-size: 10.6px; color: #707070; margin-top: 0; line-height: 156.19%;">
                        <%=firstImageFunction(e.orientation,e.bodypart,e.exercisename,e.musclename,report[0].sessiondetails,lastsession_array_new,details[0].phiziopatients[0].patientinjured,lastsessions_array[i]).firstdatalabel%>  
                      </p>
                </div>
            </div>

            <!-- //goodside-details-container-->
            <div id="goodside-details"<% if(lastsessions_array[i]!=0) { %> style=" position: relative;  width: 310px; height: 250px; box-sizing: border-box; display: flex; flex-direction: column; justify-content: space-between; " <% } else  { %>style=" position: relative; width: 310px; top:0; height: 190px; box-sizing: border-box; display: flex; flex-direction: column; justify-content: space-between;"<% } %>>

              <!-- //emg-table-div-->
              <% if(lastsessions_array[i]!=0) { %> 
              <% if((get_session_recording(e.bodypart,e.exercisename,e.orientation,e.musclename,e.heldon)) > 1) { %>
             <div id="emg" style="position: relative; width: 290px; height: 120px; border: 1.4px solid #E3E3E3 !important; border-radius: 10px; padding: 3px 0 0; box-sizing: border-box;">

                <div style="position: absolute; width:290px;margin-top: 0; z-index: 1; display:flex; align-items: center; justify-content:center">
                    <div style="width:17.2px; height: 11.7px; display:flex; align-items: center; justify-content: center;">
                        <img src="/icons/new-images/EMG.png" alt="" style=" height: 100%; width: 100%;">
                    </div>
                    <div style=" font-family: 'Roboto'; font-style: normal; font-weight: 700; font-size: 13.3px;height: 24px; line-height: 24px;color: #012E57; margin-left: 10px;">EMG</div>
                </div>
                <div style="position: absolute; z-index: 1; top:20px;height: 88px; width:1.5px;margin-left: 40px;background-color: #012E57;border-radius: 6px;"></div>
                <div style="position: absolute; z-index: 1;  top: 92px;height: 1.5px; width:255px;margin-left: 22px;background-color: #012E57;border-radius: 6px;"></div>
                <div id="topemg-graph<%=i%>" style="width: 290px; height: 110px; margin-top: 10px;"></div>
                <div style="position: absolute; z-index: 1;top:96px; margin-left:70px;font-family: 'Ebrima'; font-style: normal; font-weight: 400; font-size: 10px;  color: #A6A6A6;">Baseline</div>
                <div style="position: absolute; z-index: 1; top: 96px; margin-left: 225px;font-family: 'Ebrima';font-style: normal;font-weight: 400;font-size: 10px;text-align: center;color: #595959;">Week&nbsp<%=firstWeekFunction(e.orientation,e.bodypart,e.exercisename,e.musclename,e.heldon,report[0].sessiondetails,lastsessions_array[i]).firstweek%></div>
          
                    <script>



                      google.charts.load('current', {
                          'packages': ['corechart']
                      });
                    
                        google.charts.setOnLoadCallback(drawChart);
                    
                      
                    
                    
                      function drawChart() {

                        let emg_lat="<%=e.maxemg%>"
                        let last_EMG_Arr=document.getElementById("elementId<%=i%>");
                        let numberArray=last_EMG_Arr.value;

                        let last_arry=[];

                        var myArray=numberArray.split(",");
                        for( let i=0; i<myArray.length; i++)
                        {
                          last_arry.push(Number(myArray[i]));
                        }

                        let good_out=document.getElementById("emgId<%=i%>");
                        let goodemg_out=good_out.value;
                        if(goodemg_out=="-"){goodemg_out=0;}
                        goodemg_out=Number(goodemg_out);
                

                          var datatopemg = new google.visualization.DataTable();
                          datatopemg.addColumn('number', 'x');
                          datatopemg.addColumn('number', 'y');
                          datatopemg.addColumn('number', 'color band 0');
                          datatopemg.addColumn('number', 'color band 1');
                          datatopemg.addColumn('number', 'color band 2');
                          datatopemg.addColumn('number', 'color band 3');
                    
                

                          var y = last_arry;
                          if(y.length > 2){
                          datatopemg.addRow([0, , goodemg_out,y[0] ,y[y.length-1],0]);
                          datatopemg.addRow([1, y[0], goodemg_out,y[0] ,y[y.length-1],0]);
                          for (var i = 2; i <y.length; i++) {
                              datatopemg.addRow([i, y[i-1], goodemg_out, , y[y.length-1],0]);
                          }
                          datatopemg.addRow([y.length, y[y.length-1], goodemg_out, , y[y.length-1],y[y.length-1]]);
                          datatopemg.addRow([y.length+1, , goodemg_out, , , 0]);
                          maxshow=y.length+1;
                        }

                          if(y.length < 3){
                          maxshow=4;
                          datatopemg.addRow([0, , goodemg_out,y[0] , y[y.length-1],0]);
                          datatopemg.addRow([1, y[0], goodemg_out,y[0] , y[y.length-1],0]);
                          datatopemg.addRow([2, (y[0]+y[1])/2, goodemg_out, , y[y.length-1],0]);
                          datatopemg.addRow([3, y[1], goodemg_out, ,y[y.length-1],y[y.length-1]]);
                          datatopemg.addRow([4, , goodemg_out, , , 0]);
                        }

                    
                    
                          var optionstopemg = {
                              //height: 200,
                              //width: 600,
                              isStacked: true,
                              backgroundColor: 'transparent',
                              bar: {groupWidth: '1'} ,
                              legend: {
                                    //position: 'bottom',
                                    alignment: 'start',
                                    textStyle: {
                                        fontSize: 14
                                    },
                                },
                              hAxis: {
                                  //ticks: [0, 20, 40],
                                  // ticks: [0,1,2,3,4] ,
                                  titleTextStyle: {
                                      italic: false
                                  },
                                  textStyle: {
                                  color: 'white' 
                                  },
                                  //title: 'Time (s)',
                                  format: '# ',
                                  viewWindow: {
                                  min: 0, 
                                  max: maxshow 
                                  },
                                  gridlines: {
                                      color: 'transparent'
                                  },
                                  baselineColor: 'white'
                    
                              },
                              chartArea: {
                                  left: 40,
                                  top: 10,
                                  height: 70,
                                  width: 237,
                                  backgroundColor: 'transparent'
                                  
                              },
                    
                              vAxis: {
                                  ticks: [  {v: emg_lat, f: emg_lat+'uV'}],
                                  textStyle: {
                                  color: '#00B286',
                                  fontSize: 9,
                                  bold: true
                                  },
                               
                                  format: '# ',
                                  viewWindow: {
                                  min: 0, 
                                  },
                                  gridlines: {
                                      color: 'transparent'
                                  },
                                  baselineColor: 'white'
                              },
                              enableInteractivity: false,
                    
                    
                              series: {
                                  0: {
                                    visibleInLegend: false,
                                      type: 'line',
                                      curveType: 'function',
                                      lineWidth: 2,
                                      color: '#00B286'
                    
                                  },
                                  1: {
                                      lineDashStyle: [6, 4],
                                      type: 'line',
                                      lineWidth: 0.4,
                                      color: '#1E1E1E', 
                                      visibleInLegend: false,                   
                                  },
                                  2: {
                                    visibleInLegend: false,
                                       lineDashStyle: [6, 4],
                                      type: 'line',
                                      lineWidth: 0.4,
                                      color: '#E6E6E6',                    
                                  },
                                  3: {
                                       lineDashStyle: [6, 4],
                                      type: 'line',
                                      lineWidth: 0.4,
                                      color: '#E6E6E6',
                                      visibleInLegend: false,                    
                                  },
                                  4: {
                                    visibleInLegend: false,
                                      type: 'bars',
                                      // lineWidth: 0.5,
                                      color: 'white',   
                                      // width: 2
                                  },
                    
                    
                              }
                          };
                      
                    
                    
                      var charttopemg = new google.visualization.LineChart(document.getElementById('topemg-graph<%=i%>'));
                       
                       charttopemg.draw(datatopemg, optionstopemg);
                      }
  
                    </script>
              </div>
                  <% } %>
               
               <% } %>
              <% if(lastsessions_array[i]==0) { %> 
                <div id="emg" style="position: relative; width: 290px; height: 90px; border: 1.4px solid #E3E3E3; border-radius: 10px; padding: 3px 6px 3px; box-sizing: border-box;">
                  <!-- //emg-table-->
                  <div class="week-grid" style="width: 290px; height: 76px; display: grid; box-sizing: border-box;grid-template-rows: 38px 38px; grid-template-columns: 69px 69px 69px 69px; gap: 0px;">

                      <div id="week-0" style=" grid-row-start: 1; grid-column-start: 1; grid-row-end: 2; grid-column-end: 2; display:flex; align-items: center; justify-content: center;">
                          <div style="width:17.2px; height: 11.7px; display:flex; align-items: center; justify-content: center;">
                              <img src="/icons/new-images/EMG.png" alt="" style="width:100%; height:100%;">
                          </div>
                      </div>
        
                      <div id="week-1" style=" grid-row-start: 1; grid-column-start: 2; grid-row-end: 2; grid-column-end: 3; font-family: 'Roboto'; font-style: normal; font-weight: 700; font-size: 13.3px; line-height: 24px; color: #012E57; display:flex; align-items: center; justify-content: center;">EMG</div>
        
                      <div id="week-2" style=" grid-row-start: 1; grid-column-start: 3; grid-row-end: 2; grid-column-end: 4; font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 13.3px; line-height: 14px; color: #012E57; display:flex;flex-direction: column; align-items: center; justify-content: center;"><p style=" font-weight: 400; font-size: 13.3px;"><%= healthysideDir(e.orientation)%></p><p style=" font-size: 11.3px;">side</p></div>
                      
                      <div id="week-3" style=" grid-row-start: 1; grid-column-start: 4; grid-row-end: 2; grid-column-end: 5; font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 13.3px; line-height: 14px; color: #012E57;display:flex;flex-direction: column; align-items: center; justify-content: center;"><p style="  font-weight: 400;font-size: 13.3px;">Muscle</p><p style=" font-size: 11.3px;">activity</p></div>
         
                
                      <div id="week-4" style=" grid-row-start: 2; grid-column-start: 1; grid-row-end: 3; grid-column-end: 2; font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 10.6px; line-height: 24px;color: #595959; border-radius: 5.3px 0px 0px 5.3px; display:flex; align-items: center; justify-content: center; background-color: #E6F3FF;">Baseline</div>

                    <div id="week-5" style=" grid-row-start: 2; grid-column-start: 2; grid-row-end: 3; grid-column-end: 3; display:flex; align-items: center; justify-content: center; background-color: #E6F3FF;">
                        <p style="font-family: 'Roboto'; font-style: normal; font-weight: 700; font-size: 13.3px; color: #00B286 !important; line-height: 24px; margin: 0;">
                          <%=e.maxemg%>&nbspuV
                        </p>
  
                    </div>
  
                    <div id="week-6" style=" grid-row-start: 2; grid-column-start: 3; grid-row-end: 3; grid-column-end: 4; font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 13.3px; line-height: 24px;  color: #012E57 !important; display:flex; align-items: center; justify-content: center; background-color: #E6F3FF;"><%=zeroEMGtable(e.orientation,e.bodypart,e.exercisename,e.musclename,e.maxemg,report[0].sessiondetails,details[0].phiziopatients[0].patientinjured).zerouv%></div>
  
                    <p id="week-7" style=" grid-row-start: 2; grid-column-start: 4; grid-row-end: 3; grid-column-end: 5; font-family: 'Roboto'; font-style: normal; font-weight: 600; font-size: 12px; line-height: 16px; text-align: center; color: #00B286 !important; border-radius: 0px 5.3px 5.3px 0px; display:flex; align-items: center; justify-content: center; background-color: #E6F3FF;"><%=zeroEMGtable(e.orientation,e.bodypart,e.exercisename,e.musclename,e.maxemg,report[0].sessiondetails,details[0].phiziopatients[0].patientinjured).zeropercent%></p>
                  </div>

                </div>
                  
                    <% } %>

              <!-- //rom-table-div-->
              <% if(e.exercisename!="Isometric") { %> 
              <% if(lastsessions_array[i]!=0) { %>  
                  <% if((get_session_recording(e.bodypart,e.exercisename,e.orientation,e.musclename,e.heldon)) > 1) { %>
                 <div id="rom" style="position: relative; width: 290px; height: 120px; border: 1.4px solid #E3E3E3; border-radius: 10px; padding: 3px 0 0; box-sizing: border-box;">

                   <div style="position: absolute; width:290px;margin-top: 0; z-index: 1; display:flex; align-items: center; justify-content:center">
                       <div style="width:11.4px; height: 11.4px; display:flex; align-items: center; justify-content: center;">
                           <img src="/icons/new-images/ROM.png" alt="" style=" height: 100%; width: 100%;">
                       </div>
                       <div style=" font-family: 'Roboto'; font-style: normal; font-weight: 700; font-size: 13.3px; height: 24px;  line-height: 24px;color: #012E57;  margin-left: 10px;">ROM</div>
                   </div>
                   <div style="position: absolute; z-index: 1; top:20px;height: 88px; width:1.5px;margin-left: 40px;background-color: #012E57;border-radius: 6px;"></div>
                   <div style="position: absolute; z-index: 1;  top: 92px;height: 1.5px; width:255px;margin-left: 22px;background-color: #012E57;border-radius: 6px;"></div>   
                   <div id="toprom-graph<%=i%>" style="width: 290px; height: 110px; margin-top: 10px;"></div>
                   <div style="display:none;position: absolute; z-index: 1;width: 40px; top:22px; margin-left:0px; text-align: right;font-family: 'Ebrima';font-style: normal;font-weight: 600;font-size: 10px;text-align: center;color: #00B286;;"><%=firstROMtable(e.orientation,e.bodypart,e.exercisename,e.musclename,report[0].sessiondetails,lastsessions,e.maxangle,e.minangle,e.maxangleselected).innercurrom%>&deg</div>
                   <div style="display:none;position: absolute; z-index: 1;top:38px; margin-left: 11px;font-family: 'Ebrima';font-style: normal;font-weight: 400;font-size: 9px;text-align: center;color: #012E57;"><%= e.maxangleselected%>&deg<br><span style="font-size: 5px; margin-left: 0px; font-weight: 200;"><%= healthysideDir(e.orientation)%>
</span></div>   
                   <div style="position: absolute; z-index: 1;top:96px; margin-left:70px;font-family: 'Ebrima'; font-style: normal; font-weight: 400; font-size: 11px;  color: #A6A6A6;">Baseline</div>
                   <div style="position: absolute; z-index: 1; top: 96px; margin-left: 225px;font-family: 'Ebrima';font-style: normal;font-weight: 400;font-size: 11px;text-align: center;color: #595959;">Week&nbsp<%=firstWeekFunction(e.orientation,e.bodypart,e.exercisename,e.musclename,e.heldon,report[0].sessiondetails,lastsessions_array[i]).firstweek%></div>
    
                  <script>
    
                      google.charts.load('current', {
                          'packages': ['corechart']
                      });
                    
                        google.charts.setOnLoadCallback(drawChartrom);
                    
                      function drawChartrom() {

                        let rom_lat=Number("<%=e.maxangle%>")
                        
                        let last_ROM_Arr=document.getElementById("elementId2<%=i%>");
                        let numberArrayROM=last_ROM_Arr.value;
    
                        let last_arry_ROM=[];
    
                        var myromArray=numberArrayROM.split(",");
                        for( let i=0; i<myromArray.length; i++)
                        {
                          last_arry_ROM.push(Number(myromArray[i]));
                        }
                        let first_rom_val=last_arry_ROM[0];
    

                          var datatoprom = new google.visualization.DataTable();
                          datatoprom.addColumn('number', 'x');
                          datatoprom.addColumn('number', 'y');
                          datatoprom.addColumn('number', 'color band 0');
                          datatoprom.addColumn('number', 'color band 1');
                          datatoprom.addColumn('number', 'color band 2');
                          datatoprom.addColumn('number', 'color band 3');                    

                          var y = last_arry_ROM;
                          var  target_ROM='<%= e.maxangleselected%>'
                          target_ROM=Number(target_ROM);
                          
                          if(y.length > 2){
                          datatoprom.addRow([0, , target_ROM,y[0] , y[y.length-1],0]);
                          datatoprom.addRow([1, y[0], target_ROM,y[0] , y[y.length-1],0]);
                          for (var i = 2; i <y.length; i++) {
                            datatoprom.addRow([i, y[i-1], target_ROM, , y[y.length-1],0]);
                          }
                          datatoprom.addRow([y.length, y[y.length-1], target_ROM, ,y[y.length-1],y[y.length-1]]);
                          datatoprom.addRow([y.length+1, , target_ROM, , , 0]);
                          maxshow= y.length+1;
                        }

                        
                        if(y.length < 3){
                          maxshow=4;
                          datatoprom.addRow([0, , target_ROM,y[0] , y[y.length-1],0]);
                          datatoprom.addRow([1, y[0], target_ROM,y[0] , y[y.length-1],0]);
                          datatoprom.addRow([2, (y[0]+y[1])/2, target_ROM, , y[y.length-1],0]);
                          datatoprom.addRow([3, y[1], target_ROM, ,y[y.length-1],y[y.length-1]]);
                          datatoprom.addRow([4, , target_ROM, , , 0]);
                        }
                    
                    
                          var optionstoprom = {
                              //height: 200,
                              //width: 600,
                              isStacked: true,
                              backgroundColor: 'transparent',
                              bar: {groupWidth: '1'} ,
                              legend: {
                                    //position: 'bottom',
                                    alignment: 'start',
                                    textStyle: {
                                        fontSize: 14
                                    },
                                },
                              hAxis: {
                                  //ticks: [0, 20, 40],
                                  // ticks: [0,1,2,3,4] ,
                                  titleTextStyle: {
                                      italic: false
                                  },
                                  textStyle: {
                                  color: 'white' 
                                  },
                                  //title: 'Time (s)',
                                  format: '# ',
                                  viewWindow: {
                                  min: 0, 
                                  max:maxshow 
                                  },
                                  gridlines: {
                                      color: 'transparent'
                                  },
                                  baselineColor: '#012E57'
                    
                              },
                              chartArea: {
                                  left: 40,
                                    top: 10,
                                    height: 70,
                                    width: 237,
                                  backgroundColor: {
                                      // stroke: '#B9B9B9',
                                      // strokeWidth: 1,
                                  }
                                  
                              },
                    
                              vAxis: {
                                   ticks: [  {v: rom_lat, f: rom_lat+'째'}],
                                  textStyle: {
                                  color: '#00B286',
                                  fontSize: 9,
                                  bold: true
                                  },
                                  format: '# ',
                                  viewWindow: {
                                  min: 0, 
                                  },
                                  gridlines: {
                                      color: 'transparent'
                                  },
                                  baselineColor: '#012E57'
                              },
                              enableInteractivity: false,
                    
                    
                              series: {
                                0: {
                                    visibleInLegend: false,
                                      type: 'line',
                                      curveType: 'function',
                                      lineWidth: 2,
                                      color: '#00B286'
                    
                                  },
                                  1: {
                                      lineDashStyle: [6, 4],
                                      type: 'line',
                                      lineWidth: 0.4,
                                      color: '#1E1E1E', 
                                      visibleInLegend: false,                   
                                  },
                                  2: {
                                    visibleInLegend: false,
                                       lineDashStyle: [6, 4],
                                      type: 'line',
                                      lineWidth: 0.4,
                                      color: '#E6E6E6',                    
                                  },
                                  3: {
                                       lineDashStyle: [6, 4],
                                      type: 'line',
                                      lineWidth: 0.4,
                                      color: '#E6E6E6',
                                      visibleInLegend: false,                    
                                  },
                                  4: {
                                    visibleInLegend: false,
                                      type: 'bars',
                                      // lineWidth: 0.5,
                                      color: 'white',   
                                      // width: 2
                                  },
                    
                    
                              }
                          };
                      
                    
                    
                      var charttoprom = new google.visualization.LineChart(document.getElementById('toprom-graph<%=i%>'));
                       
                       charttoprom.draw(datatoprom, optionstoprom);
                      }
                    
                    </script>
                </div>
                  <% } %>

              <% } %>


              <% if(lastsessions_array[i]==0) { %> 
                <div id="rom" style="position: relative; width: 290px; height: 90px; border: 1.4px solid #E3E3E3; border-radius: 10px; padding: 3px 6px 3px; box-sizing: border-box;">
                  <!-- //rom-table-->
                  <div class="week-grid" style="width: 290px; height: 76px; display: grid; grid-template-rows: 38px 38px; grid-template-columns: 69px 69px 69px 69px; gap: 0px;">

                      <div id="week-0" style=" grid-row-start: 1; grid-column-start: 1; grid-row-end: 2; grid-column-end: 2; display:flex; align-items: center; justify-content: center;">
                          <div style="width:11.4px; height: 11.4px; display:flex; align-items: center; justify-content: center;">
                              <img src="/icons/new-images/ROM.png" alt="" style="width:100%; height:100%;">
                          </div>
                      </div>

                      <div id="week-1" style=" grid-row-start: 1; grid-column-start: 2; grid-row-end: 2; grid-column-end: 3; font-family: 'Roboto'; font-style: normal; font-weight: 700; font-size: 13.3px; line-height: 24px; color: #012E57; display:flex; align-items: center; justify-content: center;">ROM</div>

                      <div id="week-2" style=" grid-row-start: 1; grid-column-start: 3; grid-row-end: 2; grid-column-end: 4; font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 13.3px; line-height: 14px; color: #012E57; display:flex;flex-direction: column; align-items: center; justify-content: center;"><p style=" font-weight: 400; font-size: 13.3px;"><%= healthysideDir(e.orientation)%></p><p style=" font-size: 11.3px;">side</p></div>

                      <div id="week-3" style=" grid-row-start: 1; grid-column-start: 4; grid-row-end: 2; grid-column-end: 5; font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 13.3px; line-height: 24px; color: #012E57; display:flex; align-items: center; justify-content: center;">%</div>

                      <div id="week-4" style=" grid-row-start: 2; grid-column-start: 1; grid-row-end: 3; grid-column-end: 2; font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 10.6px; line-height: 24px;color: #595959; border-radius: 5.3px 0px 0px 5.3px; display:flex; align-items: center; justify-content: center; background-color: #E6F3FF;">Baseline</div>

                      <div id="week-5" style=" grid-row-start: 2; grid-column-start: 2; grid-row-end: 3; grid-column-end: 3; display:flex; align-items: center; justify-content: center; background-color: #E6F3FF;">
                          <p style="font-family: 'Roboto'; font-style: normal; font-weight: 700; font-size: 13.3px; line-height: 24px; color: #00B286 !important; margin: 0;">
                            <%=firstROMtable(e.orientation,e.bodypart,e.exercisename,e.musclename,report[0].sessiondetails,lastsessions,e.maxangle,e.minangle,e.maxangleselected).innercurrom%>&deg
                          </p>
                      </div>

                      <div id="week-6" style=" grid-row-start: 2; grid-column-start: 3; grid-row-end: 3; grid-column-end: 4; font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 13.3px; line-height: 24px;  color: #012E57 !important; display:flex; align-items: center; justify-content: center; background-color: #E6F3FF;"><%=zeroROMtable(e.orientation,e.bodypart,e.exercisename,e.musclename,e.maxrom,report[0].sessiondetails,details[0].phiziopatients[0].patientinjured).zerouv%>&deg</div>

                      <div id="week-7" style=" grid-row-start: 2; grid-column-start: 4; grid-row-end: 3; grid-column-end: 5; font-family: 'Roboto'; font-style: normal; font-weight: 700; font-size: 13.3px; line-height: 24px;  color: #00B286 !important; border-radius: 0px 5.3px 5.3px 0px; display:flex; align-items: center; justify-content: center; background-color: #E6F3FF;">
                        <%=firstROMtable(e.orientation,e.bodypart,e.exercisename,e.musclename,report[0].sessiondetails,lastsessions,e.maxangle,e.minangle,e.maxangleselected).innergoodrom%>
                      </div>
                  </div>
              </div>
                <% } %>
                <% } %>
          </div>

        </section>
        <!-- end//section-1 goodside-details -->

      <!-- start//section-2 graph -->
      <section id="sec-graph" style="position: relative; width: 496px;height: 370px;left: 30px; top: 55px;">
          <!--EMG Graph-->
          <div class="graph-container" id="emg-graph-container"
                style="position: relative; width: 496px; height: 175px; ">
                <p
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 600; font-size: 16px; line-height: 15px; color: #012E57; margin: 0; margin-left: 28px;">
                    EMG&nbsp(uV)</p>
                   

                <div style="height:  150px; width: 476px; display: flex;">
                    <!-- //emg-graph -->
                    <div  style="position: absolute; z-index:2; opacity: 1;top:28px; left:30px;height: 103px; width: 300px; border: 1.4px solid rgba(112, 112, 112, 0.49) !important; border-radius: 7px;"></div>
                    <div  style="position: absolute; z-index:1; opacity: 1;top:26px; left:28px;height: 107px; width: 304px; border: 3.5px solid rgb(255, 255, 255) !important; border-radius: 9px;"></div>
                    <div id="chartemg<%=i%>"
                        style="height: inherit;z-index:0 ;width: 370px;box-sizing: border-box;margin-top: 5px;"></div>
                    <!-- //emg-graph-details -->
                    <div id="emg-graph-detail"
                        style="height: inherit; width: 126px; display: flex; flex-direction: column; justify-content: center; align-items:flex-end;">
                        <p
                            style="font-family: 'Roboto'; font-style: normal; font-weight: 600; font-size: 10px;  line-height: 22px; text-align: right; color: #B3B3B3;">
                            Peak: <%=e.maxemg%>uV</p>
                        <p
                            style="font-family: 'Roboto'; font-style: normal; font-weight: 600; font-size: 10px;  line-height: 22px; text-align: right; color: #B3B3B3;">
                            Avg Peak: <%=get_avgMaxEmg(e.heldon)%>uV</p>
                    </div>
                </div>

            </div>
                  <!-- //graph-data -->
      <div>
        <p style="position:relative; font-family: 'Roboto'; font-style: italic; font-weight: 400; font-size: 10.6px; line-height: 10px; margin-top:0px; margin-left: 28px;color: #B3B3B3;">
            *displayed graph is recorded for first 30 secs only</p>
    </div>
          

    <!--ROM Graph-->
     <% if(e.exercisename!="Isometric") { %> 
     <div class="graph-container" id="rom-graph-container"
 style="top :30px; position: relative;  width: 496px;  height: 154px;">
 <p
     style="font-family: 'Roboto';position: relative; font-style: normal; font-weight: 600; font-size: 16px; line-height: 20px; color: #012E57; margin-left: 28px;">
     ROM (&deg)</p>
 <div style="position: relative; height: 130px; width: 476px; display: flex; justify-content: space-between;top:4px;box-sizing: border-box;">
     <!-- //rom-graph -->
     <div class="chart-container" style="position: relative; box-sizing: border-box;  width: 130px; height: 130px; margin-left: 24px; ">
      <div id="exercise-img"
    style="box-sizing: border-box; position: absolute; width: 76px; height: 76px; left: 26px; top: 28px; background: #FFFFFF;">
      <img src="/icons/SVG/<%=e.bodypart.toLowerCase()%><%=e.exercisename.toLowerCase()%><%=e.orientation.substr(0,5).toLowerCase()%>.svg" style="position: relative; width: 100%; height: 100%;border-radius: 4.20779px">

</div>
        <div id="rom-pie<%=i%>" style=" width: 130px; height:130px;position:absolute;  top:0px; z-index:1;clip-path: polygon(0 0, 100% 0, 100% 50%, 0 50%); "></div>
        <div id="toprom-graph2<%=i%>" style=" position:absolute; top:0px ; width: 130px; height:130px; "></div>

  </div> 
  <script>
    
    google.charts.load('current', {
        'packages': ['corechart']
    });
  
      google.charts.setOnLoadCallback(drawChartrom1);
  
    function drawChartrom1() {

let maxangle=Number('<%=e.maxangle%>');
let minangle=Number('<%=e.minangle%>');
let pos_angle=0;
let neg_angle=0;
let rem_first_pos=0;
let rem_first_neg=0;
let pos_color="#E6A000";
let neg_color='#9f9f9f';


if(( maxangle>0 && minangle>=0 ) ){  
pos_angle=Math.abs(Math.abs(maxangle)-Math.abs(minangle));
neg_angle=0;
rem_first_pos=minangle;
}
if(( maxangle>0 && minangle<0 ) ){  
pos_angle=Math.abs(maxangle);
neg_angle=Math.abs(minangle);
}
if(( maxangle<=0 && minangle>=0 ) ){  
pos_angle=Math.abs(maxangle);
neg_angle=Math.abs(minangle);
pos_color="#9f9f9f";
neg_color='#E6A000';
}
if(( maxangle<=0 && minangle<0 )){  
pos_angle=0;
neg_angle=Math.abs(Math.abs(maxangle)-Math.abs(minangle));
rem_first_neg=Math.abs(minangle);
}

if("<%=e.exercisename%>"=="Extension"){
  pos_color="#9f9f9f";
neg_color='#E6A000';
}
console.log(pos_angle,neg_angle,"hello1")

if(pos_angle>180){ 
  pos_angle=180;
  rem_first_pos=0;
  rempos=0;
}
if(neg_angle>180){ 
  neg_angle=180;
  rem_first_neg=0;
  remneg=0;
}
let rempos=180-(pos_angle+rem_first_pos);
let remneg=180-(neg_angle+rem_first_neg);     
        // Define the data for the chart
        var datatoprom1 = google.visualization.arrayToDataTable([
          ['Posrom', 'Angle'],
          ['Rempos', rempos],
          ['Posangle', pos_angle],
          ['Remfirstpos', rem_first_pos],
          ["Transparent", 180]
        ]);

        // Set options for the chart
        var optionstoprom1 = {
          legend: 'none',
            width: "130",
            height:"130",
            tooltip: {
                isHtml: true
            },
            chartArea: {
              left: "3%",
                top: "4%",
                height: "94%",
                width: "94%",
                backgroundColor: 'transparent'
            },
            colors: ['#D9D9D9', pos_color, '#D9D9D9','transparent'],
            pieHole: 0.87,
            pieStartAngle: -90,
            is3D: false,
            pieSliceText: 'none',
            pieSliceBorderColor: 'none',
            enableInteractivity: false,
            backgroundColor: 'transparent'
        };

    var charttoprom1 = new google.visualization.PieChart(document.getElementById('rom-pie<%=i%>'));  
     charttoprom1.draw(datatoprom1, optionstoprom1);



     var datatoprom2 = google.visualization.arrayToDataTable([
          ['Negrom', 'Angle',],
          ['Transparent', 180],
          ['Remfirstneg', rem_first_neg],
          ['Negangle', neg_angle],
          ["Remneg", remneg,]
        ]);

        // Set options for the chart
        var optionstoprom2 = {
          legend: 'none',
            width: "130",
            height:"130",
            tooltip: {
                isHtml: true
            },
            chartArea: {
              left: "3%",
                top: "3%",
                height: "94%",
                width: "94%",
                backgroundColor: 'transparent'
            },
            colors: ['transparent', '#D9D9D9',neg_color, '#D9D9D9' ],
            pieHole: 0.87,
            pieStartAngle: -90,
            is3D: false,
            pieSliceText: 'none',
            pieSliceBorderColor: 'none',
            enableInteractivity: false,
            backgroundColor: 'transparent'
        };

    var charttoprom2 = new google.visualization.PieChart(document.getElementById('toprom-graph2<%=i%>'));
     charttoprom2.draw(datatoprom2, optionstoprom2);

    }
  
  </script>
<img src="/icons/new-images/romline.png" style="position: absolute;left: 134px; top:22px;width: 70px; height: 10px;">
<img src="/icons/new-images/romliner.png" style="position: absolute;left: 142px; top:89px;width: 64px; height: 10px;">  
  <div id="rom-angle-detail"
  style=" height: 120px;  width: 100px;  padding: 13px 10px 13px;display: flex; flex-direction: column; justify-content: space-around;position:relative;box-sizing: border-box;">
  <p
  style="position:relative; font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 10px; line-height: 22px; color: #012E57; ">
  End Angle: <span style="font-weight: 600; font-size: 13px;"><%=e.maxangle%>&deg</span></span></p>
  <p
  style="position:relative; font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 10px; line-height: 22px; color: #012E57; ">
  Start Angle: <span style="font-weight: 600; font-size: 13px;"><%=e.minangle%>째</span></p>
</div>
     <!-- //rom-graph-details -->
     <div id="rom-graph-detail"
         style=" height: 120px;  width: 140px;display: flex; flex-direction: column; justify-content: center; align-items:flex-end;position:relative;box-sizing: border-box;">
         <p
             style="position:relative; font-family: 'Roboto'; font-style: normal; font-weight: 600; font-size: 10px;  line-height: 22px; color: #B3B3B3; ">
             Range Gained: <%=firstROMtable(e.orientation,e.bodypart,e.exercisename,e.musclename,report[0].sessiondetails,lastsessions,e.maxangle,e.minangle,e.maxangleselected).innercurrom%>&deg</p>
             <p
             style="position:relative; font-family: 'Roboto'; font-style: normal; font-weight: 600; font-size: 10px;  line-height: 22px; color: #B3B3B3; ">
             Target ROM: <%=e.maxangleselected%>째</p>

          <% if(details[0].phiziopatients[0].patientinjured != e.orientation && details[0].phiziopatients[0].patientinjured !="Bi-Lateral") { %> 
           <p
           style="font-family: 'Roboto'; font-style: normal; font-weight: 600; font-size: 10px;  line-height: 22px;  color: #B3B3B3;">
            Repetitions: <%=e.numofreps%></p>
          <p
              style="font-family: 'Roboto'; font-style: normal; font-weight: 600; font-size: 10px; line-height:22px; color: #B3B3B3;">
              Repetition Speed: <%=get_Speed(e.heldon,e.activetime,e.numofreps)%></p>
         <% } %>
     </div>
 </div>
    </div>
    <% } %>

</section>
<!-- end//section-2 graph -->
      
       
 <section <% if(details[0].phiziopatients[0].patientinjured != e.orientation && details[0].phiziopatients[0].patientinjured !="Bi-Lateral") { %>style="display:none;"<% } %> >
<!-- start//section-3 result -->
<% if(e.exercisename!="Isometric") { %> 
<section id="sec-result"
style=" position: relative;  width: 496px;top: 70px; height: 303px; left: 30px; display: flex; flex-direction: column; justify-content: space-between;">
<!-- //Repetitions-table -->
<div id="rep-grid" style="margin-top: 10px; width:476px; height: 66px; box-sizing: border-box;">
    <div class="rep-grid"
        style="display: grid; grid-template-rows: 1fr 1fr; grid-template-columns: 1fr 1fr 1fr 1fr; width: inherit; gap: 0px; height: inherit;">

        <div id="item-0"
            style="display: flex; align-items: center; justify-content:center; background-color:#E6F3FF; border-radius: 7.5px 0 0 0; grid-row-start: 1; grid-column-start: 1; grid-row-end: 2; grid-column-end: 2;">
            <p
                style="font-family: 'Roboto'; font-style: normal; font-weight: 550; font-size: 12.6px; line-height: 0px; color:#012E57; ">
                Repetitions</p>
        </div>

        <div id="item-1"
            style="display: flex; align-items: center; justify-content:center; border: 1.3px solid #E3E3E3; border-bottom: none; grid-row-start: 1; grid-column-start: 2; grid-row-end: 2; grid-column-end: 3;">
            <p
                style="font-family: 'Roboto'; font-style: normal; font-weight: 550; font-size: 12.6px; line-height: 0px; color:#012E57; ">
                Repetition Speed</p>
        </div>

        <div id="item-2"
            style="display: flex; align-items: center; justify-content:center; border-top: 1.3px solid #E3E3E3; grid-row-start: 1; grid-column-start: 3; grid-row-end: 2; grid-column-end: 4;">
            <p
                style="font-family: 'Roboto'; font-style: normal; font-weight: 550; font-size: 12.6px; line-height: 0px; color:#012E57; ">
                Hold Time</p>
        </div>

        <div id="item-3"
            style="display: flex; align-items: center; justify-content:center;border: 1.3px solid #E3E3E3; border-bottom: none; grid-row-start: 1; grid-column-start: 4; grid-row-end: 2; grid-column-end: 5; border-radius: 0 7.5px 0 0;">
            <p
                style="font-family: 'Roboto'; font-style: normal; font-weight: 550; font-size: 12.6px; line-height: 0px; color:#012E57; ">
                Hold Angle</p>
        </div>

        <div id="item-4"
            style="display: flex; align-items: center; justify-content:center; background-color:#E6F3FF; border-radius: 0 0 0 7.5px; grid-row-start: 2; grid-column-start: 1; grid-row-end: 3; grid-column-end: 2; border-top: 2px solid #ffffff;">
            <p
                style="font-family: 'Roboto'; font-style: normal; font-weight: 550; font-size: 13.3px; line-height: 0px; color:#012E57; ">
                <%=e.numofreps%></p>
        </div>

        <div id="item-5"
            style="display: flex; align-items: center; justify-content:center; border: 1.3px solid #E3E3E3; grid-row-start: 2; grid-column-start: 2; grid-row-end: 3; grid-column-end: 3;">
            <p
                style="    font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 13.3px; line-height: 0px; color:#012E57; ">
                <%=get_Speed(e.heldon,e.activetime,e.numofreps)%></p>
        </div>

        <div id="item-6"
            style="display: flex; align-items: center; justify-content:center;     border-top: 1.3px solid #E3E3E3; border-bottom: 1.3px solid #E3E3E3; grid-row-start: 2; grid-column-start: 3; grid-row-end: 3; grid-column-end: 4;">
            <p
                style="font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 13.3px; line-height: 0px; color:#012E57; ">
                <%=get_hold_time(e.holdtime)%></p>
        </div>

        <div id="item-7"
            style="display: flex; align-items: center; justify-content:center; border: 1.3px solid #E3E3E3; grid-row-start: 2; grid-column-start: 4; grid-row-end: 3; grid-column-end: 5; border-radius: 0 0 7.5px 0;">
            <p
                style=" font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 13.3px; line-height: 0px; color:#012E57; ">
                <%=get_holdangle(e.holdangle) %></p>
        </div>

    </div>
</div>

<!-- //MMT&Star-table-container -->
<div
    style="position:relative; height: 190px; width: 476px; display: flex; justify-content: space-between;">

    <!-- //MMT-table -->
    <div id="mmt-grid"
        style="height: inherit; width: 206px; border: 1.3px solid #E3E3E3; border-radius: 7px; box-sizing: border-box; display: grid; grid-template-rows: 64px 42px 42px 42px; grid-template-columns: 1fr 1fr; gap: 0px;">

        <div id="mmt-0"
            style="display: flex; align-items: center; padding-left:16px; border-top-left-radius: 5.4px;  background-color: #E6F3FF;  grid-row-start: 1;  grid-column-start: 1;  grid-row-end: 2;  grid-column-end: 2;">
            <p
                style=" font-family: 'Roboto'; font-style: normal; font-weight: 600; font-size: 13.3px; line-height: 0px; color:#012E57;">
                MMT</p>
        </div>

        <div id="mmt-1"
            style="display: flex; align-items: center; padding-left:16px; grid-row-start: 2; grid-column-start: 1; grid-row-end: 3; grid-column-end: 2; border-bottom: 1.3px solid #E3E3E3;">
            <p
                style=" font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 13.3px; line-height: 0px; color: #2C2B2B;">
                Pain scale</p>
        </div>

        <div id="mmt-2"
            style="display: flex; align-items: center; padding-left:16px; grid-row-start: 3;
        grid-column-start: 1;  grid-row-end: 4;  grid-column-end: 2;  border-bottom: 1.3px solid #E3E3E3;">
            <p
                style=" font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 13.3px; line-height: 0px; color: #2C2B2B;">
                Session type</p>
        </div>

        <div id="mmt-3" style="display: flex; align-items: center; padding-left:16px; grid-row-start: 4;
        grid-column-start: 1; grid-row-end: 5; grid-column-end: 2;">
            <p
                style=" font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 13.3px; line-height: 0px; color: #2C2B2B;">
                Patient status</p>
        </div>

        <div id="mmt-4"
            style="display: flex; flex-direction: column; align-items: center; justify-content: center;border-top-right-radius: 5.4px; background-color: #E6F3FF; grid-row-start: 1; grid-column-start: 2; grid-row-end: 2; grid-column-end: 3;">
            <p
                style="font-family:'Roboto';  font-style: normal;  font-weight: 700;  font-size: 13.3px; text-align: center; line-height: 12px;  margin-bottom: 2px;  color: #012E57;">
                <%=e.mmtgrade%></p>
            <p
                id="mmt_level<%=i%>" style="width:76px; font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 8px; line-height: 8px; margin-top: 0; text-align: center; color: #2C2B2B;">
                <%= mmtFunction(e.mmtgrade)%>
              </p>
        </div>

        <div id="mmt-5"
            style="display: flex; 
            flex-direction: column ;align-items: flex-end; padding-right:16px; justify-content: center;  grid-row-start: 2; grid-column-start: 2; grid-row-end: 3; grid-column-end: 3; border-bottom: 1.3px solid #E3E3E3;">
            <p
                style="font-family: 'Roboto'; font-style: normal; font-weight: 700; font-size: 13.3px; line-height: 24px; margin-bottom: 0px; color: #2C2B2B;">
                <%=e.painscale%><span style="font-weight: 500; font-size: 13.3px;">/10</span></p>
            <p
                id="pain_level<%=i%>" style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 8px;  line-height: 4px;   ">
                </p>
        </div>

        <div id="mmt-6"
            style="display: flex; flex-direction: column ; align-items: flex-end; padding-right:16px; justify-content: center; grid-row-start: 3; grid-column-start: 2; grid-row-end: 4; grid-column-end: 3; border-bottom: 1.3px solid #E3E3E3;">
            <p
                 style="font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 13.3px; line-height: 12px; color: #2C2B2B;">
                <%= e.sessiontype%></p>
        </div>

        <div id="mmt-7"
            style="display: flex; flex-direction: column ; align-items: flex-end; padding-right:16px; justify-content: center; grid-row-start: 4; grid-column-start: 2; grid-row-end: 5; grid-column-end: 3;">
            <p
                style="font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 13.3px; line-height: 12px; color: #2C2B2B; ">
                Lethargic</p>
        </div>

    </div>

            <!-- Python Variables table -->
            <div id="star-grid"
            style="height: inherit; width: 256px; border: 1.3px solid #E3E3E3;border-radius: 7px; padding: 0 8px 0; box-sizing: border-box; display: grid; grid-template-rows: 1fr 1fr 1fr 1fr; grid-template-columns: 1fr 1fr; gap: 0px;">

            <div id="star-0"
                style="display: flex; align-items: center; grid-row-start: 1; grid-column-start: 1; grid-row-end: 2; grid-column-end: 2;">
                <p
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 8px; line-height: 13px; color: #878787;">
                    <span
                        style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px; color: #002647;">Consitency</span><br>of
                    peak muscle contractions</p>
            </div>

            <div id="star-1"
                style="display: flex; align-items: center; grid-row-start: 2; grid-column-start: 1; grid-row-end: 3; grid-column-end: 2;">
                <p
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 8px; line-height: 13px; color: #878787;">
                    <span
                        style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px;  color: #002647;">Control</span><br>of
                    muscle activation timing</p>
            </div>

            <div id="star-2"
                style="display: flex; align-items: center; grid-row-start: 3; grid-column-start: 1; grid-row-end: 4; grid-column-end: 2;">
                <p
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 8px; line-height: 13px; color: #878787;">
                    <span
                        style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px;  color: #002647;">Smoothness</span><br>of
                    movement with no tremors</p>
            </div>

            <div id="star-3"
                style="display: flex; align-items: center; grid-row-start: 4; grid-column-start: 1; grid-row-end: 5; grid-column-end: 2;">
                <p
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 8px;line-height: 13px;color: #878787;">
                    <span
                        style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px; color: #002647;">Coordination</span><br>of
                    movement and muscle</p>
            </div>

            <!-- //stars -->
            <div id="star-4"
                style="display: flex; flex-direction: column; align-items: flex-end;
                justify-content: center; grid-row-start: 1; grid-column-start: 2; grid-row-end: 2; grid-column-end: 3;">
                <div id="consistency_rating<%=i%>" style="font-size:13px; letter-spacing: 2px;  transform: scaleX(-1);"></div>
                <div id="consistency_level<%=i%>"
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px;">
                </div>
            </div>

            <div id="star-5"
                style="display: flex; flex-direction: column; align-items: flex-end;
                justify-content: center; grid-row-start: 2; grid-column-start: 2; grid-row-end: 3; grid-column-end: 3;">
                <div id="controlled_rating<%=i%>" style="font-size:13px; letter-spacing: 2px;  transform: scaleX(-1);"></div>
                <div id="controlled_level<%=i%>"
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px; text-align: right;">
                </div>
            </div>

            <div id="star-6"
                style="display: flex; flex-direction: column; align-items: flex-end;
                justify-content: center; grid-row-start: 3; grid-column-start: 2; grid-row-end: 4; grid-column-end: 3;">
                <div  id="smoothness_rating<%=i%>"  style="font-size:13px; letter-spacing: 2px;  transform: scaleX(-1);"></div>
                <div id="smoothness_level<%=i%>"
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px;  text-align: right;">
                </div>
            </div>

            <div id="star-7"
                style="display: flex; flex-direction: column; align-items: flex-end;
                justify-content: center; grid-row-start: 4; grid-column-start: 2; grid-row-end: 5; grid-column-end: 3;">
                <div id="coordination_rating<%=i%>"style="font-size:13px; letter-spacing: 2px;  transform: scaleX(-1);"></div>
                <div id="coordination_level<%=i%>"
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px; text-align: right;">
                </div>
            </div>

        </div>
</div>
</section>
<% } %>
<% if(e.exercisename=="Isometric") { %> 
  <section id="sec-result"
  style=" position: absolute; top: 510px;  width: 496px; height: 303px; left: 30px; display: flex; flex-direction: column; justify-content: space-between;">
  
  <!-- //Repetitions-table -->
  <div id="rep-grid" style="margin-top: 10px; width:476px; height: 66px; box-sizing: border-box;">
      <div class="rep-grid"
          style="display: grid;width:476px; height: inherit; grid-template-rows: 1fr 1fr; grid-template-columns: 1fr 1fr 1fr;  gap: 0px;">
  
          <div id="item-0"
              style="display: flex; align-items: center; justify-content:center; background-color:#E6F3FF; border-radius: 7.5px 0 0 0; grid-row-start: 1; grid-column-start: 1; grid-row-end: 2; grid-column-end: 2;">
              <p 
                  style="font-family: 'Roboto'; font-style: normal; font-weight: 550; font-size: 12.6px; line-height: 0px; color:#012E57; ">
                  Contractions</p>
          </div>
  
          <div id="item-1"
              style="display: flex; align-items: center; justify-content:center; border: 1.3px solid #E3E3E3; border-bottom: none; grid-row-start: 1; grid-column-start: 2; grid-row-end: 2; grid-column-end: 3;">
              <p
                  style="font-family: 'Roboto'; font-style: normal; font-weight: 550; font-size: 12.6px; line-height: 0px; color:#012E57; ">
                  Contraction Speed</p>
          </div>
  
          <div id="item-2"
              style="display: flex; align-items: center; justify-content:center; border-top: 1.3px solid #E3E3E3;border-right: 1.3px solid #E3E3E3;border-radius: 0 7.5px 0 0 ; grid-row-start: 1; grid-column-start: 3; grid-row-end: 2; grid-column-end: 4;">
              <p
                  style="font-family: 'Roboto'; font-style: normal; font-weight: 550; font-size: 12.6px; line-height: 0px; color:#012E57; ">
                  Hold Time</p>
          </div>
  
  
          <div id="item-3"
              style="display: flex; align-items: center; justify-content:center; background-color:#E6F3FF; border-radius: 0 0 0 7.5px; grid-row-start: 2; grid-column-start: 1; grid-row-end: 3; grid-column-end: 2; border-top: 2px solid #ffffff;">
              <p id="contractions_no<%=i%>"
                  style="font-family: 'Roboto'; font-style: normal; font-weight: 550; font-size: 13.3px; line-height: 0px; color:#012E57; ">
                  </p>
          </div>
  
          <div id="item-4"
              style="display: flex; align-items: center; justify-content:center; border: 1.3px solid #E3E3E3; grid-row-start: 2; grid-column-start: 2; grid-row-end: 3; grid-column-end: 3;">
              <p id="contractions_rep<%=i%>"
                  style=" font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 13.3px; line-height: 0px; color:#012E57; ">
                 </p>
          </div>
  
          <div id="item-5"
              style="display: flex; align-items: center; justify-content:center;   border-right: 1.3px solid #E3E3E3;   border-top: 1.3px solid #E3E3E3; border-bottom: 1.3px solid #E3E3E3;border-radius: 0 0 7.5px 0 ; grid-row-start: 2; grid-column-start: 3; grid-row-end: 3; grid-column-end: 4;">
              <p
                  style="font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 13.3px; line-height: 0px; color:#012E57;">
                  <%=get_hold_time(e.holdtime)%></p>
          </div>
  
      </div>
  </div>
  
<!-- //MMT&Star-table-container -->
<div
    style="position:relative; height: 190px; width: 476px; display: flex; justify-content: space-between;">

    <!-- //MMT-table -->
    <div id="mmt-grid"
        style="height: inherit; width: 206px; border: 1.3px solid #E3E3E3; border-radius: 7px; box-sizing: border-box; display: grid; grid-template-rows: 64px 42px 42px 42px; grid-template-columns: 1fr 1fr; gap: 0px;">

        <div id="mmt-0"
            style="display: flex; align-items: center; padding-left:16px; border-top-left-radius: 5.4px;  background-color: #E6F3FF;  grid-row-start: 1;  grid-column-start: 1;  grid-row-end: 2;  grid-column-end: 2;">
            <p
                style=" font-family: 'Roboto'; font-style: normal; font-weight: 600; font-size: 13.3px; line-height: 0px; color:#012E57;">
                MMT</p>
        </div>

        <div id="mmt-1"
            style="display: flex; align-items: center; padding-left:16px; grid-row-start: 2; grid-column-start: 1; grid-row-end: 3; grid-column-end: 2; border-bottom: 1.3px solid #E3E3E3;">
            <p
                style=" font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 13.3px; line-height: 0px; color: #2C2B2B;">
                Pain scale</p>
        </div>

        <div id="mmt-2"
            style="display: flex; align-items: center; padding-left:16px; grid-row-start: 3;
        grid-column-start: 1;  grid-row-end: 4;  grid-column-end: 2;  border-bottom: 1.3px solid #E3E3E3;">
            <p
                style=" font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 13.3px; line-height: 0px; color: #2C2B2B;">
                Session type</p>
        </div>

        <div id="mmt-3" style="display: flex; align-items: center; padding-left:16px; grid-row-start: 4;
        grid-column-start: 1; grid-row-end: 5; grid-column-end: 2;">
            <p
                style=" font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 13.3px; line-height: 0px; color: #2C2B2B;">
                Patient status</p>
        </div>

        <div id="mmt-4"
            style="display: flex; flex-direction: column; align-items: center; justify-content: center;border-top-right-radius: 5.4px; background-color: #E6F3FF; grid-row-start: 1; grid-column-start: 2; grid-row-end: 2; grid-column-end: 3;">
            <p
                style="font-family:'Roboto';  font-style: normal;  font-weight: 700;  font-size: 13.3px; text-align: center; line-height: 12px;  margin-bottom: 2px;  color: #012E57;">
                <%=e.mmtgrade%></p>
            <p
                id="mmt_level<%=i%>" style="width:76px; font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 8px; line-height: 8px; margin-top: 0; text-align: center; color: #2C2B2B;">
                <%= mmtFunction(e.mmtgrade)%>
              </p>
        </div>

        <div id="mmt-5"
            style="display: flex; 
            flex-direction: column ;align-items: flex-end; padding-right:16px; justify-content: center;  grid-row-start: 2; grid-column-start: 2; grid-row-end: 3; grid-column-end: 3; border-bottom: 1.3px solid #E3E3E3;">
            <p
                style="font-family: 'Roboto'; font-style: normal; font-weight: 700; font-size: 13.3px; line-height: 24px; margin-bottom: 0px; color: #2C2B2B;">
                <%=e.painscale%><span style="font-weight: 500; font-size: 13.3px;">/10</span></p>
            <p
                id="pain_level<%=i%>" style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 8px;  line-height: 4px;   ">
                </p>
        </div>

        <div id="mmt-6"
            style="display: flex; flex-direction: column ; align-items: flex-end; padding-right:16px; justify-content: center; grid-row-start: 3; grid-column-start: 2; grid-row-end: 4; grid-column-end: 3; border-bottom: 1.3px solid #E3E3E3;">
            <p
                 style="font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 13.3px; line-height: 12px; color: #2C2B2B;">
                <%= e.sessiontype%></p>
        </div>

        <div id="mmt-7"
            style="display: flex; flex-direction: column ; align-items: flex-end; padding-right:16px; justify-content: center; grid-row-start: 4; grid-column-start: 2; grid-row-end: 5; grid-column-end: 3;">
            <p
                style="font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 13.3px; line-height: 12px; color: #2C2B2B; ">
                Lethargic</p>
        </div>

    </div>

            <!-- Python Variables table -->
            <div id="star-grid"
            style="height: inherit; width: 256px; border: 1.3px solid #E3E3E3;border-radius: 7px; padding: 0 8px 0; box-sizing: border-box; display: grid; grid-template-rows: 1fr 1fr 1fr 1fr; grid-template-columns: 1fr 1fr; gap: 0px;">

            <div id="star-0"
                style="display: flex; align-items: center; grid-row-start: 1; grid-column-start: 1; grid-row-end: 2; grid-column-end: 2;">
                <p
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 8px; line-height: 13px; color: #878787;">
                    <span
                        style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px; color: #002647;">Consitency</span><br>of
                    peak muscle contractions</p>
            </div>

            <div id="star-1"
                style="display: flex; align-items: center; grid-row-start: 2; grid-column-start: 1; grid-row-end: 3; grid-column-end: 2;">
                <p
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 8px; line-height: 13px; color: #878787;">
                    <span
                        style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px;  color: #002647;">Control</span><br>of
                    muscle activation timing</p>
            </div>

            <div id="star-2"
                style="display: flex; align-items: center; grid-row-start: 3; grid-column-start: 1; grid-row-end: 4; grid-column-end: 2;">
                <p
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 8px; line-height: 13px; color: #878787;">
                    <span
                        style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px;  color: #002647;">Smoothness</span><br>of
                    movement with no tremors</p>
            </div>

            <div id="star-3"
                style="display: flex; align-items: center; grid-row-start: 4; grid-column-start: 1; grid-row-end: 5; grid-column-end: 2;">
                <p
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 8px;line-height: 13px;color: #878787;">
                    <span
                        style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px; color: #002647;">Coordination</span><br>of
                    movement and muscle</p>
            </div>

            <!-- //stars -->
            <div id="star-4"
                style="display: flex; flex-direction: column; align-items: flex-end;
                justify-content: center; grid-row-start: 1; grid-column-start: 2; grid-row-end: 2; grid-column-end: 3;">
                <div id="consistency_rating<%=i%>" style="font-size:13px; letter-spacing: 2px;  transform: scaleX(-1);"></div>
                <div id="consistency_level<%=i%>"
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px;">
                </div>
            </div>

            <div id="star-5"
                style="display: flex; flex-direction: column; align-items: flex-end;
                justify-content: center; grid-row-start: 2; grid-column-start: 2; grid-row-end: 3; grid-column-end: 3;">
                <div id="controlled_rating<%=i%>" style="font-size:13px; letter-spacing: 2px;  transform: scaleX(-1);"></div>
                <div id="controlled_level<%=i%>"
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px; text-align: right;">
                </div>
            </div>

            <div id="star-6"
                style="display: flex; flex-direction: column; align-items: flex-end;
                justify-content: center; grid-row-start: 3; grid-column-start: 2; grid-row-end: 4; grid-column-end: 3;">
                <div  id="smoothness_rating<%=i%>"  style="font-size:13px; letter-spacing: 2px;  transform: scaleX(-1);"></div>
                <div id="smoothness_level<%=i%>"
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px;  text-align: right;">
                </div>
            </div>

            <div id="star-7"
                style="display: flex; flex-direction: column; align-items: flex-end;
                justify-content: center; grid-row-start: 4; grid-column-start: 2; grid-row-end: 5; grid-column-end: 3;">
                <div id="coordination_rating<%=i%>"style="font-size:13px; letter-spacing: 2px;  transform: scaleX(-1);"></div>
                <div id="coordination_level<%=i%>"
                    style="font-family: 'Roboto'; font-style: normal; font-weight: 400; font-size: 11px; text-align: right;">
                </div>
            </div>

        </div>
</div>
  </section>
<% } %> 
<% if(e.exercisename=="Isometric") { %> 
  <section  style=" position: relative; margin-top: 243px;  width: 476px; height: 130px; left: 30px; display: flex; flex-direction: column; align-items: center;justify-content: space-between;">
    <div style="width: inherit; height: 13px; background-color: #EBEBEB !important;"></div>
    <div style="font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 60px; line-height: 56px;  color:#EBEBEB !important;">Isometric Data</div>
    <div style="width: inherit; height: 13px; background-color: #EBEBEB !important;"></div>
  </section>
  <% } %> 
</section>


<% if(details[0].phiziopatients[0].patientinjured != e.orientation && details[0].phiziopatients[0].patientinjured !="Bi-Lateral" && e.exercisename=="Isometric") { %>

  <section id="sec-result"
  style=" position: absolute; top: 510px; width: 496px; height: 70px; left: 30px; display: flex; flex-direction: column; justify-content: space-between;">
  
  <!-- //Repetitions-table -->
  <div id="rep-grid" style="margin-top: 10px; width:476px; height: 66px; box-sizing: border-box;">
      <div class="rep-grid"
          style="display: grid; grid-template-rows: 1fr 1fr; grid-template-columns: 1fr 1fr 1fr; width: inherit; gap: 0px; height: inherit;">
  
          <div id="item-0"
              style="display: flex; align-items: center; justify-content:center; background-color:#E6F3FF; border-radius: 7.5px 0 0 0; grid-row-start: 1; grid-column-start: 1; grid-row-end: 2; grid-column-end: 2;">
              <p 
                  style="font-family: 'Roboto'; font-style: normal; font-weight: 550; font-size: 12.6px; line-height: 0px; color:#012E57; ">
                  Contractions</p>
          </div>
  
          <div id="item-1"
              style="display: flex; align-items: center; justify-content:center; border: 1.3px solid #E3E3E3; border-bottom: none; grid-row-start: 1; grid-column-start: 2; grid-row-end: 2; grid-column-end: 3;">
              <p
                  style="font-family: 'Roboto'; font-style: normal; font-weight: 550; font-size: 12.6px; line-height: 0px; color:#012E57; ">
                  Contraction Speed</p>
          </div>
  
          <div id="item-2"
              style="display: flex; align-items: center; justify-content:center; border-top: 1.3px solid #E3E3E3;border-right: 1.3px solid #E3E3E3;border-radius: 0 7.5px 0 0 ; grid-row-start: 1; grid-column-start: 3; grid-row-end: 2; grid-column-end: 4;">
              <p
                  style="font-family: 'Roboto'; font-style: normal; font-weight: 550; font-size: 12.6px; line-height: 0px; color:#012E57; ">
                  Hold Time</p>
          </div>
  
  
          <div id="item-3"
              style="display: flex; align-items: center; justify-content:center; background-color:#E6F3FF; border-radius: 0 0 0 7.5px; grid-row-start: 2; grid-column-start: 1; grid-row-end: 3; grid-column-end: 2; border-top: 2px solid #ffffff;">
              <p id="contractions_no_1<%=i%>"
                  style="font-family: 'Roboto'; font-style: normal; font-weight: 550; font-size: 13.3px; line-height: 0px; color:#012E57; ">
                  </p>
          </div>
  
          <div id="item-4"
              style="display: flex; align-items: center; justify-content:center; border: 1.3px solid #E3E3E3; grid-row-start: 2; grid-column-start: 2; grid-row-end: 3; grid-column-end: 3;">
              <p id="contractions_rep_1<%=i%>"
                  style=" font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 13.3px; line-height: 0px; color:#012E57; ">
                  </p>
          </div>
  
          <div id="item-5"
              style="display: flex; align-items: center; justify-content:center;   border-right: 1.3px solid #E3E3E3;   border-top: 1.3px solid #E3E3E3; border-bottom: 1.3px solid #E3E3E3;border-radius: 0 0 7.5px 0 ;  grid-row-start: 2; grid-column-start: 3; grid-row-end: 3; grid-column-end: 4;">
              <p
                  style="font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 13.3px; line-height: 0px; color:#012E57;">
                  <%=get_hold_time(e.holdtime)%></p>
          </div>
  
      </div>
  </div>
  

  </section>

<section  style=" position: relative; top: 203px;  width: 476px; height: 170px; left: 24px; display: flex; flex-direction: column; align-items: center;justify-content: space-between;">
  <div style="width: inherit; height: 13px; background-color: #DAF2D5 !important;"></div>
  <p style="font-family: 'Roboto'; width:inherit;font-style: normal; font-weight: 500; font-size: 60px; line-height: 56px;text-align: center; color:#DAF2D5 !important;">Isometric &<br>Healthy Side Data</p>
  <div style="width: inherit; height: 13px; background-color: #DAF2D5 !important;"></div>
</section>
<% } %>

<% if( details[0].phiziopatients[0].patientinjured != e.orientation && details[0].phiziopatients[0].patientinjured !="Bi-Lateral" && e.exercisename!="Isometric") { %>
  <section  style=" position: relative; margin-top: 243px;  width: 476px; height: 130px; left: 30px; display: flex; flex-direction: column; align-items: center;justify-content: space-between;">
    <div style="width: inherit; height: 13px; background-color: #DAF2D5 !important;"></div>
    <div style="font-family: 'Roboto'; font-style: normal; font-weight: 500; font-size: 60px; line-height: 56px;  color:#DAF2D5 !important;">Healthy Side Data</div>
    <div style="width: inherit; height: 13px; background-color: #DAF2D5 !important;"></div>
  </section>
<% } %>



</section>



<section id="right-side" style=" position: relative; height: 760pt; width: 34%; padding: 15pt 18px 15pt 0; box-sizing: border-box;">
  <div id="sec-statements" style="height: 730pt; width: 236px;box-sizing: border-box; border: 0.8px solid #012E57; border-radius: 7px;">
 
 <div style="display: flex;
  flex-direction: column;
  /* align-items: flex-start; */
  position: relative;
  padding: 0px;
  gap: 16px;
  width: 200px;
 height: 230px;
 left: 12px;
 top: 16px; ">

      <p style="font-family: 'Roboto';
      font-style: normal;
      font-weight: 500;
      font-size: 18px;
      line-height: 16px;
       /* margin-left: 12px; */
       text-align: center;
      color: #012E57;">Summary</p>

<% if(lastsessions_array[i]!=0) { %>
      <p style="font-family: 'Roboto';
      font-style: normal;
      font-weight: 400;
      font-size: 13px;
      line-height: 22px;
      display: flex;
      align-items: center;
      margin-left: 22px;margin-top: 40px;
      color: #012E57;"><%=hypermobility(report[0].sessiondetails,lastsessions_array[i])%></p>
      <% } %>


      <p style="font-family: 'Roboto';
      font-style: normal;
      font-weight: 400;
      font-size: 13px;
      line-height: 22px;
      display: flex;margin-left: 22px;
      align-items: center;  margin-top: 20px;
      
      color: #012E57;"><%=hypermobility_no(report,lastsessions)[i]%></p>

  </div>



  </div>
</section>

</section>
             
       <!-- Footer for Page-3 --> 

    <div style="width: 100%;height: 29pt;background-color:#062444 !important;float:bottom;position:absolute;bottom:0pt;top:833.5pt">
     <p style="color:#FFFFFF !important;text-align: right;font-size:11pt; font-family: 'Roboto';position:absolute;bottom:5pt;right:5pt;"> Page <%if(report[0].sessiondetails.length < 13) { %> <%=i+2%>/<%=report[0].sessiondetails.length+2%> <% } %> <%if(report[0].sessiondetails.length >= 13) { %> <%=i+3%>/<%=report[0].sessiondetails.length+3%> <% } %> </p>
     <p style="color:#FFFFFF !important;text-align: center;font-size:11pt; font-family: 'Roboto';position:relative;top:6pt"><%if(details[0].phiziopatients[0].patientgender.toLowerCase() == 'male' || details[0].phiziopatients[0].patientgender.toLowerCase() == 'm'){%>Mr. <%}else {%> Ms. <%}%> <%= details[0].phiziopatients[0].patientname.substr(0,1).toUpperCase()%><%= details[0].phiziopatients[0].patientname.substr(1,details[0].phiziopatients[0].patientname.length)%> </p>   
      <p style="color:#FFFFFF !important;text-align: left;font-size:11pt; font-family: 'Roboto';position:absolute;bottom:5pt;left: 5pt;">Report downloaded on <%= new Date(today).toDateString().split(' ').slice(1).join(' ')%> </p>

    </div>
  
      </div>


<script>

google.charts.load('current', {packages: ['corechart', 'line']});
google.charts.load('current', {'packages':['corechart']});
google.charts.setOnLoadCallback(drawBackgroundColor);
google.charts.load('current', {packages: ['corechart', 'bar']});


var ps="<%=e.painscale%>";
var pain_scale=Number(ps);
if(pain_scale==0){
    document.getElementById("pain_level<%=i%>").innerHTML='No Pain'
    document.getElementById("pain_level<%=i%>").style.color='#44C02F'
} else if(pain_scale==1|| pain_scale==2|| pain_scale==3){
    document.getElementById("pain_level<%=i%>").innerHTML='Mild Pain'
    document.getElementById("pain_level<%=i%>").style.color='#44C02F'
} else if(pain_scale==4|| pain_scale==5|| pain_scale==6){
    document.getElementById("pain_level<%=i%>").innerHTML='Moderate'
    document.getElementById("pain_level<%=i%>").style.color='#E6A000'
} else if(pain_scale==7|| pain_scale==8|| pain_scale==9){
    document.getElementById("pain_level<%=i%>").innerHTML='Severe'
    document.getElementById("pain_level<%=i%>").style.color='#CC2016'
} else if(pain_scale==10){
    document.getElementById("pain_level<%=i%>").innerHTML='Worst Pain'
    document.getElementById("pain_level<%=i%>").style.color='#CC2016'
}



// Co-Ordination Start
var coordination_value = 0;
<% report[0].sessiondetails.map((h,j)=>{ %>


if('<%=python_variables[j].download_time_stamp%>' == '<%= e.heldon%>')
{
  var coordination_value=Math.round(<%=python_variables[j].coordination%>);
  var overall_range_gained_30sec = <%=python_variables[j].velocity%>
}
//e.heldon == download_time_s.lengthtamp[j]

<%});%>


if(coordination_value ==1){
document.getElementById("coordination_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked" style="color:#D22424 !important"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
 document.getElementById("coordination_level<%=i%>").innerHTML = 'Poor'
   document.getElementById("coordination_level<%=i%>").style.color = '#D22424'
} else if(coordination_value ==2){
document.getElementById("coordination_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked" style="color:#E6A000  !important"></span><span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
 document.getElementById("coordination_level<%=i%>").innerHTML = 'Average'
   document.getElementById("coordination_level<%=i%>").style.color = '#E6A000'
} else if(coordination_value ==3){
document.getElementById("coordination_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star checked" style="color:#E6A000  !important"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
 document.getElementById("coordination_level<%=i%>").innerHTML = 'Average'
   document.getElementById("coordination_level<%=i%>").style.color = '#E6A000'
} else if(coordination_value ==4){
document.getElementById("coordination_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span>'
 document.getElementById("coordination_level<%=i%>").innerHTML = 'Great'
   document.getElementById("coordination_level<%=i%>").style.color = '#44C02F'
}else if(coordination_value ==5){
  document.getElementById("coordination_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span>'
   document.getElementById("coordination_level<%=i%>").innerHTML = 'Great'
   document.getElementById("coordination_level<%=i%>").style.color = '#44C02F'
}
else{
document.getElementById("coordination_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}
coordination_value=0;
// Ending Co-Ordination


//

var consistency_value = 0;
<% report[0].sessiondetails.map((h,j)=>{ %>


if('<%=python_variables[j].download_time_stamp%>' == '<%= e.heldon%>')
{
  var consistency_value=Math.round(<%=python_variables[j].consistency%>);
  var overall_range_gained_30sec = <%=python_variables[j].velocity%>

}
//e.heldon == download_time_s.lengthtamp[j]

<%});%>


if(consistency_value ==1){
  document.getElementById("consistency_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked" style="color:#D22424 !important"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
   document.getElementById("consistency_level<%=i%>").innerHTML = 'Poor'
   document.getElementById("consistency_level<%=i%>").style.color = '#D22424'
} else if(consistency_value ==2){
  document.getElementById("consistency_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked" style="color:#E6A000  !important"></span><span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
   document.getElementById("consistency_level<%=i%>").innerHTML = 'Average'
   document.getElementById("consistency_level<%=i%>").style.color = '#E6A000'
} else if(consistency_value ==3){
  document.getElementById("consistency_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star checked" style="color:#E6A000  !important"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
   document.getElementById("consistency_level<%=i%>").innerHTML = 'Average'
   document.getElementById("consistency_level<%=i%>").style.color = '#E6A000'
} else if(consistency_value ==4){
  document.getElementById("consistency_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span>'
   document.getElementById("consistency_level<%=i%>").innerHTML = 'Great'
   document.getElementById("consistency_level<%=i%>").style.color = '#44C02F'
}else if(consistency_value ==5){
document.getElementById("consistency_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span>'
 document.getElementById("consistency_level<%=i%>").innerHTML = 'Great'
 document.getElementById("consistency_level<%=i%>").style.color = '#44C02F'
}
else{
document.getElementById("consistency_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}
consistency_value=0;

//
var smoothness_value = 0;
<% report[0].sessiondetails.map((h,j)=>{ %>


if('<%=python_variables[j].download_time_stamp%>' == '<%= e.heldon%>')
{
  smoothness_value=Math.round(<%=python_variables[j].smoothness%>);
}
//e.heldon == download_time_s.lengthtamp[j]

<%});%>
// Smoothness Element



if(smoothness_value ==1){
  document.getElementById("smoothness_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked" style="color:#D22424 !important"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
   document.getElementById("smoothness_level<%=i%>").innerHTML = 'Poor'
   document.getElementById("smoothness_level<%=i%>").style.color = '#D22424'
}else if(smoothness_value ==2){
  document.getElementById("smoothness_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
   document.getElementById("smoothness_level<%=i%>").innerHTML = 'Average'
   document.getElementById("smoothness_level<%=i%>").style.color = '#E6A000'
}else if(smoothness_value ==3){
  document.getElementById("smoothness_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
   document.getElementById("smoothness_level<%=i%>").innerHTML = 'Average'
   document.getElementById("smoothness_level<%=i%>").style.color = '#E6A000'
}else if(smoothness_value ==4){
document.getElementById("smoothness_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span>'
 document.getElementById("smoothness_level<%=i%>").innerHTML = 'Great'
 document.getElementById("smoothness_level<%=i%>").style.color = '#44C02F'
}else if(smoothness_value ==5){
  document.getElementById("smoothness_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span>'
document.getElementById("smoothness_level<%=i%>").innerHTML = 'Great'
 document.getElementById("smoothness_level<%=i%>").style.color = '#44C02F'
}else{
document.getElementById("smoothness_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked "></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}
smoothness_value = 0;


// Control Element
var controlled_value=0;

<% report[0].sessiondetails.map((h,j)=>{ %>


if('<%=python_variables[j].download_time_stamp%>' == '<%= e.heldon%>')
{
  controlled_value=Math.round(<%=python_variables[j].controlled%>);
}
//e.heldon == download_time_s.lengthtamp[j]

<%});%>


if(controlled_value ==1){
  document.getElementById("controlled_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked" style="color:#D22424 !important"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
   document.getElementById("controlled_level<%=i%>").innerHTML = 'Poor'
   document.getElementById("controlled_level<%=i%>").style.color = '#D22424'
}else if(controlled_value ==2){
  document.getElementById("controlled_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
   document.getElementById("controlled_level<%=i%>").innerHTML = 'Average'
   document.getElementById("controlled_level<%=i%>").style.color = '#E6A000'
}else if(controlled_value ==3){
  document.getElementById("controlled_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star checked" style="color:#E6A000 !important"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
   document.getElementById("controlled_level<%=i%>").innerHTML = 'Average'
   document.getElementById("controlled_level<%=i%>").style.color = '#E6A000'
}else if(controlled_value ==4){
document.getElementById("controlled_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span>'
 document.getElementById("controlled_level<%=i%>").innerHTML = 'Great'
 document.getElementById("controlled_level<%=i%>").style.color = '#44C02F'
}else if(controlled_value >=5){
document.getElementById("controlled_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span>'
 document.getElementById("controlled_level<%=i%>").innerHTML = 'Great'
 document.getElementById("controlled_level<%=i%>").style.color = '#44C02F'
}else{
document.getElementById("controlled_rating<%=i%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}
controlled_value=0;

//
activity_list_temp=[];
let get_emg_raw<%=i+1%> = [];
let get_rom_raw<%=i+1%> = [];
<% report[0].sessiondetails.map((h,j)=>{ %>


if('<%= download_time_stamp[j]%>' == '<%= e.heldon%>')
{
  get_emg_raw<%=i+1%> = "<%= download_result_emg[j]%>"; 
  get_rom_raw<%=i+1%> = "<%= download_result_rom[j]%>";
}
//e.heldon == download_time_s.lengthtamp[j]

<%});%>



//get_emg_raw<%=i+1%> = "<%= download_result_emg[i]%>"; 
emg_data_string<%=i+1%> = get_emg_raw<%=i+1%>.toString().split(",");
emg_data_int<%=i+1%>= emg_data_string<%=i+1%>.map(Number);



//get_rom_raw<%=i+1%> = "<%= download_result_rom[i]%>"; 
rom_data_string<%=i+1%> = get_rom_raw<%=i+1%>.toString().split(",");
rom_data_int<%=i+1%>= rom_data_string<%=i+1%>.map(Number);

function drawBackgroundColor() {



  if(("<%=e.orientation%>"!= "<%=details[0].phiziopatients[0].patientinjured%>")&& ("<%=details[0].phiziopatients[0].patientinjured%>"!="Bi-Lateral")){
      
  var data<%=i+1%> = new google.visualization.DataTable();
    data<%=i+1%>.addColumn('number', 'x');
    data<%=i+1%>.addColumn('number', 'EMG');
    data<%=i+1%>.addColumn('number', 'color band 1');

    for(var i = 0; i < 1500; i++){
      var emg_max_done=<%=e.maxemg%>;

    data<%=i+1%>.addRows([
  [i*0.02,emg_data_int<%=i+1%>[i], emg_max_done]
    ]);

    if(i>emg_data_int<%=i+1%>.length){break;}

  }
    var options = {

      isStacked: true,
       legend: 'none',
      hAxis: {
        titleTextStyle: {italic: false},
        title: 'Time (s)',
        format:'# ',
        gridlines: {
          color: 'transparent'
        },
        baselineColor: 'white'

      },
       chartArea: {
        left:30,
        top:10,
        width: 300,
        height: 100,
      },
      vAxis: {
        viewWindowMode: 'explicit',
      viewWindow: {
          min: 0,
      },
        format:'# ',
        gridlines: {
          color: 'transparent'
        },
        baselineColor: 'white'
      },
      colors:['#4471C4'],
      enableInteractivity: false,  

      series: {
                    0: {
                        type: 'line',
                        lineWidth: 2,
                        color: '#5F85CC'

                    },
                    1: {
                        areaOpacity: 1,
                        color: '#DAF2D5',
                        lineWidth: 0,
                        type: 'area',
                        visibleInLegend: false,
                        enableInteractivity: false
                    },
                }               

    };
  } else{
    var data<%=i+1%> = new google.visualization.DataTable();
    data<%=i+1%>.addColumn('number', 'x');
    data<%=i+1%>.addColumn('number', 'EMG');
    data<%=i+1%>.addColumn('number', 'color band 1');
    data<%=i+1%>.addColumn('number', 'color band 2');


    for(var i = 0; i < 1500; i++){
    
      var emg_max_done=<%=e.maxemg%>;
      var emg_target=Number(<%=e.maxemgselected%>);

      if(emg_max_done > emg_target){
       emg_target=0;
      }else{
        emg_target=emg_target-emg_max_done;
      }


    data<%=i+1%>.addRows([
  [i*0.02,emg_data_int<%=i+1%>[i], emg_max_done, emg_target]
    ]);

    if(i>emg_data_int<%=i+1%>.length){break;}

  }

    var options = {

      isStacked: true,
       legend: 'none',
      hAxis: {
        titleTextStyle: {italic: false},
        title: 'Time (s)',
        format:'# ',
        gridlines: {
          color: 'transparent'
        },
        baselineColor: 'white'

      },
       chartArea: {
        left:30,
        top:10,
        width: 300,
        height: 100,
      },
      vAxis: {
        viewWindowMode: 'explicit',
      viewWindow: {
          min: 0,
      },
        format:'# ',
        gridlines: {
          color: 'transparent'
        },
        baselineColor: 'white'
      },
      colors:['#4471C4'],
      enableInteractivity: false,  

      series: {
                    0: {
                        type: 'line',
                        lineWidth: 2,
                        color: '#5F85CC'

                    },
                    1: {
                        areaOpacity: 1,
                        color: '#FFFAE0',
                        lineWidth: 0,
                        type: 'area',
                        visibleInLegend: false,
                        enableInteractivity: false
                    },
                    2: {
                        areaOpacity: 1,
                        color: '#DAF2D5',
                        lineWidth: 0,
                        type: 'area',
                        visibleInLegend: false,
                        enableInteractivity: false
                    },


                }

    };


  }

    var chart<%=i+1%> = new google.visualization.LineChart(document.getElementById('chartemg<%=i%>'));
    chart<%=i+1%>.draw(data<%=i+1%>, options);

  }


  var contractions_no = 0;
var cont_rep_speed;
var cont_rep_sec;
var contractions_rep;
<% report[0].sessiondetails.map((h,j)=>{ %>


if('<%=python_variables[j].download_time_stamp%>' == '<%= e.heldon%>')
{
  contractions_no=Number(<%=python_variables[j].contractions%>);
  cont_rep_sec= (Number('<%= e.activetime[0]%>'+'<%=e.activetime[1]%>')*60)+Number('<%= e.activetime[5]%>'+'<%=e.activetime[6]%>');
  cont_rep_speed= (contractions_no/cont_rep_sec).toFixed(2);
  contractions_rep=cont_rep_speed+" Contr/sec"
  if(cont_rep_sec==0 ){contractions_rep="-"}
  document.getElementById("contractions_no<%=i%>").innerHTML =  contractions_no;
  document.getElementById("contractions_rep<%=i%>").innerHTML =  contractions_rep;
  document.getElementById("contractions_no_1<%=i%>").innerHTML =  contractions_no;
  document.getElementById("contractions_rep_1<%=i%>").innerHTML =  contractions_rep;
}
<%});%>


</script>

      <%});%>
   
<!--PAGE 3-->
<div class="page">

  <div class="header" style="height: 10pt;width: 100%;background-color: #062444 !important;"></div>
    

    <div id="add-cont"
    style="display: flex; flex-direction: row; align-items: center; justify-content: space-between ;padding: 0px;  width: inherit; height: 19px; left: 0px; margin-top: 22px;">

    <div class="add-col" style="width: 312px; height: 0px; border: 3px solid #CDCDCD;"></div>
    <div id="add-name"
        style=" font-family: 'Roboto'; font-style: normal; font-weight: 700; font-size: 14pt; line-height: 19px; color: #707070;">
        Additional Comment</div>
    <div class="add-col" style="width: 312px; height: 0px; border: 3px solid #CDCDCD;"></div>

</div>
    
    <hr style="width:95%;text-align:center;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;background-color:#E3E3E3 !important;margin-top:60px;">
    <hr style="width:95%;text-align:center;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;background-color:#E3E3E3 !important;margin-top:30px;">
    <hr style="width:95%;text-align:center;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;background-color:#E3E3E3 !important;margin-top:30px;">
    <hr style="width:95%;text-align:center;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;background-color:#E3E3E3 !important;margin-top:30px;">
    
    
    <p style="float:left;margin-left:2.5%;margin-top:30px;font-size:13px;font-weight:5px;color: #062545 !important;font-size:14pt; font-family: 'Roboto';">Next Session:</p>
    <hr style="float:left;width:40%;margin-top:50px;text-align:left;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;color:gray !important;background-color:gray !important;">
    
    <p style="float:left;margin-top:30px;margin-left:40px;font-size:13px;font-weight:5px;color: #062545 !important;font-size:14pt; font-family: 'Roboto';">Time:</p>
    <hr style="float:left;width:30%;margin-top:50px;text-align:left;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;color:gray !important;background-color:gray !important;">
    
    <p style="clear:both;float:left;margin-left:2.5%;margin-top:30px;font-size:13px;font-weight:5px;color: #062545 !important;font-size:14pt; font-family: 'Roboto';">Report handed over by:</p>
    <hr style="float:left;width:40%;margin-top:50px;text-align:left;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;color:gray !important;background-color:gray !important;">
    
    <p style="float:left;margin-top:30px;margin-left:40px;font-size:13px;font-weight:5px;color: #062545 !important;font-size:14pt; font-family: 'Roboto';">Dept:</p>
    <hr style="float:left;width:20%;margin-top:50px;text-align:left;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;color:gray !important;background-color:gray !important;">
    
    <p style="clear:both;float:left;margin-left:2.5%;margin-top:100px;margin-bottom:30px;font-size:13px;font-weight:5px;color: #062545 !important;font-size:14pt; font-family: 'Roboto';">Seal & Signature</p>
    <p style="float:left;margin-left:31%;margin-top:100px;margin-bottom:30px;font-size:13px;width: auto;font-weight:5px;color: #062545 !important;font-size:14pt; font-family: 'Roboto';">Caregiver's Contact No.</p>
    <hr style="float:left;margin-left:0%;width:20%;margin-top:120px;height:0.5px;border-width:0;color:gray !important;background-color:gray !important;">
    
    
  

  <div class="terms_and_conditions" style="clear:both;position:relative; top:30px;width:100%;height: auto;">
    <div id="term-cont" style="display: flex; flex-direction: row; align-items: center; justify-content: space-between ;padding: 0px;  width: inherit; height: 19px; left: 0px;">
      <div class="term-col" style=" width: 312px; height: 0px; border: 3px solid #006CB5;"></div>
      <div id="term-name" style="font-family: 'Roboto'; font-style: normal; font-weight: 700; font-size: 14pt; line-height: 19px; color: #006CB5;">Terms & Conditions</div>
      <div class="term-col" style=" width: 312px; height: 0px; border: 3px solid #006CB5;"></div>
  </div>
  
  <ul style="position:relative;top:20px;left:20pt;margin-left:10pt; margin-right:10pt;list-style-type: disc;">
  
  <li style="font-size:13px;font-weight:5px;margin-top:20px;margin-right:20pt;font-family: 'Helvetica';color: #707070;">The reported results are for information and interpretation of the referring doctor/ physiotherapist or such medical
professional who understands reporting units, reference ranges and limitations of technologies.</li>
  
  <li style="font-size:13px;font-weight:5px;margin-top:20px;margin-right:20pt;font-family: 'Helvetica';color: #707070;">It is presumed that the assessment tests are performed on the patient named or identified and the verification of the
particulars have been cleared out by the patient or his/her representative at the point of generation of this report.
The reported results are restricted to the given patient only.</li>
  
  <li style="font-size:13px;font-weight:5px;margin-top:20px;margin-right:20pt;font-family: 'Helvetica';color: #707070;">Should the results indicate an unexpected abnormality, the same should be reconfirmed.</li>
    
  <li style="font-size:13px;font-weight:5px;margin-top:20px;margin-right:20pt;font-family: 'Helvetica';color: #707070;">Results may vary from one center to another and from time to time for the same parameter for the same patient.
Assessments are performed in accordance with standard set procedures. Neither the physiotherapy center
(including its employees, representatives) using Pheezee nor the manufacturer of Pheezee (Startoon Labs and its
employees, representatives) assume any liability, responsibility for any loss or damage that may be incurred by any
person as a result of presuming the meaning or contents of this report.</li>
  
  <li style="font-size:13px;font-weight:5px;margin-top:20px;margin-right:20pt;font-family: 'Helvetica';color: #707070;">This report is not valid for medico-legal purposes.</li>
  
</ul>  

<p style="position:relative;font-size:13px;font-weight:5px;top:44px;left:20px;color: #707070;font-family: 'Helvetica';"><b>Suggestions</b></p>

    <ul style="position:relative;top:34px;margin-left:10pt; margin-right:10pt;list-style-type: disc;left:20pt;">
    <li style="font-size:13px;font-weight:5px;margin-top:20px;font-family: 'Helvetica';color: #707070;">Values out of reference range requires reconfirmation before starting any medical treatment.</li>
  <li style="font-size:13px;font-weight:5px;margin-top:20px;font-family: 'Helvetica';color: #707070;">Retesting/reassessment is needed if you suspect any quality shortcomings.</li>
  </ul>
  </div>

  <!-- Footer of last page-->
        <div style="width: 100%;height: 29pt;background-color:#062444 !important;position:relative;bottom:0pt;top:96pt">
          <p style="color:#FFFFFF !important;text-align: right;font-size:11pt; font-family: 'Roboto';position:absolute;bottom:5pt;right:5pt;"> Page <%=report[0].sessiondetails.length+2%>/<%=report[0].sessiondetails.length+2%> </p>
        <p style="color:#FFFFFF !important;text-align: center;font-size:11pt; font-family: 'Roboto';position:relative;top:6pt"> <%if(details[0].phiziopatients[0].patientgender.toLowerCase() == 'male' || details[0].phiziopatients[0].patientgender.toLowerCase() == 'm'){%>Mr. <%}else {%> Ms. <%}%> <%= details[0].phiziopatients[0].patientname.substr(0,1).toUpperCase()%><%= details[0].phiziopatients[0].patientname.substr(1,details[0].phiziopatients[0].patientname.length)%> </p> 
        <p style="color:#FFFFFF !important;text-align: left;font-size:11pt; font-family: 'Roboto';position:absolute;bottom:5pt;left: 5pt;">Report downloaded on <%= new Date(today).toDateString().split(' ').slice(1).join(' ')%> </p>
      </div>
<!-- Footer of last page-->
      
</div>



   </body>
 
</html>

<% } %>
  